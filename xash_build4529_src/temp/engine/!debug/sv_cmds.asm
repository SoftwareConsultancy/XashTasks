; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\USER\Documents\GitHub\XashTasks\xash_build4529_src\engine\server\sv_cmds.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_SV_BroadcastCommand
PUBLIC	_SV_BroadcastPrintf
PUBLIC	_SV_InitOperatorCommands
PUBLIC	_SV_KillOperatorCommands
PUBLIC	_SV_ClientPrintf
PUBLIC	_SV_Status_f
PUBLIC	_SV_InitHostCommands
PUBLIC	_SV_ValidateMap
PUBLIC	_SV_Map_f
PUBLIC	_SV_MapBackground_f
PUBLIC	_SV_NextMap_f
PUBLIC	_SV_NewGame_f
PUBLIC	_SV_HazardCourse_f
PUBLIC	_SV_Load_f
PUBLIC	_SV_QuickLoad_f
PUBLIC	_SV_Save_f
PUBLIC	_SV_QuickSave_f
PUBLIC	_SV_DeleteSave_f
PUBLIC	_SV_AutoSave_f
PUBLIC	_SV_Restart_f
PUBLIC	_SV_Reload_f
PUBLIC	_SV_ChangeLevel_f
PUBLIC	_SV_ChangeLevel2_f
PUBLIC	_SV_Kick_f
PUBLIC	_SV_EntPatch_f
PUBLIC	_SV_ConSay_f
PUBLIC	_SV_Heartbeat_f
PUBLIC	_SV_ServerInfo_f
PUBLIC	_SV_LocalInfo_f
PUBLIC	_SV_ClientInfo_f
PUBLIC	_SV_KillServer_f
PUBLIC	_SV_PlayersOnly_f
PUBLIC	_SV_EdictUsage_f
PUBLIC	_SV_EntityInfo_f
PUBLIC	__real@00000000
PUBLIC	__real@c0f869f000000000
EXTRN	_Cbuf_AddText:PROC
EXTRN	_Cmd_Argc:PROC
EXTRN	_Cmd_Args:PROC
EXTRN	_Cmd_Argv:PROC
EXTRN	_Cmd_AddCommand:PROC
EXTRN	_Cmd_RemoveCommand:PROC
EXTRN	_Q_strlen:PROC
EXTRN	_Q_strncat:PROC
EXTRN	_Q_strncpy:PROC
EXTRN	__copystring:PROC
EXTRN	_Q_isdigit:PROC
EXTRN	_Q_atoi:PROC
EXTRN	_Q_atof:PROC
EXTRN	_Q_strnicmp:PROC
EXTRN	_Q_strncmp:PROC
EXTRN	_Q_vsnprintf:PROC
EXTRN	_Q_snprintf:PROC
EXTRN	_va:PROC
EXTRN	__Mem_Free:PROC
EXTRN	_Cvar_FindVarExt:PROC
EXTRN	_Cvar_FullSet:PROC
EXTRN	_Cvar_DirectSet:PROC
EXTRN	_Cvar_VariableInteger:PROC
EXTRN	_Cvar_VariableString:PROC
EXTRN	_NET_IsLocalAddress:PROC
EXTRN	_NET_BaseAdrToString:PROC
EXTRN	_COM_FileBase:PROC
EXTRN	_COM_FileExtension:PROC
EXTRN	_FS_Search:PROC
EXTRN	_FS_FileExists:PROC
EXTRN	_FS_Delete:PROC
EXTRN	_COM_StripExtension:PROC
EXTRN	_Host_EndGame:PROC
EXTRN	_Host_ShutdownServer:PROC
EXTRN	_COM_NewGame:PROC
EXTRN	_COM_LoadLevel:PROC
EXTRN	_SV_Active:PROC
EXTRN	_Con_DPrintf:PROC
EXTRN	_Con_Printf:PROC
EXTRN	_pfnNumberOfEntities:PROC
EXTRN	_Log_Printf:PROC
EXTRN	_SV_Serverinfo:PROC
EXTRN	_Info_SetValueForStarKey:PROC
EXTRN	_Info_Print:PROC
EXTRN	_MSG_WriteCmdExt:PROC
EXTRN	_MSG_WriteString:PROC
EXTRN	_SV_DropClient:PROC
EXTRN	_SV_CalcPing:PROC
EXTRN	_SV_CheckEdict:PROC
EXTRN	_SV_QueueChangeLevel:PROC
EXTRN	_SV_WriteEntityPatch:PROC
EXTRN	_SV_GetString:PROC
EXTRN	_SV_MapIsValid:PROC
EXTRN	_SV_EdictNum:PROC
EXTRN	_SV_SaveGame:PROC
EXTRN	_SV_LoadGame:PROC
EXTRN	_SV_GetLatestSave:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_sv_maxclients:DWORD
EXTRN	_host:BYTE
EXTRN	_SI:BYTE
EXTRN	_svs:BYTE
EXTRN	_sv:BYTE
EXTRN	_svgame:BYTE
EXTRN	_sv_hostmap:DWORD
EXTRN	_con_gamemaps:DWORD
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@c0f869f000000000
CONST	SEGMENT
__real@c0f869f000000000 DQ 0c0f869f000000000r	; -99999
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
_DATA	SEGMENT
$SG136155 DB	'Bad client slot: %i', 0aH, 00H
	ORG $+3
$SG136157 DB	'Client %i is not active', 0aH, 00H
	ORG $+3
$SG136160 DB	'Userid %s is not on the server', 0aH, 00H
$SG136175 DB	'^1Error:^7 map %s is invalid or not supported', 0aH, 00H
	ORG $+1
$SG136177 DB	'^1Error:^7 map %s doesn''t exist', 0aH, 00H
	ORG $+3
$SG136179 DB	'^1Error:^7 map %s doesn''t have a valid spawnpoint', 0aH
	DB	00H
	ORG $+1
$SG136185 DB	'Usage: map <mapname>', 0aH, 00H
	ORG $+2
$SG136192 DB	'Usage: map_background <mapname>', 0aH, 00H
	ORG $+3
$SG136195 DB	'^1Error:^7 can''t set background map while game is activ'
	DB	'e', 0aH, 00H
	ORG $+2
$SG136197 DB	'1', 00H
	ORG $+2
$SG136198 DB	'maxplayers', 00H
	ORG $+1
$SG136199 DB	'0', 00H
	ORG $+2
$SG136200 DB	'deathmatch', 00H
	ORG $+1
$SG136201 DB	'0', 00H
	ORG $+2
$SG136202 DB	'coop', 00H
	ORG $+3
$SG136214 DB	'maps\*.bsp', 00H
	ORG $+1
$SG136216 DB	'maps/*.bsp', 00H
	ORG $+1
$SG136218 DB	'next map can''t be found', 0aH, 00H
	ORG $+3
$SG136220 DB	'bsp', 00H
$SG136223 DB	'c:\users\user\documents\github\xashtasks\xash_build4529_'
	DB	'src\engine\server\sv_cmds.c', 00H
$SG136224 DB	'failed to load next map', 0aH, 00H
	ORG $+3
$SG136225 DB	'c:\users\user\documents\github\xashtasks\xash_build4529_'
	DB	'src\engine\server\sv_cmds.c', 00H
$SG136230 DB	'Usage: newgame', 0aH, 00H
$SG136235 DB	'Usage: hazardcourse', 0aH, 00H
	ORG $+3
$SG136238 DB	'media/%s.avi', 00H
	ORG $+3
$SG136239 DB	'wait; movie %s', 0aH, 00H
$SG136240 DB	'The End', 00H
$SG136246 DB	'Usage: load <savename>', 0aH, 00H
$SG136247 DB	'save/', 00H
	ORG $+2
$SG136248 DB	'%s%s.sav', 00H
	ORG $+3
$SG136252 DB	'echo Quick Loading...; wait; load quick', 00H
$SG136259 DB	'new', 00H
$SG136262 DB	'Usage: save <savename>', 0aH, 00H
$SG136266 DB	'echo Quick Saving...; wait; save quick', 00H
	ORG $+1
$SG136271 DB	'Usage: killsave <name>', 0aH, 00H
$SG136272 DB	'save/', 00H
	ORG $+2
$SG136273 DB	'%s%s.sav', 00H
	ORG $+3
$SG136274 DB	'save/', 00H
	ORG $+2
$SG136275 DB	'%s%s.bmp', 00H
	ORG $+3
$SG136280 DB	'Usage: autosave', 0aH, 00H
	ORG $+3
$SG136281 DB	'autosave', 00H
	ORG $+3
$SG136296 DB	'Usage: changelevel <mapname>', 0aH, 00H
	ORG $+2
$SG136301 DB	'Usage: changelevel2 <mapname> <landmark>', 0aH, 00H
	ORG $+2
$SG136308 DB	'Usage: kick <userid> | <name>', 0aH, 00H
	ORG $+1
$SG136311 DB	'The local player cannot be kicked!', 0aH, 00H
$SG136312 DB	'Kick: "%s<%i>" was kicked', 0aH, 00H
	ORG $+1
$SG136313 DB	'%s was kicked', 0aH, 00H
	ORG $+1
$SG136314 DB	'You were kicked from the game', 0aH, 00H
	ORG $+1
$SG136323 DB	'Usage: entpatch <mapname>', 0aH, 00H
	ORG $+1
$SG136343 DB	'^3no server running.', 0aH, 00H
	ORG $+2
$SG136344 DB	'map: %s', 0aH, 00H
	ORG $+3
$SG136345 DB	'num score ping    name            lastmsg address       '
	DB	'        port ', 0aH, 00H
	ORG $+1
$SG136346 DB	'--- ----- ------- --------------- ------- --------------'
	DB	'------- ------', 0aH, 00H
$SG136348 DB	'%3i ', 00H
	ORG $+3
$SG136349 DB	'%5i ', 00H
	ORG $+3
$SG136352 DB	'Connect', 00H
$SG136355 DB	'Zombie ', 00H
$SG136358 DB	'Bot   ', 00H
	ORG $+1
$SG136359 DB	'%7i ', 00H
	ORG $+3
$SG136360 DB	'%s', 00H
	ORG $+1
$SG136361 DB	' ', 00H
	ORG $+2
$SG136362 DB	'%g ', 00H
$SG136363 DB	'%s', 00H
	ORG $+1
$SG136364 DB	' ', 00H
	ORG $+2
$SG136365 DB	'%5i', 00H
$SG136366 DB	0aH, 00H
	ORG $+2
$SG136367 DB	0aH, 00H
	ORG $+2
$SG136377 DB	'^3no server running.', 0aH, 00H
	ORG $+2
$SG136378 DB	'hostname', 00H
	ORG $+3
$SG136379 DB	'%s: ', 00H
	ORG $+3
$SG136381 DB	'%s', 0aH, 00H
$SG136382 DB	'Server say: "%s"', 0aH, 00H
	ORG $+2
$SG136393 DB	'Server info settings:', 0aH, 00H
	ORG $+1
$SG136394 DB	'Total %i symbols', 0aH, 00H
	ORG $+2
$SG136396 DB	'Usage: serverinfo [ <key> <value> ]', 0aH, 00H
	ORG $+3
$SG136398 DB	'Star variables cannot be changed.', 0aH, 00H
	ORG $+1
$SG136409 DB	'Total %i symbols', 0aH, 00H
	ORG $+2
$SG136401 DB	'c:\users\user\documents\github\xashtasks\xash_build4529_'
	DB	'src\engine\server\sv_cmds.c', 00H
$SG136411 DB	'Usage: localinfo [ <key> <value> ]', 0aH, 00H
$SG136402 DB	'c:\users\user\documents\github\xashtasks\xash_build4529_'
	DB	'src\engine\server\sv_cmds.c', 00H
$SG136403 DB	'fullserverinfo "%s"', 0aH, 00H
	ORG $+3
$SG136408 DB	'Local info settings:', 0aH, 00H
	ORG $+2
$SG136413 DB	'Star variables cannot be changed.', 0aH, 00H
	ORG $+1
$SG136420 DB	'Usage: clientinfo <userid>', 0aH, 00H
$SG136422 DB	'userinfo', 0aH, 00H
	ORG $+2
$SG136423 DB	'--------', 0aH, 00H
	ORG $+2
$SG136432 DB	'sv_cheats', 00H
	ORG $+2
$SG136433 DB	'Freeze', 00H
	ORG $+1
$SG136434 DB	'Resume', 00H
	ORG $+1
$SG136435 DB	'%s game physic', 0aH, 00H
$SG136441 DB	'^3no server running.', 0aH, 00H
	ORG $+2
$SG136442 DB	'%5i edicts is used', 0aH, 00H
$SG136443 DB	'%5i edicts is free', 0aH, 00H
$SG136444 DB	'%5i total', 0aH, 00H
	ORG $+1
$SG136454 DB	'^3no server running.', 0aH, 00H
	ORG $+2
$SG136457 DB	'%5i origin: %.f %.f %.f', 00H
$SG136459 DB	', class: %s', 00H
$SG136456 DB	'c:\users\user\documents\github\xashtasks\xash_build4529_'
	DB	'src\engine\server\sv_cmds.c', 00H
$SG136461 DB	', global: %s', 00H
	ORG $+3
$SG136463 DB	', name: %s', 00H
	ORG $+1
$SG136465 DB	', target: %s', 00H
	ORG $+3
$SG136467 DB	', model: %s', 00H
$SG136468 DB	0aH, 00H
	ORG $+2
$SG136471 DB	'start new level', 00H
$SG136472 DB	'map', 00H
$SG136474 DB	'begin new game', 00H
	ORG $+1
$SG136475 DB	'newgame', 00H
$SG136476 DB	'starting a Hazard Course', 00H
	ORG $+3
$SG136477 DB	'hazardcourse', 00H
	ORG $+3
$SG136478 DB	'set background map', 00H
	ORG $+1
$SG136479 DB	'map_background', 00H
	ORG $+1
$SG136480 DB	'load a saved game file', 00H
	ORG $+1
$SG136481 DB	'load', 00H
	ORG $+3
$SG136482 DB	'load a quick-saved game file', 00H
	ORG $+3
$SG136483 DB	'loadquick', 00H
	ORG $+2
$SG136484 DB	'continue from latest save or restart level', 00H
	ORG $+1
$SG136485 DB	'reload', 00H
	ORG $+1
$SG136486 DB	'delete a saved game file and saveshot', 00H
	ORG $+2
$SG136487 DB	'killsave', 00H
	ORG $+3
$SG136488 DB	'load next level', 00H
$SG136489 DB	'nextmap', 00H
$SG136492 DB	'send a heartbeat to the master server', 00H
	ORG $+2
$SG136493 DB	'heartbeat', 00H
	ORG $+2
$SG136494 DB	'kick a player off the server by number or name', 00H
	ORG $+1
$SG136495 DB	'kick', 00H
	ORG $+3
$SG136496 DB	'print server status information', 00H
$SG136497 DB	'status', 00H
	ORG $+1
$SG136498 DB	'examine or change the localinfo string', 00H
	ORG $+1
$SG136499 DB	'localinfo', 00H
	ORG $+2
$SG136500 DB	'examine or change the serverinfo string', 00H
$SG136501 DB	'serverinfo', 00H
	ORG $+1
$SG136502 DB	'print user infostring (player num required)', 00H
$SG136503 DB	'clientinfo', 00H
	ORG $+1
$SG136504 DB	'freezes time, except for players', 00H
	ORG $+3
$SG136505 DB	'playersonly', 00H
$SG136506 DB	'restarting current level', 00H
	ORG $+3
$SG136507 DB	'restart', 00H
$SG136508 DB	'write entity patch to allow external editing', 00H
	ORG $+3
$SG136509 DB	'entpatch', 00H
	ORG $+3
$SG136510 DB	'show info about edicts usage', 00H
	ORG $+3
$SG136511 DB	'edict_usage', 00H
$SG136512 DB	'show more info about edicts', 00H
$SG136513 DB	'entity_info', 00H
$SG136514 DB	'shutdown current server', 00H
$SG136515 DB	'shutdownserver', 00H
	ORG $+1
$SG136516 DB	'change level', 00H
	ORG $+3
$SG136517 DB	'changelevel', 00H
$SG136518 DB	'smooth change level', 00H
$SG136519 DB	'changelevel2', 00H
	ORG $+3
$SG136522 DB	'save the game to a file', 00H
$SG136523 DB	'save', 00H
	ORG $+3
$SG136524 DB	'save the game to the quicksave', 00H
	ORG $+1
$SG136525 DB	'savequick', 00H
	ORG $+2
$SG136526 DB	'save the game to ''autosave'' file', 00H
	ORG $+3
$SG136527 DB	'autosave', 00H
	ORG $+3
$SG136529 DB	'send a chat message to everyone on the server', 00H
	ORG $+2
$SG136530 DB	'say', 00H
$SG136533 DB	'heartbeat', 00H
	ORG $+2
$SG136534 DB	'kick', 00H
	ORG $+3
$SG136535 DB	'status', 00H
	ORG $+1
$SG136536 DB	'localinfo', 00H
	ORG $+2
$SG136537 DB	'serverinfo', 00H
	ORG $+1
$SG136538 DB	'clientinfo', 00H
	ORG $+1
$SG136539 DB	'playersonly', 00H
$SG136540 DB	'restart', 00H
$SG136541 DB	'entpatch', 00H
	ORG $+3
$SG136542 DB	'edict_usage', 00H
$SG136543 DB	'entity_info', 00H
$SG136544 DB	'shutdownserver', 00H
	ORG $+1
$SG136545 DB	'changelevel', 00H
$SG136546 DB	'changelevel2', 00H
	ORG $+3
$SG136549 DB	'save', 00H
	ORG $+3
$SG136550 DB	'savequick', 00H
	ORG $+2
$SG136551 DB	'autosave', 00H
	ORG $+3
$SG136553 DB	'say', 00H
_DATA	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_i$ = -8						; size = 4
_ent$ = -4						; size = 4
_SV_EntityInfo_f PROC

; 841  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 842  : 	edict_t	*ent;
; 843  : 	int	i;
; 844  : 
; 845  : 	if( sv.state != ss_active )

	cmp	DWORD PTR _sv, 2
	je	SHORT $LN5@SV_EntityI

; 846  : 	{
; 847  : 		Con_Printf( "^3no server running.\n" );

	push	OFFSET $SG136454
	call	_Con_Printf
	add	esp, 4

; 848  : 		return;

	jmp	$LN3@SV_EntityI
$LN5@SV_EntityI:

; 849  : 	}
; 850  : 
; 851  : 	for( i = 0; i < svgame.numEntities; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@SV_EntityI
$LN2@SV_EntityI:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@SV_EntityI:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _svgame+7932
	jge	$LN3@SV_EntityI

; 852  : 	{
; 853  : 		ent = EDICT_NUM( i );

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	call	_SV_EdictNum
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax

; 854  : 		if( !SV_IsValidEdict( ent )) continue;

	push	854					; 00000356H
	push	OFFSET $SG136456
	mov	eax, DWORD PTR _ent$[ebp]
	push	eax
	call	_SV_CheckEdict
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN6@SV_EntityI
	jmp	SHORT $LN2@SV_EntityI
$LN6@SV_EntityI:

; 855  : 
; 856  : 		Con_Printf( "%5i origin: %.f %.f %.f", i, ent->v.origin[0], ent->v.origin[1], ent->v.origin[2] );

	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _ent$[ebp]
	cvtss2sd xmm0, DWORD PTR [edx+ecx+136]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ent$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+eax+136]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ent$[ebp]
	cvtss2sd xmm0, DWORD PTR [ecx+eax+136]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	push	OFFSET $SG136457
	call	_Con_Printf
	add	esp, 32					; 00000020H

; 857  : 
; 858  : 		if( ent->v.classname )

	mov	eax, DWORD PTR _ent$[ebp]
	cmp	DWORD PTR [eax+128], 0
	je	SHORT $LN7@SV_EntityI

; 859  : 			Con_Printf( ", class: %s", STRING( ent->v.classname ));

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	call	_SV_GetString
	add	esp, 4
	push	eax
	push	OFFSET $SG136459
	call	_Con_Printf
	add	esp, 8
$LN7@SV_EntityI:

; 860  : 
; 861  : 		if( ent->v.globalname )

	mov	eax, DWORD PTR _ent$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN8@SV_EntityI

; 862  : 			Con_Printf( ", global: %s", STRING( ent->v.globalname ));

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	call	_SV_GetString
	add	esp, 4
	push	eax
	push	OFFSET $SG136461
	call	_Con_Printf
	add	esp, 8
$LN8@SV_EntityI:

; 863  : 
; 864  : 		if( ent->v.targetname )

	mov	eax, DWORD PTR _ent$[ebp]
	cmp	DWORD PTR [eax+588], 0
	je	SHORT $LN9@SV_EntityI

; 865  : 			Con_Printf( ", name: %s", STRING( ent->v.targetname ));

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx+588]
	push	edx
	call	_SV_GetString
	add	esp, 4
	push	eax
	push	OFFSET $SG136463
	call	_Con_Printf
	add	esp, 8
$LN9@SV_EntityI:

; 866  : 
; 867  : 		if( ent->v.target )

	mov	eax, DWORD PTR _ent$[ebp]
	cmp	DWORD PTR [eax+584], 0
	je	SHORT $LN10@SV_EntityI

; 868  : 			Con_Printf( ", target: %s", STRING( ent->v.target ));

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx+584]
	push	edx
	call	_SV_GetString
	add	esp, 4
	push	eax
	push	OFFSET $SG136465
	call	_Con_Printf
	add	esp, 8
$LN10@SV_EntityI:

; 869  : 
; 870  : 		if( ent->v.model )

	mov	eax, DWORD PTR _ent$[ebp]
	cmp	DWORD PTR [eax+312], 0
	je	SHORT $LN11@SV_EntityI

; 871  : 			Con_Printf( ", model: %s", STRING( ent->v.model ));

	mov	ecx, DWORD PTR _ent$[ebp]
	mov	edx, DWORD PTR [ecx+312]
	push	edx
	call	_SV_GetString
	add	esp, 4
	push	eax
	push	OFFSET $SG136467
	call	_Con_Printf
	add	esp, 8
$LN11@SV_EntityI:

; 872  : 
; 873  : 		Con_Printf( "\n" );

	push	OFFSET $SG136468
	call	_Con_Printf
	add	esp, 4

; 874  : 	}

	jmp	$LN2@SV_EntityI
$LN3@SV_EntityI:

; 875  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_EntityInfo_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_active$ = -4						; size = 4
_SV_EdictUsage_f PROC

; 819  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 820  : 	int	active;
; 821  : 
; 822  : 	if( sv.state != ss_active )

	cmp	DWORD PTR _sv, 2
	je	SHORT $LN2@SV_EdictUs

; 823  : 	{
; 824  : 		Con_Printf( "^3no server running.\n" );

	push	OFFSET $SG136441
	call	_Con_Printf
	add	esp, 4

; 825  : 		return;

	jmp	SHORT $LN1@SV_EdictUs
$LN2@SV_EdictUs:

; 826  : 	}
; 827  : 
; 828  : 	active = pfnNumberOfEntities(); 

	call	_pfnNumberOfEntities
	mov	DWORD PTR _active$[ebp], eax

; 829  : 	Con_Printf( "%5i edicts is used\n", active );

	mov	eax, DWORD PTR _active$[ebp]
	push	eax
	push	OFFSET $SG136442
	call	_Con_Printf
	add	esp, 8

; 830  : 	Con_Printf( "%5i edicts is free\n", GI->max_edicts - active );

	mov	ecx, DWORD PTR _SI+768
	mov	edx, DWORD PTR [ecx+1656]
	sub	edx, DWORD PTR _active$[ebp]
	push	edx
	push	OFFSET $SG136443
	call	_Con_Printf
	add	esp, 8

; 831  : 	Con_Printf( "%5i total\n", GI->max_edicts );

	mov	eax, DWORD PTR _SI+768
	mov	ecx, DWORD PTR [eax+1656]
	push	ecx
	push	OFFSET $SG136444
	call	_Con_Printf
	add	esp, 8
$LN1@SV_EdictUs:

; 832  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_EdictUsage_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
tv69 = -4						; size = 4
_SV_PlayersOnly_f PROC

; 804  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 805  : 	if( !Cvar_VariableInteger( "sv_cheats" )) return;

	push	OFFSET $SG136432
	call	_Cvar_VariableInteger
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@SV_Players
	jmp	SHORT $LN1@SV_Players
$LN2@SV_Players:

; 806  : 
; 807  : 	sv.playersonly ^= 1;

	mov	eax, DWORD PTR _sv+1359680
	xor	eax, 1
	mov	DWORD PTR _sv+1359680, eax

; 808  : 
; 809  : 	SV_BroadcastPrintf( NULL, "%s game physic\n", sv.playersonly ? "Freeze" : "Resume" );

	je	SHORT $LN4@SV_Players
	mov	DWORD PTR tv69[ebp], OFFSET $SG136433
	jmp	SHORT $LN5@SV_Players
$LN4@SV_Players:
	mov	DWORD PTR tv69[ebp], OFFSET $SG136434
$LN5@SV_Players:
	mov	ecx, DWORD PTR tv69[ebp]
	push	ecx
	push	OFFSET $SG136435
	push	0
	call	_SV_BroadcastPrintf
	add	esp, 12					; 0000000cH
$LN1@SV_Players:

; 810  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_PlayersOnly_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_KillServer_f PROC

; 792  : {

	push	ebp
	mov	ebp, esp

; 793  : 	Host_ShutdownServer();

	call	_Host_ShutdownServer

; 794  : }

	pop	ebp
	ret	0
_SV_KillServer_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_cl$ = -4						; size = 4
_SV_ClientInfo_f PROC

; 766  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 767  : 	sv_client_t	*cl;
; 768  : 
; 769  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_ClientI

; 770  : 	{
; 771  : 		Con_Printf( S_USAGE "clientinfo <userid>\n" );

	push	OFFSET $SG136420
	call	_Con_Printf
	add	esp, 4

; 772  : 		return;

	jmp	SHORT $LN1@SV_ClientI
$LN2@SV_ClientI:

; 773  : 	}
; 774  : 
; 775  : 	if(( cl = SV_SetPlayer( )) == NULL )

	call	_SV_SetPlayer
	mov	DWORD PTR _cl$[ebp], eax
	cmp	DWORD PTR _cl$[ebp], 0
	jne	SHORT $LN3@SV_ClientI

; 776  : 		return;

	jmp	SHORT $LN1@SV_ClientI
$LN3@SV_ClientI:

; 777  : 
; 778  : 	Con_Printf( "userinfo\n" );

	push	OFFSET $SG136422
	call	_Con_Printf
	add	esp, 4

; 779  : 	Con_Printf( "--------\n" );

	push	OFFSET $SG136423
	call	_Con_Printf
	add	esp, 4

; 780  : 	Info_Print( cl->userinfo );

	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	call	_Info_Print
	add	esp, 4
$LN1@SV_ClientI:

; 781  : 
; 782  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_ClientInfo_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_LocalInfo_f PROC

; 734  : {

	push	ebp
	mov	ebp, esp

; 735  : 	if( Cmd_Argc() == 1 )

	call	_Cmd_Argc
	cmp	eax, 1
	jne	SHORT $LN2@SV_LocalIn

; 736  : 	{
; 737  : 		Con_Printf( "Local info settings:\n" );

	push	OFFSET $SG136408
	call	_Con_Printf
	add	esp, 4

; 738  : 		Info_Print( svs.localinfo );

	push	OFFSET _svs+572
	call	_Info_Print
	add	esp, 4

; 739  : 		Con_Printf( "Total %i symbols\n", Q_strlen( svs.localinfo ));

	push	OFFSET _svs+572
	call	_Q_strlen
	add	esp, 4
	push	eax
	push	OFFSET $SG136409
	call	_Con_Printf
	add	esp, 8

; 740  : 		return;

	jmp	SHORT $LN1@SV_LocalIn
$LN2@SV_LocalIn:

; 741  : 	}
; 742  : 
; 743  : 	if( Cmd_Argc() != 3 )

	call	_Cmd_Argc
	cmp	eax, 3
	je	SHORT $LN3@SV_LocalIn

; 744  : 	{
; 745  : 		Con_Printf( S_USAGE "localinfo [ <key> <value> ]\n");

	push	OFFSET $SG136411
	call	_Con_Printf
	add	esp, 4

; 746  : 		return;

	jmp	SHORT $LN1@SV_LocalIn
$LN3@SV_LocalIn:

; 747  : 	}
; 748  : 
; 749  : 	if( Cmd_Argv(1)[0] == '*' )

	push	1
	call	_Cmd_Argv
	add	esp, 4
	mov	ecx, 1
	imul	edx, ecx, 0
	movsx	eax, BYTE PTR [eax+edx]
	cmp	eax, 42					; 0000002aH
	jne	SHORT $LN4@SV_LocalIn

; 750  : 	{
; 751  : 		Con_Printf( "Star variables cannot be changed.\n" );

	push	OFFSET $SG136413
	call	_Con_Printf
	add	esp, 4

; 752  : 		return;

	jmp	SHORT $LN1@SV_LocalIn
$LN4@SV_LocalIn:

; 753  : 	}
; 754  : 
; 755  : 	Info_SetValueForStarKey( svs.localinfo, Cmd_Argv(1), Cmd_Argv(2), MAX_LOCALINFO_STRING );

	push	32768					; 00008000H
	push	2
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET _svs+572
	call	_Info_SetValueForStarKey
	add	esp, 16					; 00000010H
$LN1@SV_LocalIn:

; 756  : }

	pop	ebp
	ret	0
_SV_LocalInfo_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_var$ = -4						; size = 4
_SV_ServerInfo_f PROC

; 690  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 691  : 	convar_t	*var;
; 692  : 
; 693  : 	if( Cmd_Argc() == 1 )

	call	_Cmd_Argc
	cmp	eax, 1
	jne	SHORT $LN2@SV_ServerI

; 694  : 	{
; 695  : 		Con_Printf( "Server info settings:\n" );

	push	OFFSET $SG136393
	call	_Con_Printf
	add	esp, 4

; 696  : 		Info_Print( svs.serverinfo );

	push	OFFSET _svs+60
	call	_Info_Print
	add	esp, 4

; 697  : 		Con_Printf( "Total %i symbols\n", Q_strlen( svs.serverinfo ));

	push	OFFSET _svs+60
	call	_Q_strlen
	add	esp, 4
	push	eax
	push	OFFSET $SG136394
	call	_Con_Printf
	add	esp, 8

; 698  : 		return;

	jmp	$LN1@SV_ServerI
$LN2@SV_ServerI:

; 699  : 	}
; 700  : 
; 701  : 	if( Cmd_Argc() != 3 )

	call	_Cmd_Argc
	cmp	eax, 3
	je	SHORT $LN3@SV_ServerI

; 702  : 	{
; 703  : 		Con_Printf( S_USAGE "serverinfo [ <key> <value> ]\n");

	push	OFFSET $SG136396
	call	_Con_Printf
	add	esp, 4

; 704  : 		return;

	jmp	$LN1@SV_ServerI
$LN3@SV_ServerI:

; 705  : 	}
; 706  : 
; 707  : 	if( Cmd_Argv(1)[0] == '*' )

	push	1
	call	_Cmd_Argv
	add	esp, 4
	mov	ecx, 1
	imul	edx, ecx, 0
	movsx	eax, BYTE PTR [eax+edx]
	cmp	eax, 42					; 0000002aH
	jne	SHORT $LN4@SV_ServerI

; 708  : 	{
; 709  : 		Con_Printf( "Star variables cannot be changed.\n" );

	push	OFFSET $SG136398
	call	_Con_Printf
	add	esp, 4

; 710  : 		return;

	jmp	$LN1@SV_ServerI
$LN4@SV_ServerI:

; 711  : 	}
; 712  : 
; 713  : 	// if this is a cvar, change it too	
; 714  : 	var = Cvar_FindVar( Cmd_Argv( 1 ));

	push	0
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_Cvar_FindVarExt
	add	esp, 8
	mov	DWORD PTR _var$[ebp], eax

; 715  : 	if( var )

	cmp	DWORD PTR _var$[ebp], 0
	je	SHORT $LN5@SV_ServerI

; 716  : 	{
; 717  : 		freestring( var->string ); // free the old value string	

	mov	ecx, DWORD PTR _var$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN6@SV_ServerI
	push	717					; 000002cdH
	push	OFFSET $SG136401
	mov	edx, DWORD PTR _var$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	__Mem_Free
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _var$[ebp]
	mov	DWORD PTR [ecx+4], 0
$LN6@SV_ServerI:

; 718  : 		var->string = copystring( Cmd_Argv( 2 ));

	push	718					; 000002ceH
	push	OFFSET $SG136402
	push	2
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _host+236
	push	edx
	call	__copystring
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _var$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 719  : 		var->value = Q_atof( var->string );

	mov	edx, DWORD PTR _var$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_Q_atof
	add	esp, 4
	mov	ecx, DWORD PTR _var$[ebp]
	fstp	DWORD PTR [ecx+12]
$LN5@SV_ServerI:

; 720  : 	}
; 721  : 
; 722  : 	Info_SetValueForStarKey( svs.serverinfo, Cmd_Argv( 1 ), Cmd_Argv( 2 ), MAX_SERVERINFO_STRING );

	push	512					; 00000200H
	push	2
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET _svs+60
	call	_Info_SetValueForStarKey
	add	esp, 16					; 00000010H

; 723  : 	SV_BroadcastCommand( "fullserverinfo \"%s\"\n", SV_Serverinfo( ));

	call	_SV_Serverinfo
	push	eax
	push	OFFSET $SG136403
	call	_SV_BroadcastCommand
	add	esp, 8
$LN1@SV_ServerI:

; 724  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_ServerInfo_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_Heartbeat_f PROC

; 678  : {

	push	ebp
	mov	ebp, esp

; 679  : 	svs.last_heartbeat = MAX_HEARTBEAT;

	movsd	xmm0, QWORD PTR __real@c0f869f000000000
	movsd	QWORD PTR _svs+33368, xmm0

; 680  : }

	pop	ebp
	ret	0
_SV_Heartbeat_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_p$ = -1032						; size = 4
_text$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_SV_ConSay_f PROC

; 647  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1032				; 00000408H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 648  : 	char	*p, text[MAX_SYSPATH];
; 649  : 
; 650  : 	if( Cmd_Argc() < 2 ) return;

	call	_Cmd_Argc
	cmp	eax, 2
	jae	SHORT $LN2@SV_ConSay_
	jmp	$LN1@SV_ConSay_
$LN2@SV_ConSay_:

; 651  : 
; 652  : 	if( !svs.clients || sv.background )

	cmp	DWORD PTR _svs+33344, 0
	je	SHORT $LN4@SV_ConSay_
	cmp	DWORD PTR _sv+4, 0
	je	SHORT $LN3@SV_ConSay_
$LN4@SV_ConSay_:

; 653  : 	{
; 654  : 		Con_Printf( "^3no server running.\n" );

	push	OFFSET $SG136377
	call	_Con_Printf
	add	esp, 4

; 655  : 		return;

	jmp	$LN1@SV_ConSay_
$LN3@SV_ConSay_:

; 656  : 	}
; 657  : 
; 658  : 	Q_snprintf( text, sizeof( text ), "%s: ", Cvar_VariableString( "hostname" ));

	push	OFFSET $SG136378
	call	_Cvar_VariableString
	add	esp, 4
	push	eax
	push	OFFSET $SG136379
	push	1024					; 00000400H
	lea	eax, DWORD PTR _text$[ebp]
	push	eax
	call	_Q_snprintf
	add	esp, 16					; 00000010H

; 659  : 	p = Cmd_Args();

	call	_Cmd_Args
	mov	DWORD PTR _p$[ebp], eax

; 660  : 
; 661  : 	if( *p == '"' )

	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 34					; 00000022H
	jne	SHORT $LN5@SV_ConSay_

; 662  : 	{
; 663  : 		p++;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax

; 664  : 		p[Q_strlen(p) - 1] = 0;

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_Q_strlen
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	BYTE PTR [edx+eax-1], 0
$LN5@SV_ConSay_:

; 665  : 	}
; 666  : 
; 667  : 	Q_strncat( text, p, MAX_SYSPATH );

	push	1024					; 00000400H
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	call	_Q_strncat
	add	esp, 12					; 0000000cH

; 668  : 	SV_BroadcastPrintf( NULL, "%s\n", text );

	lea	edx, DWORD PTR _text$[ebp]
	push	edx
	push	OFFSET $SG136381
	push	0
	call	_SV_BroadcastPrintf
	add	esp, 12					; 0000000cH

; 669  : 	Log_Printf( "Server say: \"%s\"\n", p );

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	OFFSET $SG136382
	call	_Log_Printf
	add	esp, 8
$LN1@SV_ConSay_:

; 670  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_ConSay_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_mapname$ = -4						; size = 4
_SV_EntPatch_f PROC

; 572  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 573  : 	const char	*mapname;
; 574  : 
; 575  : 	if( Cmd_Argc() < 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	jae	SHORT $LN2@SV_EntPatc

; 576  : 	{
; 577  : 		if( sv.state != ss_dead )

	cmp	DWORD PTR _sv, 0
	je	SHORT $LN4@SV_EntPatc

; 578  : 		{
; 579  : 			mapname = sv.name;

	mov	DWORD PTR _mapname$[ebp], OFFSET _sv+56

; 580  : 		}

	jmp	SHORT $LN5@SV_EntPatc
$LN4@SV_EntPatc:

; 581  : 		else
; 582  : 		{
; 583  : 			Con_Printf( S_USAGE "entpatch <mapname>\n" );

	push	OFFSET $SG136323
	call	_Con_Printf
	add	esp, 4

; 584  : 			return;

	jmp	SHORT $LN1@SV_EntPatc
$LN5@SV_EntPatc:

; 585  : 		}
; 586  : 	}

	jmp	SHORT $LN3@SV_EntPatc
$LN2@SV_EntPatc:

; 587  : 	else mapname = Cmd_Argv( 1 );

	push	1
	call	_Cmd_Argv
	add	esp, 4
	mov	DWORD PTR _mapname$[ebp], eax
$LN3@SV_EntPatc:

; 588  : 
; 589  : 	SV_WriteEntityPatch( mapname );

	mov	eax, DWORD PTR _mapname$[ebp]
	push	eax
	call	_SV_WriteEntityPatch
	add	esp, 4
$LN1@SV_EntPatc:

; 590  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_EntPatch_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_cl$ = -4						; size = 4
_SV_Kick_f PROC

; 542  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 543  : 	sv_client_t	*cl;
; 544  : 
; 545  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_Kick_f

; 546  : 	{
; 547  : 		Con_Printf( S_USAGE "kick <userid> | <name>\n" );

	push	OFFSET $SG136308
	call	_Con_Printf
	add	esp, 4

; 548  : 		return;

	jmp	$LN1@SV_Kick_f
$LN2@SV_Kick_f:

; 549  : 	}
; 550  : 
; 551  : 	if(( cl = SV_SetPlayer( )) == NULL )

	call	_SV_SetPlayer
	mov	DWORD PTR _cl$[ebp], eax
	cmp	DWORD PTR _cl$[ebp], 0
	jne	SHORT $LN3@SV_Kick_f

; 552  : 		return;

	jmp	$LN1@SV_Kick_f
$LN3@SV_Kick_f:

; 553  : 
; 554  : 	if( NET_IsLocalAddress( cl->netchan.remote_address ))

	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 564				; 00000234H
	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], eax
	call	_NET_IsLocalAddress
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN4@SV_Kick_f

; 555  : 	{
; 556  : 		Con_Printf( "The local player cannot be kicked!\n" );

	push	OFFSET $SG136311
	call	_Con_Printf
	add	esp, 4

; 557  : 		return;

	jmp	SHORT $LN1@SV_Kick_f
$LN4@SV_Kick_f:

; 558  : 	}
; 559  : 
; 560  : 	Log_Printf( "Kick: \"%s<%i>\" was kicked\n", cl->name, cl->userid );

	mov	ecx, DWORD PTR _cl$[ebp]
	mov	edx, DWORD PTR [ecx+287556]
	push	edx
	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 8
	push	eax
	push	OFFSET $SG136312
	call	_Log_Printf
	add	esp, 12					; 0000000cH

; 561  : 	SV_BroadcastPrintf( cl, "%s was kicked\n", cl->name );

	mov	ecx, DWORD PTR _cl$[ebp]
	add	ecx, 8
	push	ecx
	push	OFFSET $SG136313
	mov	edx, DWORD PTR _cl$[ebp]
	push	edx
	call	_SV_BroadcastPrintf
	add	esp, 12					; 0000000cH

; 562  : 	SV_ClientPrintf( cl, "You were kicked from the game\n" );

	push	OFFSET $SG136314
	mov	eax, DWORD PTR _cl$[ebp]
	push	eax
	call	_SV_ClientPrintf
	add	esp, 8

; 563  : 	SV_DropClient( cl, false );

	push	0
	mov	ecx, DWORD PTR _cl$[ebp]
	push	ecx
	call	_SV_DropClient
	add	esp, 8
$LN1@SV_Kick_f:

; 564  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_Kick_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_ChangeLevel2_f PROC

; 524  : {

	push	ebp
	mov	ebp, esp

; 525  : 	if( Cmd_Argc() != 3 )

	call	_Cmd_Argc
	cmp	eax, 3
	je	SHORT $LN2@SV_ChangeL

; 526  : 	{
; 527  : 		Con_Printf( S_USAGE "changelevel2 <mapname> <landmark>\n" );

	push	OFFSET $SG136301
	call	_Con_Printf
	add	esp, 4

; 528  : 		return;

	jmp	SHORT $LN1@SV_ChangeL
$LN2@SV_ChangeL:

; 529  : 	}
; 530  : 
; 531  : 	SV_QueueChangeLevel( Cmd_Argv( 1 ), Cmd_Argv( 2 ));

	push	2
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_SV_QueueChangeLevel
	add	esp, 8
$LN1@SV_ChangeL:

; 532  : }

	pop	ebp
	ret	0
_SV_ChangeLevel2_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_ChangeLevel_f PROC

; 506  : {

	push	ebp
	mov	ebp, esp

; 507  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_ChangeL

; 508  : 	{
; 509  : 		Con_Printf( S_USAGE "changelevel <mapname>\n" );

	push	OFFSET $SG136296
	call	_Con_Printf
	add	esp, 4

; 510  : 		return;

	jmp	SHORT $LN1@SV_ChangeL
$LN2@SV_ChangeL:

; 511  : 	}
; 512  : 
; 513  : 	SV_QueueChangeLevel( Cmd_Argv( 1 ), NULL );

	push	0
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_SV_QueueChangeLevel
	add	esp, 8
$LN1@SV_ChangeL:

; 514  : }

	pop	ebp
	ret	0
_SV_ChangeLevel_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_Reload_f PROC

; 489  : {

	push	ebp
	mov	ebp, esp

; 490  : 	// because reload can be multiple issued
; 491  : 	if( GameState->nextstate != STATE_RUNFRAME )

	cmp	DWORD PTR _host+20, 0
	je	SHORT $LN2@SV_Reload_

; 492  : 		return;

	jmp	SHORT $LN1@SV_Reload_
$LN2@SV_Reload_:

; 493  : 
; 494  : 	if( !SV_LoadGame( SV_GetLatestSave( )))

	call	_SV_GetLatestSave
	push	eax
	call	_SV_LoadGame
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@SV_Reload_

; 495  : 		COM_LoadLevel( sv_hostmap->string, false );

	push	0
	mov	eax, DWORD PTR _sv_hostmap
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_COM_LoadLevel
	add	esp, 8
$LN1@SV_Reload_:

; 496  : }

	pop	ebp
	ret	0
_SV_Reload_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_Restart_f PROC

; 474  : {

	push	ebp
	mov	ebp, esp

; 475  : 	// because restart can be multiple issued
; 476  : 	if( sv.state != ss_active )

	cmp	DWORD PTR _sv, 2
	je	SHORT $LN2@SV_Restart

; 477  : 		return;

	jmp	SHORT $LN1@SV_Restart
$LN2@SV_Restart:

; 478  : 	COM_LoadLevel( sv.name, sv.background );

	mov	eax, DWORD PTR _sv+4
	push	eax
	push	OFFSET _sv+56
	call	_COM_LoadLevel
	add	esp, 8
$LN1@SV_Restart:

; 479  : }

	pop	ebp
	ret	0
_SV_Restart_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_AutoSave_f PROC

; 456  : {

	push	ebp
	mov	ebp, esp

; 457  : 	if( Cmd_Argc() != 1 )

	call	_Cmd_Argc
	cmp	eax, 1
	je	SHORT $LN2@SV_AutoSav

; 458  : 	{
; 459  : 		Con_Printf( S_USAGE "autosave\n" );

	push	OFFSET $SG136280
	call	_Con_Printf
	add	esp, 4

; 460  : 		return;

	jmp	SHORT $LN1@SV_AutoSav
$LN2@SV_AutoSav:

; 461  : 	}
; 462  : 
; 463  : 	SV_SaveGame( "autosave" );

	push	OFFSET $SG136281
	call	_SV_SaveGame
	add	esp, 4
$LN1@SV_AutoSav:

; 464  : }

	pop	ebp
	ret	0
_SV_AutoSave_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_DeleteSave_f PROC

; 437  : {

	push	ebp
	mov	ebp, esp

; 438  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_DeleteS

; 439  : 	{
; 440  : 		Con_Printf( S_USAGE "killsave <name>\n" );

	push	OFFSET $SG136271
	call	_Con_Printf
	add	esp, 4

; 441  : 		return;

	jmp	SHORT $LN1@SV_DeleteS
$LN2@SV_DeleteS:

; 442  : 	}
; 443  : 
; 444  : 	// delete save and saveshot
; 445  : 	FS_Delete( va( "%s%s.sav", DEFAULT_SAVE_DIRECTORY, Cmd_Argv( 1 )));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET $SG136272
	push	OFFSET $SG136273
	call	_va
	add	esp, 12					; 0000000cH
	push	eax
	call	_FS_Delete
	add	esp, 4

; 446  : 	FS_Delete( va( "%s%s.bmp", DEFAULT_SAVE_DIRECTORY, Cmd_Argv( 1 )));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET $SG136274
	push	OFFSET $SG136275
	call	_va
	add	esp, 12					; 0000000cH
	push	eax
	call	_FS_Delete
	add	esp, 4
$LN1@SV_DeleteS:

; 447  : }

	pop	ebp
	ret	0
_SV_DeleteSave_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_QuickSave_f PROC

; 426  : {

	push	ebp
	mov	ebp, esp

; 427  : 	Cbuf_AddText( "echo Quick Saving...; wait; save quick" );

	push	OFFSET $SG136266
	call	_Cbuf_AddText
	add	esp, 4

; 428  : }

	pop	ebp
	ret	0
_SV_QuickSave_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
tv65 = -4						; size = 4
_SV_Save_f PROC

; 404  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 405  : 	switch( Cmd_Argc( ))

	call	_Cmd_Argc
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN4@SV_Save_f
	cmp	DWORD PTR tv65[ebp], 2
	je	SHORT $LN5@SV_Save_f
	jmp	SHORT $LN6@SV_Save_f
$LN4@SV_Save_f:

; 406  : 	{
; 407  : 	case 1:
; 408  : 		SV_SaveGame( "new" );

	push	OFFSET $SG136259
	call	_SV_SaveGame
	add	esp, 4

; 409  : 		break;

	jmp	SHORT $LN1@SV_Save_f
$LN5@SV_Save_f:

; 410  : 	case 2:
; 411  : 		SV_SaveGame( Cmd_Argv( 1 ));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	call	_SV_SaveGame
	add	esp, 4

; 412  : 		break;

	jmp	SHORT $LN1@SV_Save_f
$LN6@SV_Save_f:

; 413  : 	default:
; 414  : 		Con_Printf( S_USAGE "save <savename>\n" );

	push	OFFSET $SG136262
	call	_Con_Printf
	add	esp, 4
$LN1@SV_Save_f:

; 415  : 		break;
; 416  : 	}
; 417  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_Save_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_QuickLoad_f PROC

; 393  : {

	push	ebp
	mov	ebp, esp

; 394  : 	Cbuf_AddText( "echo Quick Loading...; wait; load quick" );

	push	OFFSET $SG136252
	call	_Cbuf_AddText
	add	esp, 4

; 395  : }

	pop	ebp
	ret	0
_SV_QuickLoad_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_path$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_SV_Load_f PROC

; 373  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 374  : 	char	path[MAX_QPATH];
; 375  : 
; 376  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_Load_f

; 377  : 	{
; 378  : 		Con_Printf( S_USAGE "load <savename>\n" );

	push	OFFSET $SG136246
	call	_Con_Printf
	add	esp, 4

; 379  : 		return;

	jmp	SHORT $LN1@SV_Load_f
$LN2@SV_Load_f:

; 380  : 	}
; 381  : 
; 382  : 	Q_snprintf( path, sizeof( path ), "%s%s.sav", DEFAULT_SAVE_DIRECTORY, Cmd_Argv( 1 ));

	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	push	OFFSET $SG136247
	push	OFFSET $SG136248
	push	64					; 00000040H
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_Q_snprintf
	add	esp, 20					; 00000014H

; 383  : 	SV_LoadGame( path );

	lea	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	_SV_LoadGame
	add	esp, 4
$LN1@SV_Load_f:

; 384  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_Load_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_HazardCourse_f PROC

; 350  : {

	push	ebp
	mov	ebp, esp

; 351  : 	if( Cmd_Argc() != 1 )

	call	_Cmd_Argc
	cmp	eax, 1
	je	SHORT $LN2@SV_HazardC

; 352  : 	{
; 353  : 		Con_Printf( S_USAGE "hazardcourse\n" );

	push	OFFSET $SG136235
	call	_Con_Printf
	add	esp, 4

; 354  : 		return;

	jmp	SHORT $LN1@SV_HazardC
$LN2@SV_HazardC:

; 355  : 	}
; 356  : 
; 357  : 	// special case for Gunman Chronicles: playing avi-file
; 358  : 	if( FS_FileExists( va( "media/%s.avi", GI->trainmap ), false ))

	push	0
	mov	eax, DWORD PTR _SI+768
	add	eax, 320				; 00000140H
	push	eax
	push	OFFSET $SG136238
	call	_va
	add	esp, 8
	push	eax
	call	_FS_FileExists
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@SV_HazardC

; 359  : 	{
; 360  : 		Cbuf_AddText( va( "wait; movie %s\n", GI->trainmap ));

	mov	ecx, DWORD PTR _SI+768
	add	ecx, 320				; 00000140H
	push	ecx
	push	OFFSET $SG136239
	call	_va
	add	esp, 8
	push	eax
	call	_Cbuf_AddText
	add	esp, 4

; 361  : 		Host_EndGame( true, DEFAULT_ENDGAME_MESSAGE );

	push	OFFSET $SG136240
	push	1
	call	_Host_EndGame
	add	esp, 8

; 362  : 	}

	jmp	SHORT $LN1@SV_HazardC
$LN3@SV_HazardC:

; 363  : 	else COM_NewGame( GI->trainmap );

	mov	edx, DWORD PTR _SI+768
	add	edx, 320				; 00000140H
	push	edx
	call	_COM_NewGame
	add	esp, 4
$LN1@SV_HazardC:

; 364  : }

	pop	ebp
	ret	0
_SV_HazardCourse_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_NewGame_f PROC

; 333  : {

	push	ebp
	mov	ebp, esp

; 334  : 	if( Cmd_Argc() != 1 )

	call	_Cmd_Argc
	cmp	eax, 1
	je	SHORT $LN2@SV_NewGame

; 335  : 	{
; 336  : 		Con_Printf( S_USAGE "newgame\n" );

	push	OFFSET $SG136230
	call	_Con_Printf
	add	esp, 4

; 337  : 		return;

	jmp	SHORT $LN1@SV_NewGame
$LN2@SV_NewGame:

; 338  : 	}
; 339  : 
; 340  : 	COM_NewGame( GI->startmap );

	mov	eax, DWORD PTR _SI+768
	add	eax, 256				; 00000100H
	push	eax
	call	_COM_NewGame
	add	esp, 4
$LN1@SV_NewGame:

; 341  : }

	pop	ebp
	ret	0
_SV_NewGame_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_next$ = -92						; size = 4
_ext$1 = -88						; size = 4
tv77 = -84						; size = 4
tv68 = -80						; size = 4
_i$ = -76						; size = 4
_t$ = -72						; size = 4
_nextmap$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_SV_NextMap_f PROC

; 282  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 283  : 	char	nextmap[MAX_QPATH];
; 284  : 	int	i, next;
; 285  : 	search_t	*t;
; 286  : 
; 287  : 	t = FS_Search( "maps\\*.bsp", true, CVAR_TO_BOOL( con_gamemaps )); // only in gamedir

	cmp	DWORD PTR _con_gamemaps, 0
	je	SHORT $LN11@SV_NextMap
	mov	eax, DWORD PTR _con_gamemaps
	movss	xmm0, DWORD PTR [eax+12]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN11@SV_NextMap
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN12@SV_NextMap
$LN11@SV_NextMap:
	mov	DWORD PTR tv68[ebp], 0
$LN12@SV_NextMap:
	mov	ecx, DWORD PTR tv68[ebp]
	push	ecx
	push	1
	push	OFFSET $SG136214
	call	_FS_Search
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t$[ebp], eax

; 288  : 	if( !t ) t = FS_Search( "maps/*.bsp", true, CVAR_TO_BOOL( con_gamemaps )); // only in gamedir

	cmp	DWORD PTR _t$[ebp], 0
	jne	SHORT $LN5@SV_NextMap
	cmp	DWORD PTR _con_gamemaps, 0
	je	SHORT $LN13@SV_NextMap
	mov	edx, DWORD PTR _con_gamemaps
	movss	xmm0, DWORD PTR [edx+12]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN13@SV_NextMap
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN14@SV_NextMap
$LN13@SV_NextMap:
	mov	DWORD PTR tv77[ebp], 0
$LN14@SV_NextMap:
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	push	1
	push	OFFSET $SG136216
	call	_FS_Search
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t$[ebp], eax
$LN5@SV_NextMap:

; 289  : 
; 290  : 	if( !t )

	cmp	DWORD PTR _t$[ebp], 0
	jne	SHORT $LN6@SV_NextMap

; 291  : 	{
; 292  : 		Con_Printf( "next map can't be found\n" );

	push	OFFSET $SG136218
	call	_Con_Printf
	add	esp, 4

; 293  : 		return;

	jmp	$LN1@SV_NextMap
$LN6@SV_NextMap:

; 294  : 	}
; 295  : 
; 296  : 	for( i = 0; i < t->numfilenames; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@SV_NextMap
$LN2@SV_NextMap:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN4@SV_NextMap:
	mov	edx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx]
	jge	$LN3@SV_NextMap

; 297  : 	{
; 298  : 		const char *ext = COM_FileExtension( t->filenames[i] );

	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_COM_FileExtension
	add	esp, 4
	mov	DWORD PTR _ext$1[ebp], eax

; 299  : 
; 300  : 		if( Q_stricmp( ext, "bsp" ))

	push	99999					; 0001869fH
	push	OFFSET $SG136220
	mov	edx, DWORD PTR _ext$1[ebp]
	push	edx
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@SV_NextMap

; 301  : 			continue;

	jmp	SHORT $LN2@SV_NextMap
$LN7@SV_NextMap:

; 302  : 
; 303  : 		COM_FileBase( t->filenames[i], nextmap );

	lea	eax, DWORD PTR _nextmap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	call	_COM_FileBase
	add	esp, 8

; 304  : 		if( Q_stricmp( sv_hostmap->string, nextmap ))

	push	99999					; 0001869fH
	lea	edx, DWORD PTR _nextmap$[ebp]
	push	edx
	mov	eax, DWORD PTR _sv_hostmap
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_Q_strnicmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN8@SV_NextMap

; 305  : 			continue; 

	jmp	$LN2@SV_NextMap
$LN8@SV_NextMap:

; 306  : 
; 307  : 		next = ( i + 1 ) % t->numfilenames;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _t$[ebp]
	cdq
	idiv	DWORD PTR [ecx]
	mov	DWORD PTR _next$[ebp], edx

; 308  : 		COM_FileBase( t->filenames[next], nextmap );

	lea	edx, DWORD PTR _nextmap$[ebp]
	push	edx
	mov	eax, DWORD PTR _t$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _next$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	call	_COM_FileBase
	add	esp, 8

; 309  : 		Cvar_DirectSet( sv_hostmap, nextmap );

	lea	ecx, DWORD PTR _nextmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sv_hostmap
	push	edx
	call	_Cvar_DirectSet
	add	esp, 8

; 310  : 
; 311  : 		// found current point, check for valid
; 312  : 		if( SV_ValidateMap( nextmap, true ))

	push	1
	lea	eax, DWORD PTR _nextmap$[ebp]
	push	eax
	call	_SV_ValidateMap
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@SV_NextMap

; 313  : 		{
; 314  : 			// found and valid
; 315  : 			COM_LoadLevel( nextmap, false );

	push	0
	lea	ecx, DWORD PTR _nextmap$[ebp]
	push	ecx
	call	_COM_LoadLevel
	add	esp, 8

; 316  : 			Mem_Free( t );

	push	316					; 0000013cH
	push	OFFSET $SG136223
	mov	edx, DWORD PTR _t$[ebp]
	push	edx
	call	__Mem_Free
	add	esp, 12					; 0000000cH

; 317  : 			return;

	jmp	SHORT $LN1@SV_NextMap
$LN9@SV_NextMap:

; 318  : 		}
; 319  : 		// jump to next map
; 320  : 	}

	jmp	$LN2@SV_NextMap
$LN3@SV_NextMap:

; 321  : 
; 322  : 	Con_Printf( "failed to load next map\n" );

	push	OFFSET $SG136224
	call	_Con_Printf
	add	esp, 4

; 323  : 	Mem_Free( t );

	push	323					; 00000143H
	push	OFFSET $SG136225
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	__Mem_Free
	add	esp, 12					; 0000000cH
$LN1@SV_NextMap:

; 324  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_NextMap_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_mapname$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_SV_MapBackground_f PROC

; 242  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 243  : 	char	mapname[MAX_QPATH];
; 244  : 
; 245  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_MapBack

; 246  : 	{
; 247  : 		Con_Printf( S_USAGE "map_background <mapname>\n" );

	push	OFFSET $SG136192
	call	_Con_Printf
	add	esp, 4

; 248  : 		return;

	jmp	$LN1@SV_MapBack
$LN2@SV_MapBack:

; 249  : 	}
; 250  : 
; 251  : 	if( SV_Active() && !sv.background )

	call	_SV_Active
	test	eax, eax
	je	SHORT $LN3@SV_MapBack
	cmp	DWORD PTR _sv+4, 0
	jne	SHORT $LN3@SV_MapBack

; 252  : 	{
; 253  : 		if( GameState->nextstate == STATE_RUNFRAME )

	cmp	DWORD PTR _host+20, 0
	jne	SHORT $LN4@SV_MapBack

; 254  : 			Con_Printf( S_ERROR "can't set background map while game is active\n" );

	push	OFFSET $SG136195
	call	_Con_Printf
	add	esp, 4
$LN4@SV_MapBack:

; 255  : 		return;

	jmp	$LN1@SV_MapBack
$LN3@SV_MapBack:

; 256  : 	}
; 257  : 
; 258  : 	// hold mapname to other place
; 259  : 	Q_strncpy( mapname, Cmd_Argv( 1 ), sizeof( mapname ));

	push	64					; 00000040H
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _mapname$[ebp]
	push	eax
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 260  : 	COM_StripExtension( mapname );

	lea	ecx, DWORD PTR _mapname$[ebp]
	push	ecx
	call	_COM_StripExtension
	add	esp, 4

; 261  : 
; 262  : 	if( !SV_ValidateMap( mapname, false ))

	push	0
	lea	edx, DWORD PTR _mapname$[ebp]
	push	edx
	call	_SV_ValidateMap
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@SV_MapBack

; 263  : 		return;

	jmp	SHORT $LN1@SV_MapBack
$LN5@SV_MapBack:

; 264  : 
; 265  : 	// background map is always run as singleplayer
; 266  : 	Cvar_FullSet( "maxplayers", "1", FCVAR_LATCH );

	push	2048					; 00000800H
	push	OFFSET $SG136197
	push	OFFSET $SG136198
	call	_Cvar_FullSet
	add	esp, 12					; 0000000cH

; 267  : 	Cvar_FullSet( "deathmatch", "0", FCVAR_LATCH );

	push	2048					; 00000800H
	push	OFFSET $SG136199
	push	OFFSET $SG136200
	call	_Cvar_FullSet
	add	esp, 12					; 0000000cH

; 268  : 	Cvar_FullSet( "coop", "0", FCVAR_LATCH );

	push	2048					; 00000800H
	push	OFFSET $SG136201
	push	OFFSET $SG136202
	call	_Cvar_FullSet
	add	esp, 12					; 0000000cH

; 269  : 
; 270  : 	COM_LoadLevel( mapname, true );

	push	1
	lea	eax, DWORD PTR _mapname$[ebp]
	push	eax
	call	_COM_LoadLevel
	add	esp, 8
$LN1@SV_MapBack:

; 271  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_MapBackground_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_mapname$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_SV_Map_f PROC

; 214  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 215  : 	char	mapname[MAX_QPATH];
; 216  : 
; 217  : 	if( Cmd_Argc() != 2 )

	call	_Cmd_Argc
	cmp	eax, 2
	je	SHORT $LN2@SV_Map_f

; 218  : 	{
; 219  : 		Con_Printf( S_USAGE "map <mapname>\n" );

	push	OFFSET $SG136185
	call	_Con_Printf
	add	esp, 4

; 220  : 		return;

	jmp	SHORT $LN1@SV_Map_f
$LN2@SV_Map_f:

; 221  : 	}
; 222  : 
; 223  : 	// hold mapname to other place
; 224  : 	Q_strncpy( mapname, Cmd_Argv( 1 ), sizeof( mapname ));

	push	64					; 00000040H
	push	1
	call	_Cmd_Argv
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR _mapname$[ebp]
	push	eax
	call	_Q_strncpy
	add	esp, 12					; 0000000cH

; 225  : 	COM_StripExtension( mapname );

	lea	ecx, DWORD PTR _mapname$[ebp]
	push	ecx
	call	_COM_StripExtension
	add	esp, 4

; 226  : 
; 227  : 	if( !SV_ValidateMap( mapname, true ))

	push	1
	lea	edx, DWORD PTR _mapname$[ebp]
	push	edx
	call	_SV_ValidateMap
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@SV_Map_f

; 228  : 		return;

	jmp	SHORT $LN1@SV_Map_f
$LN3@SV_Map_f:

; 229  : 
; 230  : 	Cvar_DirectSet( sv_hostmap, mapname );

	lea	eax, DWORD PTR _mapname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sv_hostmap
	push	ecx
	call	_Cvar_DirectSet
	add	esp, 8

; 231  : 	COM_LoadLevel( mapname, false );

	push	0
	lea	edx, DWORD PTR _mapname$[ebp]
	push	edx
	call	_COM_LoadLevel
	add	esp, 8
$LN1@SV_Map_f:

; 232  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_Map_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_spawn_entity$ = -8					; size = 4
_flags$ = -4						; size = 4
_pMapName$ = 8						; size = 4
_check_spawn$ = 12					; size = 4
_SV_ValidateMap PROC

; 173  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 174  : 	char	*spawn_entity;
; 175  : 	int	flags;
; 176  : 
; 177  : 	// determine spawn entity classname
; 178  : 	if( !check_spawn || (int)sv_maxclients->value <= 1 )

	cmp	DWORD PTR _check_spawn$[ebp], 0
	je	SHORT $LN4@SV_Validat
	mov	eax, DWORD PTR _sv_maxclients
	cvttss2si ecx, DWORD PTR [eax+12]
	cmp	ecx, 1
	jg	SHORT $LN2@SV_Validat
$LN4@SV_Validat:

; 179  : 		spawn_entity = GI->sp_entity;

	mov	edx, DWORD PTR _SI+768
	add	edx, 1304				; 00000518H
	mov	DWORD PTR _spawn_entity$[ebp], edx
	jmp	SHORT $LN3@SV_Validat
$LN2@SV_Validat:

; 180  : 	else spawn_entity = GI->mp_entity;

	mov	eax, DWORD PTR _SI+768
	add	eax, 1336				; 00000538H
	mov	DWORD PTR _spawn_entity$[ebp], eax
$LN3@SV_Validat:

; 181  : 
; 182  : 	flags = SV_MapIsValid( pMapName, spawn_entity, NULL );

	push	0
	mov	ecx, DWORD PTR _spawn_entity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMapName$[ebp]
	push	edx
	call	_SV_MapIsValid
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _flags$[ebp], eax

; 183  : 
; 184  : 	if( FBitSet( flags, MAP_INVALID_VERSION ))

	mov	eax, DWORD PTR _flags$[ebp]
	and	eax, 8
	je	SHORT $LN5@SV_Validat

; 185  : 	{
; 186  : 		Con_Printf( S_ERROR "map %s is invalid or not supported\n", pMapName );

	mov	ecx, DWORD PTR _pMapName$[ebp]
	push	ecx
	push	OFFSET $SG136175
	call	_Con_Printf
	add	esp, 8

; 187  : 		return false;

	xor	eax, eax
	jmp	SHORT $LN1@SV_Validat
$LN5@SV_Validat:

; 188  : 	}
; 189  : 
; 190  : 	if( !FBitSet( flags, MAP_IS_EXIST ))

	mov	edx, DWORD PTR _flags$[ebp]
	and	edx, 1
	jne	SHORT $LN6@SV_Validat

; 191  : 	{
; 192  : 		Con_Printf( S_ERROR "map %s doesn't exist\n", pMapName );

	mov	eax, DWORD PTR _pMapName$[ebp]
	push	eax
	push	OFFSET $SG136177
	call	_Con_Printf
	add	esp, 8

; 193  : 		return false;

	xor	eax, eax
	jmp	SHORT $LN1@SV_Validat
$LN6@SV_Validat:

; 194  : 	}
; 195  : 
; 196  : 	if( check_spawn && !FBitSet( flags, MAP_HAS_SPAWNPOINT ))

	cmp	DWORD PTR _check_spawn$[ebp], 0
	je	SHORT $LN7@SV_Validat
	mov	ecx, DWORD PTR _flags$[ebp]
	and	ecx, 2
	jne	SHORT $LN7@SV_Validat

; 197  : 	{
; 198  : 		Con_Printf( S_ERROR "map %s doesn't have a valid spawnpoint\n", pMapName );

	mov	edx, DWORD PTR _pMapName$[ebp]
	push	edx
	push	OFFSET $SG136179
	call	_Con_Printf
	add	esp, 8

; 199  : 		return false;

	xor	eax, eax
	jmp	SHORT $LN1@SV_Validat
$LN7@SV_Validat:

; 200  : 	}
; 201  : 
; 202  : 	return true;

	mov	eax, 1
$LN1@SV_Validat:

; 203  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_ValidateMap ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_i$ = -16						; size = 4
_idnum$ = -12						; size = 4
_s$ = -8						; size = 4
_cl$ = -4						; size = 4
_SV_SetPlayer PROC

; 115  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 116  : 	char		*s;
; 117  : 	sv_client_t	*cl;
; 118  : 	int		i, idnum;
; 119  : 
; 120  : 	if( !svs.clients || sv.background )

	cmp	DWORD PTR _svs+33344, 0
	je	SHORT $LN6@SV_SetPlay
	cmp	DWORD PTR _sv+4, 0
	je	SHORT $LN5@SV_SetPlay
$LN6@SV_SetPlay:

; 121  : 		return NULL;

	xor	eax, eax
	jmp	$LN1@SV_SetPlay
$LN5@SV_SetPlay:

; 122  : 
; 123  : 	if( svs.maxclients == 1 || Cmd_Argc() < 2 )

	cmp	DWORD PTR _svs+16, 1
	je	SHORT $LN8@SV_SetPlay
	call	_Cmd_Argc
	cmp	eax, 2
	jae	SHORT $LN7@SV_SetPlay
$LN8@SV_SetPlay:

; 124  : 	{
; 125  : 		// special case for local client
; 126  : 		return svs.clients;

	mov	eax, DWORD PTR _svs+33344
	jmp	$LN1@SV_SetPlay
$LN7@SV_SetPlay:

; 127  : 	}
; 128  : 
; 129  : 	s = Cmd_Argv( 1 );

	push	1
	call	_Cmd_Argv
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax

; 130  : 
; 131  : 	// numeric values are just slot numbers
; 132  : 	if( Q_isdigit( s ) || (s[0] == '-' && Q_isdigit( s + 1 )))

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_Q_isdigit
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN10@SV_SetPlay
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN9@SV_SetPlay
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	push	edx
	call	_Q_isdigit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@SV_SetPlay
$LN10@SV_SetPlay:

; 133  : 	{
; 134  : 		idnum = Q_atoi( s );

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_Q_atoi
	add	esp, 4
	mov	DWORD PTR _idnum$[ebp], eax

; 135  : 
; 136  : 		if( idnum < 0 || idnum >= svs.maxclients )

	cmp	DWORD PTR _idnum$[ebp], 0
	jl	SHORT $LN12@SV_SetPlay
	mov	ecx, DWORD PTR _idnum$[ebp]
	cmp	ecx, DWORD PTR _svs+16
	jl	SHORT $LN11@SV_SetPlay
$LN12@SV_SetPlay:

; 137  : 		{
; 138  : 			Con_Printf( "Bad client slot: %i\n", idnum );

	mov	edx, DWORD PTR _idnum$[ebp]
	push	edx
	push	OFFSET $SG136155
	call	_Con_Printf
	add	esp, 8

; 139  : 			return NULL;

	xor	eax, eax
	jmp	$LN1@SV_SetPlay
$LN11@SV_SetPlay:

; 140  : 		}
; 141  : 
; 142  : 		cl = &svs.clients[idnum];

	imul	eax, DWORD PTR _idnum$[ebp], 287560
	add	eax, DWORD PTR _svs+33344
	mov	DWORD PTR _cl$[ebp], eax

; 143  : 
; 144  : 		if( !cl->state )

	mov	ecx, DWORD PTR _cl$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN13@SV_SetPlay

; 145  : 		{
; 146  : 			Con_Printf( "Client %i is not active\n", idnum );

	mov	edx, DWORD PTR _idnum$[ebp]
	push	edx
	push	OFFSET $SG136157
	call	_Con_Printf
	add	esp, 8

; 147  : 			return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@SV_SetPlay
$LN13@SV_SetPlay:

; 148  : 		}
; 149  : 		return cl;

	mov	eax, DWORD PTR _cl$[ebp]
	jmp	SHORT $LN1@SV_SetPlay
$LN9@SV_SetPlay:

; 150  : 	}
; 151  : 
; 152  : 	// check for a name match
; 153  : 	for( i = 0, cl = svs.clients; i < svs.maxclients; i++, cl++ )

	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _svs+33344
	mov	DWORD PTR _cl$[ebp], eax
	jmp	SHORT $LN4@SV_SetPlay
$LN2@SV_SetPlay:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	edx, DWORD PTR _cl$[ebp]
	add	edx, 287560				; 00046348H
	mov	DWORD PTR _cl$[ebp], edx
$LN4@SV_SetPlay:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _svs+16
	jge	SHORT $LN3@SV_SetPlay

; 154  : 	{
; 155  : 		if( !cl->state ) continue;

	mov	ecx, DWORD PTR _cl$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN14@SV_SetPlay
	jmp	SHORT $LN2@SV_SetPlay
$LN14@SV_SetPlay:

; 156  : 
; 157  : 		if( !Q_strcmp( cl->name, s ))

	push	99999					; 0001869fH
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 8
	push	eax
	call	_Q_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN15@SV_SetPlay

; 158  : 			return cl;

	mov	eax, DWORD PTR _cl$[ebp]
	jmp	SHORT $LN1@SV_SetPlay
$LN15@SV_SetPlay:

; 159  : 	}

	jmp	SHORT $LN2@SV_SetPlay
$LN3@SV_SetPlay:

; 160  : 
; 161  : 	Con_Printf( "Userid %s is not on the server\n", s );

	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	push	OFFSET $SG136160
	call	_Con_Printf
	add	esp, 8

; 162  : 	return NULL;

	xor	eax, eax
$LN1@SV_SetPlay:

; 163  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_SetPlayer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_InitHostCommands PROC

; 886  : {

	push	ebp
	mov	ebp, esp

; 887  : 	Cmd_AddCommand( "map", SV_Map_f, "start new level" );

	push	OFFSET $SG136471
	push	OFFSET _SV_Map_f
	push	OFFSET $SG136472
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 888  : 
; 889  : 	if( host.type == HOST_NORMAL )

	cmp	DWORD PTR _host+164, 0
	jne	$LN1@SV_InitHos

; 890  : 	{
; 891  : 		Cmd_AddCommand( "newgame", SV_NewGame_f, "begin new game" );

	push	OFFSET $SG136474
	push	OFFSET _SV_NewGame_f
	push	OFFSET $SG136475
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 892  : 		Cmd_AddCommand( "hazardcourse", SV_HazardCourse_f, "starting a Hazard Course" );

	push	OFFSET $SG136476
	push	OFFSET _SV_HazardCourse_f
	push	OFFSET $SG136477
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 893  : 		Cmd_AddCommand( "map_background", SV_MapBackground_f, "set background map" );

	push	OFFSET $SG136478
	push	OFFSET _SV_MapBackground_f
	push	OFFSET $SG136479
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 894  : 		Cmd_AddCommand( "load", SV_Load_f, "load a saved game file" );

	push	OFFSET $SG136480
	push	OFFSET _SV_Load_f
	push	OFFSET $SG136481
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 895  : 		Cmd_AddCommand( "loadquick", SV_QuickLoad_f, "load a quick-saved game file" );

	push	OFFSET $SG136482
	push	OFFSET _SV_QuickLoad_f
	push	OFFSET $SG136483
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 896  : 		Cmd_AddCommand( "reload", SV_Reload_f, "continue from latest save or restart level" );

	push	OFFSET $SG136484
	push	OFFSET _SV_Reload_f
	push	OFFSET $SG136485
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 897  : 		Cmd_AddCommand( "killsave", SV_DeleteSave_f, "delete a saved game file and saveshot" );

	push	OFFSET $SG136486
	push	OFFSET _SV_DeleteSave_f
	push	OFFSET $SG136487
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 898  : 		Cmd_AddCommand( "nextmap", SV_NextMap_f, "load next level" );

	push	OFFSET $SG136488
	push	OFFSET _SV_NextMap_f
	push	OFFSET $SG136489
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH
$LN1@SV_InitHos:

; 899  : 	}
; 900  : }

	pop	ebp
	ret	0
_SV_InitHostCommands ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_s$1 = -20						; size = 4
_l$2 = -16						; size = 4
_i$ = -12						; size = 4
_j$3 = -8						; size = 4
_cl$ = -4						; size = 4
_SV_Status_f PROC

; 598  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H

; 599  : 	sv_client_t	*cl;
; 600  : 	int		i;
; 601  : 
; 602  : 	if( !svs.clients || sv.background )

	cmp	DWORD PTR _svs+33344, 0
	je	SHORT $LN12@SV_Status_
	cmp	DWORD PTR _sv+4, 0
	je	SHORT $LN11@SV_Status_
$LN12@SV_Status_:

; 603  : 	{
; 604  : 		Con_Printf( "^3no server running.\n" );

	push	OFFSET $SG136343
	call	_Con_Printf
	add	esp, 4

; 605  : 		return;

	jmp	$LN1@SV_Status_
$LN11@SV_Status_:

; 606  : 	}
; 607  : 
; 608  : 	Con_Printf( "map: %s\n", sv.name );

	push	OFFSET _sv+56
	push	OFFSET $SG136344
	call	_Con_Printf
	add	esp, 8

; 609  : 	Con_Printf( "num score ping    name            lastmsg address               port \n" );

	push	OFFSET $SG136345
	call	_Con_Printf
	add	esp, 4

; 610  : 	Con_Printf( "--- ----- ------- --------------- ------- --------------------- ------\n" );

	push	OFFSET $SG136346
	call	_Con_Printf
	add	esp, 4

; 611  : 
; 612  : 	for( i = 0, cl = svs.clients; i < svs.maxclients; i++, cl++ )

	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _svs+33344
	mov	DWORD PTR _cl$[ebp], eax
	jmp	SHORT $LN4@SV_Status_
$LN2@SV_Status_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	edx, DWORD PTR _cl$[ebp]
	add	edx, 287560				; 00046348H
	mov	DWORD PTR _cl$[ebp], edx
$LN4@SV_Status_:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _svs+16
	jge	$LN3@SV_Status_

; 613  : 	{
; 614  : 		int	j, l;
; 615  : 		char	*s;
; 616  : 
; 617  : 		if( !cl->state ) continue;

	mov	ecx, DWORD PTR _cl$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN13@SV_Status_
	jmp	SHORT $LN2@SV_Status_
$LN13@SV_Status_:

; 618  : 
; 619  : 		Con_Printf( "%3i ", i );

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	push	OFFSET $SG136348
	call	_Con_Printf
	add	esp, 8

; 620  : 		Con_Printf( "%5i ", (int)cl->edict->v.frags );

	mov	eax, DWORD PTR _cl$[ebp]
	mov	ecx, DWORD PTR [eax+264980]
	cvttss2si edx, DWORD PTR [ecx+484]
	push	edx
	push	OFFSET $SG136349
	call	_Con_Printf
	add	esp, 8

; 621  : 
; 622  : 		if( cl->state == cs_connected ) Con_Printf( "Connect" );

	mov	eax, DWORD PTR _cl$[ebp]
	cmp	DWORD PTR [eax], 2
	jne	SHORT $LN14@SV_Status_
	push	OFFSET $SG136352
	call	_Con_Printf
	add	esp, 4
	jmp	SHORT $LN19@SV_Status_
$LN14@SV_Status_:

; 623  : 		else if( cl->state == cs_zombie ) Con_Printf( "Zombie " );

	mov	ecx, DWORD PTR _cl$[ebp]
	cmp	DWORD PTR [ecx], 1
	jne	SHORT $LN16@SV_Status_
	push	OFFSET $SG136355
	call	_Con_Printf
	add	esp, 4
	jmp	SHORT $LN19@SV_Status_
$LN16@SV_Status_:

; 624  : 		else if( FBitSet( cl->flags, FCL_FAKECLIENT )) Con_Printf( "Bot   " );

	mov	edx, DWORD PTR _cl$[ebp]
	mov	eax, DWORD PTR [edx+40]
	and	eax, 128				; 00000080H
	je	SHORT $LN18@SV_Status_
	push	OFFSET $SG136358
	call	_Con_Printf
	add	esp, 4
	jmp	SHORT $LN19@SV_Status_
$LN18@SV_Status_:

; 625  : 		else Con_Printf( "%7i ", SV_CalcPing( cl ));

	mov	ecx, DWORD PTR _cl$[ebp]
	push	ecx
	call	_SV_CalcPing
	add	esp, 4
	push	eax
	push	OFFSET $SG136359
	call	_Con_Printf
	add	esp, 8
$LN19@SV_Status_:

; 626  : 
; 627  : 		Con_Printf( "%s", cl->name );

	mov	edx, DWORD PTR _cl$[ebp]
	add	edx, 8
	push	edx
	push	OFFSET $SG136360
	call	_Con_Printf
	add	esp, 8

; 628  : 		l = 24 - Q_strlen( cl->name );

	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 8
	push	eax
	call	_Q_strlen
	add	esp, 4
	mov	ecx, 24					; 00000018H
	sub	ecx, eax
	mov	DWORD PTR _l$2[ebp], ecx

; 629  : 		for( j = 0; j < l; j++ ) Con_Printf( " " );

	mov	DWORD PTR _j$3[ebp], 0
	jmp	SHORT $LN7@SV_Status_
$LN5@SV_Status_:
	mov	edx, DWORD PTR _j$3[ebp]
	add	edx, 1
	mov	DWORD PTR _j$3[ebp], edx
$LN7@SV_Status_:
	mov	eax, DWORD PTR _j$3[ebp]
	cmp	eax, DWORD PTR _l$2[ebp]
	jge	SHORT $LN6@SV_Status_
	push	OFFSET $SG136361
	call	_Con_Printf
	add	esp, 4
	jmp	SHORT $LN5@SV_Status_
$LN6@SV_Status_:

; 630  : 		Con_Printf( "%g ", ( host.realtime - cl->netchan.last_received ));

	mov	ecx, DWORD PTR _cl$[ebp]
	movsd	xmm0, QWORD PTR _host+1440
	subsd	xmm0, QWORD PTR [ecx+592]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG136362
	call	_Con_Printf
	add	esp, 12					; 0000000cH

; 631  : 		s = NET_BaseAdrToString( cl->netchan.remote_address );

	mov	edx, DWORD PTR _cl$[ebp]
	add	edx, 564				; 00000234H
	sub	esp, 20					; 00000014H
	mov	eax, esp
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], edx
	call	_NET_BaseAdrToString
	add	esp, 20					; 00000014H
	mov	DWORD PTR _s$1[ebp], eax

; 632  : 		Con_Printf( "%s", s );

	mov	eax, DWORD PTR _s$1[ebp]
	push	eax
	push	OFFSET $SG136363
	call	_Con_Printf
	add	esp, 8

; 633  : 		l = 22 - Q_strlen( s );

	mov	ecx, DWORD PTR _s$1[ebp]
	push	ecx
	call	_Q_strlen
	add	esp, 4
	mov	edx, 22					; 00000016H
	sub	edx, eax
	mov	DWORD PTR _l$2[ebp], edx

; 634  : 		for( j = 0; j < l; j++ ) Con_Printf( " " );

	mov	DWORD PTR _j$3[ebp], 0
	jmp	SHORT $LN10@SV_Status_
$LN8@SV_Status_:
	mov	eax, DWORD PTR _j$3[ebp]
	add	eax, 1
	mov	DWORD PTR _j$3[ebp], eax
$LN10@SV_Status_:
	mov	ecx, DWORD PTR _j$3[ebp]
	cmp	ecx, DWORD PTR _l$2[ebp]
	jge	SHORT $LN9@SV_Status_
	push	OFFSET $SG136364
	call	_Con_Printf
	add	esp, 4
	jmp	SHORT $LN8@SV_Status_
$LN9@SV_Status_:

; 635  : 		Con_Printf( "%5i", cl->netchan.qport );

	mov	edx, DWORD PTR _cl$[ebp]
	mov	eax, DWORD PTR [edx+584]
	push	eax
	push	OFFSET $SG136365
	call	_Con_Printf
	add	esp, 8

; 636  : 		Con_Printf( "\n" );

	push	OFFSET $SG136366
	call	_Con_Printf
	add	esp, 4

; 637  : 	}

	jmp	$LN2@SV_Status_
$LN3@SV_Status_:

; 638  : 	Con_Printf( "\n" );

	push	OFFSET $SG136367
	call	_Con_Printf
	add	esp, 4
$LN1@SV_Status_:

; 639  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_SV_Status_f ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_argptr$ = -1032					; size = 4
_string$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_cl$ = 8						; size = 4
_fmt$ = 12						; size = 4
_SV_ClientPrintf PROC

; 29   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1032				; 00000408H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 30   : 	char	string[MAX_SYSPATH];
; 31   : 	va_list	argptr;
; 32   : 
; 33   : 	if( FBitSet( cl->flags, FCL_FAKECLIENT ))

	mov	eax, DWORD PTR _cl$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 128				; 00000080H
	je	SHORT $LN2@SV_ClientP

; 34   : 		return;

	jmp	SHORT $LN1@SV_ClientP
$LN2@SV_ClientP:

; 35   : 	
; 36   : 	va_start( argptr, fmt );

	lea	edx, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], edx

; 37   : 	Q_vsprintf( string, fmt, argptr );

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	push	99999					; 0001869fH
	lea	edx, DWORD PTR _string$[ebp]
	push	edx
	call	_Q_vsnprintf
	add	esp, 16					; 00000010H

; 38   : 	va_end( argptr );

	mov	DWORD PTR _argptr$[ebp], 0

; 39   : 	
; 40   : 	MSG_BeginServerCmd( &cl->netchan.message, svc_print );

	push	0
	push	1
	push	8
	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 660				; 00000294H
	push	eax
	call	_MSG_WriteCmdExt
	add	esp, 16					; 00000010H

; 41   : 	MSG_WriteString( &cl->netchan.message, string );

	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cl$[ebp]
	add	edx, 660				; 00000294H
	push	edx
	call	_MSG_WriteString
	add	esp, 8
$LN1@SV_ClientP:

; 42   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_ClientPrintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_KillOperatorCommands PROC

; 942  : {

	push	ebp
	mov	ebp, esp

; 943  : 	Cmd_RemoveCommand( "heartbeat" );

	push	OFFSET $SG136533
	call	_Cmd_RemoveCommand
	add	esp, 4

; 944  : 	Cmd_RemoveCommand( "kick" );

	push	OFFSET $SG136534
	call	_Cmd_RemoveCommand
	add	esp, 4

; 945  : 	Cmd_RemoveCommand( "status" );

	push	OFFSET $SG136535
	call	_Cmd_RemoveCommand
	add	esp, 4

; 946  : 	Cmd_RemoveCommand( "localinfo" );

	push	OFFSET $SG136536
	call	_Cmd_RemoveCommand
	add	esp, 4

; 947  : 	Cmd_RemoveCommand( "serverinfo" );

	push	OFFSET $SG136537
	call	_Cmd_RemoveCommand
	add	esp, 4

; 948  : 	Cmd_RemoveCommand( "clientinfo" );

	push	OFFSET $SG136538
	call	_Cmd_RemoveCommand
	add	esp, 4

; 949  : 	Cmd_RemoveCommand( "playersonly" );

	push	OFFSET $SG136539
	call	_Cmd_RemoveCommand
	add	esp, 4

; 950  : 	Cmd_RemoveCommand( "restart" );

	push	OFFSET $SG136540
	call	_Cmd_RemoveCommand
	add	esp, 4

; 951  : 	Cmd_RemoveCommand( "entpatch" );

	push	OFFSET $SG136541
	call	_Cmd_RemoveCommand
	add	esp, 4

; 952  : 	Cmd_RemoveCommand( "edict_usage" );

	push	OFFSET $SG136542
	call	_Cmd_RemoveCommand
	add	esp, 4

; 953  : 	Cmd_RemoveCommand( "entity_info" );

	push	OFFSET $SG136543
	call	_Cmd_RemoveCommand
	add	esp, 4

; 954  : 	Cmd_RemoveCommand( "shutdownserver" );

	push	OFFSET $SG136544
	call	_Cmd_RemoveCommand
	add	esp, 4

; 955  : 	Cmd_RemoveCommand( "changelevel" );

	push	OFFSET $SG136545
	call	_Cmd_RemoveCommand
	add	esp, 4

; 956  : 	Cmd_RemoveCommand( "changelevel2" );

	push	OFFSET $SG136546
	call	_Cmd_RemoveCommand
	add	esp, 4

; 957  : 
; 958  : 	if( host.type == HOST_NORMAL )

	cmp	DWORD PTR _host+164, 0
	jne	SHORT $LN2@SV_KillOpe

; 959  : 	{
; 960  : 		Cmd_RemoveCommand( "save" );

	push	OFFSET $SG136549
	call	_Cmd_RemoveCommand
	add	esp, 4

; 961  : 		Cmd_RemoveCommand( "savequick" );

	push	OFFSET $SG136550
	call	_Cmd_RemoveCommand
	add	esp, 4

; 962  : 		Cmd_RemoveCommand( "autosave" );

	push	OFFSET $SG136551
	call	_Cmd_RemoveCommand
	add	esp, 4

; 963  : 	}

	jmp	SHORT $LN1@SV_KillOpe
$LN2@SV_KillOpe:

; 964  : 	else if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN1@SV_KillOpe

; 965  : 	{
; 966  : 		Cmd_RemoveCommand( "say" );

	push	OFFSET $SG136553
	call	_Cmd_RemoveCommand
	add	esp, 4
$LN1@SV_KillOpe:

; 967  : 	}
; 968  : }

	pop	ebp
	ret	0
_SV_KillOperatorCommands ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_SV_InitOperatorCommands PROC

; 908  : {

	push	ebp
	mov	ebp, esp

; 909  : 	Cmd_AddCommand( "heartbeat", SV_Heartbeat_f, "send a heartbeat to the master server" );

	push	OFFSET $SG136492
	push	OFFSET _SV_Heartbeat_f
	push	OFFSET $SG136493
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 910  : 	Cmd_AddCommand( "kick", SV_Kick_f, "kick a player off the server by number or name" );

	push	OFFSET $SG136494
	push	OFFSET _SV_Kick_f
	push	OFFSET $SG136495
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 911  : 	Cmd_AddCommand( "status", SV_Status_f, "print server status information" );

	push	OFFSET $SG136496
	push	OFFSET _SV_Status_f
	push	OFFSET $SG136497
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 912  : 	Cmd_AddCommand( "localinfo", SV_LocalInfo_f, "examine or change the localinfo string" );

	push	OFFSET $SG136498
	push	OFFSET _SV_LocalInfo_f
	push	OFFSET $SG136499
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 913  : 	Cmd_AddCommand( "serverinfo", SV_ServerInfo_f, "examine or change the serverinfo string" );

	push	OFFSET $SG136500
	push	OFFSET _SV_ServerInfo_f
	push	OFFSET $SG136501
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 914  : 	Cmd_AddCommand( "clientinfo", SV_ClientInfo_f, "print user infostring (player num required)" );

	push	OFFSET $SG136502
	push	OFFSET _SV_ClientInfo_f
	push	OFFSET $SG136503
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 915  : 	Cmd_AddCommand( "playersonly", SV_PlayersOnly_f, "freezes time, except for players" );

	push	OFFSET $SG136504
	push	OFFSET _SV_PlayersOnly_f
	push	OFFSET $SG136505
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 916  : 	Cmd_AddCommand( "restart", SV_Restart_f, "restarting current level" );

	push	OFFSET $SG136506
	push	OFFSET _SV_Restart_f
	push	OFFSET $SG136507
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 917  : 	Cmd_AddCommand( "entpatch", SV_EntPatch_f, "write entity patch to allow external editing" );

	push	OFFSET $SG136508
	push	OFFSET _SV_EntPatch_f
	push	OFFSET $SG136509
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 918  : 	Cmd_AddCommand( "edict_usage", SV_EdictUsage_f, "show info about edicts usage" );

	push	OFFSET $SG136510
	push	OFFSET _SV_EdictUsage_f
	push	OFFSET $SG136511
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 919  : 	Cmd_AddCommand( "entity_info", SV_EntityInfo_f, "show more info about edicts" );

	push	OFFSET $SG136512
	push	OFFSET _SV_EntityInfo_f
	push	OFFSET $SG136513
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 920  : 	Cmd_AddCommand( "shutdownserver", SV_KillServer_f, "shutdown current server" );

	push	OFFSET $SG136514
	push	OFFSET _SV_KillServer_f
	push	OFFSET $SG136515
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 921  : 	Cmd_AddCommand( "changelevel", SV_ChangeLevel_f, "change level" );

	push	OFFSET $SG136516
	push	OFFSET _SV_ChangeLevel_f
	push	OFFSET $SG136517
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 922  : 	Cmd_AddCommand( "changelevel2", SV_ChangeLevel2_f, "smooth change level" );

	push	OFFSET $SG136518
	push	OFFSET _SV_ChangeLevel2_f
	push	OFFSET $SG136519
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 923  : 
; 924  : 	if( host.type == HOST_NORMAL )

	cmp	DWORD PTR _host+164, 0
	jne	SHORT $LN2@SV_InitOpe

; 925  : 	{
; 926  : 		Cmd_AddCommand( "save", SV_Save_f, "save the game to a file" );

	push	OFFSET $SG136522
	push	OFFSET _SV_Save_f
	push	OFFSET $SG136523
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 927  : 		Cmd_AddCommand( "savequick", SV_QuickSave_f, "save the game to the quicksave" );

	push	OFFSET $SG136524
	push	OFFSET _SV_QuickSave_f
	push	OFFSET $SG136525
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 928  : 		Cmd_AddCommand( "autosave", SV_AutoSave_f, "save the game to 'autosave' file" );

	push	OFFSET $SG136526
	push	OFFSET _SV_AutoSave_f
	push	OFFSET $SG136527
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH

; 929  : 	}

	jmp	SHORT $LN1@SV_InitOpe
$LN2@SV_InitOpe:

; 930  : 	else if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN1@SV_InitOpe

; 931  : 	{
; 932  : 		Cmd_AddCommand( "say", SV_ConSay_f, "send a chat message to everyone on the server" );

	push	OFFSET $SG136529
	push	OFFSET _SV_ConSay_f
	push	OFFSET $SG136530
	call	_Cmd_AddCommand
	add	esp, 12					; 0000000cH
$LN1@SV_InitOpe:

; 933  : 	}
; 934  : }

	pop	ebp
	ret	0
_SV_InitOperatorCommands ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_argptr$ = -1040					; size = 4
_i$ = -1036						; size = 4
_cl$ = -1032						; size = 4
_string$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_ignore$ = 8						; size = 4
_fmt$ = 12						; size = 4
_SV_BroadcastPrintf PROC

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1040				; 00000410H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 53   : 	char		string[MAX_SYSPATH];
; 54   : 	va_list		argptr;
; 55   : 	sv_client_t	*cl;
; 56   : 	int		i;
; 57   : 
; 58   : 	va_start( argptr, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], eax

; 59   : 	Q_vsprintf( string, fmt, argptr );

	mov	ecx, DWORD PTR _argptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	push	99999					; 0001869fH
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_Q_vsnprintf
	add	esp, 16					; 00000010H

; 60   : 	va_end( argptr );

	mov	DWORD PTR _argptr$[ebp], 0

; 61   : 
; 62   : 	if( sv.state == ss_active )

	cmp	DWORD PTR _sv, 2
	jne	$LN5@SV_Broadca

; 63   : 	{
; 64   : 		for( i = 0, cl = svs.clients; i < svs.maxclients; i++, cl++ )

	mov	DWORD PTR _i$[ebp], 0
	mov	ecx, DWORD PTR _svs+33344
	mov	DWORD PTR _cl$[ebp], ecx
	jmp	SHORT $LN4@SV_Broadca
$LN2@SV_Broadca:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 287560				; 00046348H
	mov	DWORD PTR _cl$[ebp], eax
$LN4@SV_Broadca:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _svs+16
	jge	SHORT $LN5@SV_Broadca

; 65   : 		{
; 66   : 			if( FBitSet( cl->flags, FCL_FAKECLIENT ))

	mov	edx, DWORD PTR _cl$[ebp]
	mov	eax, DWORD PTR [edx+40]
	and	eax, 128				; 00000080H
	je	SHORT $LN6@SV_Broadca

; 67   : 				continue;

	jmp	SHORT $LN2@SV_Broadca
$LN6@SV_Broadca:

; 68   : 
; 69   : 			if( cl == ignore || cl->state != cs_spawned )

	mov	ecx, DWORD PTR _cl$[ebp]
	cmp	ecx, DWORD PTR _ignore$[ebp]
	je	SHORT $LN8@SV_Broadca
	mov	edx, DWORD PTR _cl$[ebp]
	cmp	DWORD PTR [edx], 3
	je	SHORT $LN7@SV_Broadca
$LN8@SV_Broadca:

; 70   : 				continue;

	jmp	SHORT $LN2@SV_Broadca
$LN7@SV_Broadca:

; 71   : 
; 72   : 			MSG_BeginServerCmd( &cl->netchan.message, svc_print );

	push	0
	push	1
	push	8
	mov	eax, DWORD PTR _cl$[ebp]
	add	eax, 660				; 00000294H
	push	eax
	call	_MSG_WriteCmdExt
	add	esp, 16					; 00000010H

; 73   : 			MSG_WriteString( &cl->netchan.message, string );

	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cl$[ebp]
	add	edx, 660				; 00000294H
	push	edx
	call	_MSG_WriteString
	add	esp, 8

; 74   : 		}

	jmp	$LN2@SV_Broadca
$LN5@SV_Broadca:

; 75   : 	}
; 76   : 
; 77   : 	if( host.type == HOST_DEDICATED )

	cmp	DWORD PTR _host+164, 1
	jne	SHORT $LN1@SV_Broadca

; 78   : 	{
; 79   : 		// echo to console
; 80   : 		Con_DPrintf( string );

	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_Con_DPrintf
	add	esp, 4
$LN1@SV_Broadca:

; 81   : 	}
; 82   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_BroadcastPrintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\server\sv_cmds.c
_TEXT	SEGMENT
_argptr$ = -1032					; size = 4
_string$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_fmt$ = 8						; size = 4
_SV_BroadcastCommand PROC

; 92   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1032				; 00000408H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 93   : 	char	string[MAX_SYSPATH];
; 94   : 	va_list	argptr;	
; 95   : 
; 96   : 	if( sv.state == ss_dead )

	cmp	DWORD PTR _sv, 0
	jne	SHORT $LN2@SV_Broadca

; 97   : 		return;

	jmp	SHORT $LN1@SV_Broadca
$LN2@SV_Broadca:

; 98   : 
; 99   : 	va_start( argptr, fmt );

	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], eax

; 100  : 	Q_vsprintf( string, fmt, argptr );

	mov	ecx, DWORD PTR _argptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	push	99999					; 0001869fH
	lea	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_Q_vsnprintf
	add	esp, 16					; 00000010H

; 101  : 	va_end( argptr );

	mov	DWORD PTR _argptr$[ebp], 0

; 102  : 
; 103  : 	MSG_BeginServerCmd( &sv.reliable_datagram, svc_stufftext );

	push	0
	push	1
	push	9
	push	OFFSET _sv+1195756
	call	_MSG_WriteCmdExt
	add	esp, 16					; 00000010H

; 104  : 	MSG_WriteString( &sv.reliable_datagram, string );

	lea	ecx, DWORD PTR _string$[ebp]
	push	ecx
	push	OFFSET _sv+1195756
	call	_MSG_WriteString
	add	esp, 8
$LN1@SV_Broadca:

; 105  : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_SV_BroadcastCommand ENDP
_TEXT	ENDS
END
