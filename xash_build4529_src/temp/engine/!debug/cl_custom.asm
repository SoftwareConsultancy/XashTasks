; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\USER\Documents\GitHub\XashTasks\xash_build4529_src\engine\client\cl_custom.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_CL_CheckFile
PUBLIC	_CL_AddToResourceList
PUBLIC	_CL_RemoveFromResourceList
PUBLIC	_CL_MoveToOnHandList
PUBLIC	_CL_ClearResourceLists
PUBLIC	_CL_ClearResourceList
PUBLIC	__real@00000000
EXTRN	_Q_strncpy:PROC
EXTRN	_va:PROC
EXTRN	__Mem_Free:PROC
EXTRN	_FS_FileExists:PROC
EXTRN	_Host_IsLocalClient:PROC
EXTRN	_Host_Error:PROC
EXTRN	_COM_IsSafeFileToDownload:PROC
EXTRN	_Con_Reportf:PROC
EXTRN	_MSG_WriteCmdExt:PROC
EXTRN	_MSG_WriteString:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_host:BYTE
EXTRN	_cl:BYTE
EXTRN	_cls:BYTE
EXTRN	_cl_allow_download:BYTE
EXTRN	_cl_download_ingame:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
_DATA	SEGMENT
$SG138540 DB	'sound/', 00H
	ORG $+1
$SG138541 DB	'%s%s', 00H
	ORG $+3
$SG138543 DB	'refusing to download %s', 0aH, 00H
	ORG $+3
$SG138545 DB	'Download refused, cl_allow_download is 0', 0aH, 00H
	ORG $+2
$SG138547 DB	'In-game download refused...', 0aH, 00H
	ORG $+3
$SG138551 DB	'^3Warning:^7 file %s missing during demo playback.', 0aH
	DB	00H
$SG138552 DB	'dlfile %s', 00H
	ORG $+2
$SG138564 DB	'^1Error:^7 Resource already linked', 0aH, 00H
$SG138567 DB	'Resource list corrupted.', 0aH, 00H
	ORG $+2
$SG138577 DB	'mislinked resource in CL_RemoveFromResourceList', 0aH, 00H
	ORG $+3
$SG138580 DB	'attempt to free last entry in list.', 0aH, 00H
	ORG $+3
$SG138585 DB	'Null resource passed to CL_MoveToOnHandList', 0aH, 00H
	ORG $+7
$SG138595 DB	'c:\users\user\documents\github\xashtasks\xash_build4529_'
	DB	'src\engine\client\cl_custom.c', 00H
_DATA	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\client\cl_custom.c
_TEXT	SEGMENT
_n$ = -8						; size = 4
_p$ = -4						; size = 4
_pList$ = 8						; size = 4
_CL_ClearResourceList PROC

; 124  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 125  : 	resource_t	*p, *n;
; 126  : 
; 127  : 	for( p = pList->pNext; p != pList && p; p = n )

	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _p$[ebp], ecx
	jmp	SHORT $LN4@CL_ClearRe
$LN2@CL_ClearRe:
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _p$[ebp], edx
$LN4@CL_ClearRe:
	mov	eax, DWORD PTR _p$[ebp]
	cmp	eax, DWORD PTR _pList$[ebp]
	je	SHORT $LN3@CL_ClearRe
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN3@CL_ClearRe

; 128  : 	{
; 129  : 		n = p->pNext;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	DWORD PTR _n$[ebp], edx

; 130  : 
; 131  : 		CL_RemoveFromResourceList( p );

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_CL_RemoveFromResourceList
	add	esp, 4

; 132  : 		Mem_Free( p );

	push	132					; 00000084H
	push	OFFSET $SG138595
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	__Mem_Free
	add	esp, 12					; 0000000cH

; 133  : 	}

	jmp	SHORT $LN2@CL_ClearRe
$LN3@CL_ClearRe:

; 134  : 
; 135  : 	pList->pPrev = pList;

	mov	edx, DWORD PTR _pList$[ebp]
	mov	eax, DWORD PTR _pList$[ebp]
	mov	DWORD PTR [edx+132], eax

; 136  : 	pList->pNext = pList;

	mov	ecx, DWORD PTR _pList$[ebp]
	mov	edx, DWORD PTR _pList$[ebp]
	mov	DWORD PTR [ecx+128], edx

; 137  : }

	mov	esp, ebp
	pop	ebp
	ret	0
_CL_ClearResourceList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\client\cl_custom.c
_TEXT	SEGMENT
_CL_ClearResourceLists PROC

; 140  : {

	push	ebp
	mov	ebp, esp

; 141  : 	CL_ClearResourceList( &cl.resourcesneeded );

	push	OFFSET _cl+1984996
	call	_CL_ClearResourceList
	add	esp, 4

; 142  : 	CL_ClearResourceList( &cl.resourcesonhand );

	push	OFFSET _cl+1984860
	call	_CL_ClearResourceList
	add	esp, 4

; 143  : }

	pop	ebp
	ret	0
_CL_ClearResourceLists ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\client\cl_custom.c
_TEXT	SEGMENT
_pResource$ = 8						; size = 4
_CL_MoveToOnHandList PROC

; 112  : {

	push	ebp
	mov	ebp, esp

; 113  : 	if( !pResource )

	cmp	DWORD PTR _pResource$[ebp], 0
	jne	SHORT $LN2@CL_MoveToO

; 114  : 	{
; 115  : 		Con_Reportf( "Null resource passed to CL_MoveToOnHandList\n" );

	push	OFFSET $SG138585
	call	_Con_Reportf
	add	esp, 4

; 116  : 		return;

	jmp	SHORT $LN1@CL_MoveToO
$LN2@CL_MoveToO:

; 117  : 	}
; 118  : 
; 119  : 	CL_RemoveFromResourceList( pResource );

	mov	eax, DWORD PTR _pResource$[ebp]
	push	eax
	call	_CL_RemoveFromResourceList
	add	esp, 4

; 120  : 	CL_AddToResourceList( pResource, &cl.resourcesonhand );

	push	OFFSET _cl+1984860
	mov	ecx, DWORD PTR _pResource$[ebp]
	push	ecx
	call	_CL_AddToResourceList
	add	esp, 8
$LN1@CL_MoveToO:

; 121  : }

	pop	ebp
	ret	0
_CL_MoveToOnHandList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\client\cl_custom.c
_TEXT	SEGMENT
_pResource$ = 8						; size = 4
_CL_RemoveFromResourceList PROC

; 98   : {

	push	ebp
	mov	ebp, esp

; 99   : 	if( pResource->pPrev == NULL || pResource->pNext == NULL )

	mov	eax, DWORD PTR _pResource$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	SHORT $LN3@CL_RemoveF
	mov	ecx, DWORD PTR _pResource$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	jne	SHORT $LN2@CL_RemoveF
$LN3@CL_RemoveF:

; 100  : 		Host_Error( "mislinked resource in CL_RemoveFromResourceList\n" );

	push	OFFSET $SG138577
	call	_Host_Error
	add	esp, 4
$LN2@CL_RemoveF:

; 101  : 
; 102  : 	if ( pResource->pNext == pResource || pResource->pPrev == pResource )

	mov	edx, DWORD PTR _pResource$[ebp]
	mov	eax, DWORD PTR [edx+128]
	cmp	eax, DWORD PTR _pResource$[ebp]
	je	SHORT $LN5@CL_RemoveF
	mov	ecx, DWORD PTR _pResource$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	cmp	edx, DWORD PTR _pResource$[ebp]
	jne	SHORT $LN4@CL_RemoveF
$LN5@CL_RemoveF:

; 103  : 		Host_Error( "attempt to free last entry in list.\n" );

	push	OFFSET $SG138580
	call	_Host_Error
	add	esp, 4
$LN4@CL_RemoveF:

; 104  : 
; 105  : 	pResource->pPrev->pNext = pResource->pNext;

	mov	eax, DWORD PTR _pResource$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR _pResource$[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	DWORD PTR [ecx+128], eax

; 106  : 	pResource->pNext->pPrev = pResource->pPrev;

	mov	ecx, DWORD PTR _pResource$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	mov	eax, DWORD PTR _pResource$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR [edx+132], ecx

; 107  : 	pResource->pPrev = NULL;

	mov	edx, DWORD PTR _pResource$[ebp]
	mov	DWORD PTR [edx+132], 0

; 108  : 	pResource->pNext = NULL;

	mov	eax, DWORD PTR _pResource$[ebp]
	mov	DWORD PTR [eax+128], 0

; 109  : }

	pop	ebp
	ret	0
_CL_RemoveFromResourceList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\client\cl_custom.c
_TEXT	SEGMENT
_pResource$ = 8						; size = 4
_pList$ = 12						; size = 4
_CL_AddToResourceList PROC

; 81   : {

	push	ebp
	mov	ebp, esp

; 82   : 	if( pResource->pPrev != NULL || pResource->pNext != NULL )

	mov	eax, DWORD PTR _pResource$[ebp]
	cmp	DWORD PTR [eax+132], 0
	jne	SHORT $LN3@CL_AddToRe
	mov	ecx, DWORD PTR _pResource$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	je	SHORT $LN2@CL_AddToRe
$LN3@CL_AddToRe:

; 83   : 	{
; 84   : 		Con_Reportf( S_ERROR "Resource already linked\n" );

	push	OFFSET $SG138564
	call	_Con_Reportf
	add	esp, 4

; 85   : 		return;

	jmp	SHORT $LN1@CL_AddToRe
$LN2@CL_AddToRe:

; 86   : 	}
; 87   : 
; 88   : 	if( pList->pPrev == NULL || pList->pNext == NULL )

	mov	edx, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [edx+132], 0
	je	SHORT $LN5@CL_AddToRe
	mov	eax, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [eax+128], 0
	jne	SHORT $LN4@CL_AddToRe
$LN5@CL_AddToRe:

; 89   : 		Host_Error( "Resource list corrupted.\n" );

	push	OFFSET $SG138567
	call	_Host_Error
	add	esp, 4
$LN4@CL_AddToRe:

; 90   : 
; 91   : 	pResource->pPrev = pList->pPrev;

	mov	ecx, DWORD PTR _pResource$[ebp]
	mov	edx, DWORD PTR _pList$[ebp]
	mov	eax, DWORD PTR [edx+132]
	mov	DWORD PTR [ecx+132], eax

; 92   : 	pResource->pNext = pList;

	mov	ecx, DWORD PTR _pResource$[ebp]
	mov	edx, DWORD PTR _pList$[ebp]
	mov	DWORD PTR [ecx+128], edx

; 93   : 	pList->pPrev->pNext = pResource;

	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR _pResource$[ebp]
	mov	DWORD PTR [ecx+128], edx

; 94   : 	pList->pPrev = pResource;

	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR _pResource$[ebp]
	mov	DWORD PTR [eax+132], ecx
$LN1@CL_AddToRe:

; 95   : }

	pop	ebp
	ret	0
_CL_AddToResourceList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\documents\github\xashtasks\xash_build4529_src\engine\client\cl_custom.c
_TEXT	SEGMENT
tv65 = -72						; size = 4
_filepath$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_msg$ = 8						; size = 4
_pResource$ = 12					; size = 4
_CL_CheckFile PROC

; 21   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 22   : 	char	filepath[MAX_QPATH];
; 23   : 
; 24   : 	switch( pResource->type )

	mov	eax, DWORD PTR _pResource$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN4@CL_CheckFi
	cmp	DWORD PTR tv65[ebp], 2
	je	SHORT $LN4@CL_CheckFi
	jmp	SHORT $LN2@CL_CheckFi
$LN4@CL_CheckFi:

; 25   : 	{
; 26   : 	case t_sound:
; 27   : 	case t_model:
; 28   : 		// built-in resources not needs to be downloaded
; 29   : 		if( pResource->szFileName[0] == '*' )

	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _pResource$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 42					; 0000002aH
	jne	SHORT $LN5@CL_CheckFi

; 30   : 			return true;

	mov	eax, 1
	jmp	$LN1@CL_CheckFi
$LN5@CL_CheckFi:
$LN2@CL_CheckFi:

; 31   : 		break;
; 32   : 	}
; 33   : 
; 34   : 	// resource was missed on server
; 35   : 	if( pResource->nDownloadSize == -1 )

	mov	eax, DWORD PTR _pResource$[ebp]
	cmp	DWORD PTR [eax+72], -1
	jne	SHORT $LN6@CL_CheckFi

; 36   : 	{
; 37   : 		ClearBits( pResource->ucFlags, RES_FATALIFMISSING );

	mov	ecx, DWORD PTR _pResource$[ebp]
	movzx	edx, BYTE PTR [ecx+76]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _pResource$[ebp]
	mov	BYTE PTR [eax+76], dl

; 38   : 		return true;

	mov	eax, 1
	jmp	$LN1@CL_CheckFi
$LN6@CL_CheckFi:

; 39   : 	}
; 40   : 
; 41   : 	if( pResource->type == t_sound )

	mov	ecx, DWORD PTR _pResource$[ebp]
	cmp	DWORD PTR [ecx+64], 0
	jne	SHORT $LN7@CL_CheckFi

; 42   : 		Q_strncpy( filepath, va( "%s%s", DEFAULT_SOUNDPATH, pResource->szFileName ), sizeof( filepath ));

	push	64					; 00000040H
	mov	edx, DWORD PTR _pResource$[ebp]
	push	edx
	push	OFFSET $SG138540
	push	OFFSET $SG138541
	call	_va
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR _filepath$[ebp]
	push	eax
	call	_Q_strncpy
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@CL_CheckFi
$LN7@CL_CheckFi:

; 43   : 	else Q_strncpy( filepath, pResource->szFileName, sizeof( filepath ));

	push	64					; 00000040H
	mov	ecx, DWORD PTR _pResource$[ebp]
	push	ecx
	lea	edx, DWORD PTR _filepath$[ebp]
	push	edx
	call	_Q_strncpy
	add	esp, 12					; 0000000cH
$LN8@CL_CheckFi:

; 44   :  
; 45   : 	if( !COM_IsSafeFileToDownload( filepath ))

	lea	eax, DWORD PTR _filepath$[ebp]
	push	eax
	call	_COM_IsSafeFileToDownload
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN9@CL_CheckFi

; 46   : 	{
; 47   : 		Con_Reportf( "refusing to download %s\n", filepath );

	lea	ecx, DWORD PTR _filepath$[ebp]
	push	ecx
	push	OFFSET $SG138543
	call	_Con_Reportf
	add	esp, 8

; 48   : 		return true;

	mov	eax, 1
	jmp	$LN1@CL_CheckFi
$LN9@CL_CheckFi:

; 49   : 	}
; 50   : 
; 51   : 	if( !cl_allow_download.value )

	movss	xmm0, DWORD PTR _cl_allow_download+12
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN10@CL_CheckFi

; 52   : 	{
; 53   : 		Con_Reportf( "Download refused, cl_allow_download is 0\n" );

	push	OFFSET $SG138545
	call	_Con_Reportf
	add	esp, 4

; 54   : 		return true;

	mov	eax, 1
	jmp	$LN1@CL_CheckFi
$LN10@CL_CheckFi:

; 55   : 	}
; 56   : 
; 57   : 	if( cls.state == ca_active && !cl_download_ingame.value )

	cmp	DWORD PTR _cls, 4
	jne	SHORT $LN11@CL_CheckFi
	movss	xmm0, DWORD PTR _cl_download_ingame+12
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN11@CL_CheckFi

; 58   : 	{
; 59   : 		Con_Reportf( "In-game download refused...\n" );

	push	OFFSET $SG138547
	call	_Con_Reportf
	add	esp, 4

; 60   : 		return true;

	mov	eax, 1
	jmp	$LN1@CL_CheckFi
$LN11@CL_CheckFi:

; 61   : 	}
; 62   : 
; 63   : 	// don't request downloads from local client it's silly
; 64   : 	if( Host_IsLocalClient() || FS_FileExists( filepath, false ))

	call	_Host_IsLocalClient
	test	eax, eax
	jne	SHORT $LN13@CL_CheckFi
	push	0
	lea	edx, DWORD PTR _filepath$[ebp]
	push	edx
	call	_FS_FileExists
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@CL_CheckFi
$LN13@CL_CheckFi:

; 65   : 		return true;

	mov	eax, 1
	jmp	SHORT $LN1@CL_CheckFi
$LN12@CL_CheckFi:

; 66   : 
; 67   : 	if( cls.demoplayback )

	cmp	DWORD PTR _cls+297580, 0
	je	SHORT $LN14@CL_CheckFi

; 68   : 	{
; 69   : 		Con_Reportf( S_WARN "file %s missing during demo playback.\n", filepath );

	lea	eax, DWORD PTR _filepath$[ebp]
	push	eax
	push	OFFSET $SG138551
	call	_Con_Reportf
	add	esp, 8

; 70   : 		return true;

	mov	eax, 1
	jmp	SHORT $LN1@CL_CheckFi
$LN14@CL_CheckFi:

; 71   : 	}
; 72   : 
; 73   : 	MSG_BeginClientCmd( msg, clc_stringcmd );

	push	0
	push	0
	push	3
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	_MSG_WriteCmdExt
	add	esp, 16					; 00000010H

; 74   : 	MSG_WriteString( msg, va( "dlfile %s", filepath ));

	lea	edx, DWORD PTR _filepath$[ebp]
	push	edx
	push	OFFSET $SG138552
	call	_va
	add	esp, 8
	push	eax
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	_MSG_WriteString
	add	esp, 8

; 75   : 	host.downloadcount++;

	mov	ecx, DWORD PTR _host+752
	add	ecx, 1
	mov	DWORD PTR _host+752, ecx

; 76   : 
; 77   : 	return false;

	xor	eax, eax
$LN1@CL_CheckFi:

; 78   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_CL_CheckFile ENDP
_TEXT	ENDS
END
