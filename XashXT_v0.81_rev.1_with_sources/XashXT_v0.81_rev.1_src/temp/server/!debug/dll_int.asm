; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\USER\Downloads\XashXT_v0.81_rev.1_with_sources\XashXT_v0.81_rev.1_src\server\dll_int.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?gNewDLLFunctions@@3UNEW_DLL_FUNCTIONS@@A	; gNewDLLFunctions
PUBLIC	?g_engfuncs@@3Uenginefuncs_s@@A			; g_engfuncs
PUBLIC	?OnFreeEntPrivateData@@YAXPAUedict_s@@@Z	; OnFreeEntPrivateData
PUBLIC	?g_physfuncs@@3Userver_physics_api_s@@A		; g_physfuncs
PUBLIC	?gTouchDisabled@@3HA				; gTouchDisabled
PUBLIC	?gpGlobals@@3PAUglobalvars_t@@A			; gpGlobals
PUBLIC	?DispatchSpawn@@YAHPAUedict_s@@@Z		; DispatchSpawn
PUBLIC	?DispatchKeyValue@@YAXPAUedict_s@@PAUKeyValueData_s@@@Z ; DispatchKeyValue
PUBLIC	?DispatchTouch@@YAXPAUedict_s@@0@Z		; DispatchTouch
PUBLIC	?DispatchUse@@YAXPAUedict_s@@0@Z		; DispatchUse
PUBLIC	?DispatchThink@@YAXPAUedict_s@@@Z		; DispatchThink
PUBLIC	?DispatchBlocked@@YAXPAUedict_s@@0@Z		; DispatchBlocked
PUBLIC	?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z ; DispatchSave
PUBLIC	?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z ; DispatchRestore
PUBLIC	?DispatchObjectCollsionBox@@YAXPAUedict_s@@@Z	; DispatchObjectCollsionBox
PUBLIC	?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z ; SaveWriteFields
PUBLIC	?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z ; SaveReadFields
EXTRN	?ClientConnect@@YAHPAUedict_s@@PBD1QAD@Z:PROC	; ClientConnect
EXTRN	?ClientDisconnect@@YAXPAUedict_s@@@Z:PROC	; ClientDisconnect
EXTRN	?ClientKill@@YAXPAUedict_s@@@Z:PROC		; ClientKill
EXTRN	?ClientPutInServer@@YAXPAUedict_s@@@Z:PROC	; ClientPutInServer
EXTRN	?ClientCommand@@YAXPAUedict_s@@@Z:PROC		; ClientCommand
EXTRN	?ClientUserInfoChanged@@YAXPAUedict_s@@PAD@Z:PROC ; ClientUserInfoChanged
EXTRN	?ServerActivate@@YAXPAUedict_s@@HH@Z:PROC	; ServerActivate
EXTRN	?ServerDeactivate@@YAXXZ:PROC			; ServerDeactivate
EXTRN	?StartFrame@@YAXXZ:PROC				; StartFrame
EXTRN	?PlayerPostThink@@YAXPAUedict_s@@@Z:PROC	; PlayerPostThink
EXTRN	?PlayerPreThink@@YAXPAUedict_s@@@Z:PROC		; PlayerPreThink
EXTRN	?ParmsNewLevel@@YAXXZ:PROC			; ParmsNewLevel
EXTRN	?ParmsChangeLevel@@YAXXZ:PROC			; ParmsChangeLevel
EXTRN	?GetGameDescription@@YAPBDXZ:PROC		; GetGameDescription
EXTRN	?PlayerCustomization@@YAXPAUedict_s@@PAUcustomization_s@@@Z:PROC ; PlayerCustomization
EXTRN	?SpectatorConnect@@YAXPAUedict_s@@@Z:PROC	; SpectatorConnect
EXTRN	?SpectatorDisconnect@@YAXPAUedict_s@@@Z:PROC	; SpectatorDisconnect
EXTRN	?SpectatorThink@@YAXPAUedict_s@@@Z:PROC		; SpectatorThink
EXTRN	?Sys_Error@@YAXPBD@Z:PROC			; Sys_Error
EXTRN	?SetupVisibility@@YAXPAUedict_s@@0PAPAE1@Z:PROC	; SetupVisibility
EXTRN	?UpdateClientData@@YAXPBUedict_s@@HPAUclientdata_s@@@Z:PROC ; UpdateClientData
EXTRN	?AddToFullPack@@YAHPAUentity_state_s@@HPAUedict_s@@1HHPAE@Z:PROC ; AddToFullPack
EXTRN	?CreateBaseline@@YAXHHPAUentity_state_s@@PAUedict_s@@HVVector@@2@Z:PROC ; CreateBaseline
EXTRN	?RegisterEncoders@@YAXXZ:PROC			; RegisterEncoders
EXTRN	?GetWeaponData@@YAHPAUedict_s@@PAUweapon_data_s@@@Z:PROC ; GetWeaponData
EXTRN	?CmdStart@@YAXPBUedict_s@@PBUusercmd_s@@I@Z:PROC ; CmdStart
EXTRN	?CmdEnd@@YAXPBUedict_s@@@Z:PROC			; CmdEnd
EXTRN	?ConnectionlessPacket@@YAHPBUnetadr_s@@PBDPADPAH@Z:PROC ; ConnectionlessPacket
EXTRN	?GetHullBounds@@YAHHPAM0@Z:PROC			; GetHullBounds
EXTRN	?CreateInstancedBaselines@@YAXXZ:PROC		; CreateInstancedBaselines
EXTRN	?InconsistentFile@@YAHPBUedict_s@@PBDPAD@Z:PROC	; InconsistentFile
EXTRN	?AllowLagCompensation@@YAHXZ:PROC		; AllowLagCompensation
EXTRN	?ShouldCollide@@YAHPAUedict_s@@0@Z:PROC		; ShouldCollide
EXTRN	?PM_Move@@YAXPAUplayermove_s@@H@Z:PROC		; PM_Move
EXTRN	?PM_Init@@YAXPAUplayermove_s@@@Z:PROC		; PM_Init
EXTRN	?PM_FindTextureType@@YADPAD@Z:PROC		; PM_FindTextureType
EXTRN	?GameDLLInit@@YAXXZ:PROC			; GameDLLInit
EXTRN	?GameDLLShutdown@@YAXXZ:PROC			; GameDLLShutdown
EXTRN	?SaveGlobalState@@YAXPAUsaverestore_s@@@Z:PROC	; SaveGlobalState
EXTRN	?RestoreGlobalState@@YAXPAUsaverestore_s@@@Z:PROC ; RestoreGlobalState
EXTRN	?ResetGlobalState@@YAXXZ:PROC			; ResetGlobalState
_BSS	SEGMENT
?g_engfuncs@@3Uenginefuncs_s@@A DB 0240H DUP (?)	; g_engfuncs
?g_physfuncs@@3Userver_physics_api_s@@A DB 07cH DUP (?)	; g_physfuncs
?gTouchDisabled@@3HA DD 01H DUP (?)			; gTouchDisabled
?gpGlobals@@3PAUglobalvars_t@@A DD 01H DUP (?)		; gpGlobals
_BSS	ENDS
CONST	SEGMENT
$SG74969 DB	'build', 00H
	ORG $+2
$SG74971 DB	'buildnum', 00H
	ORG $+3
$SG74982 DB	'host_gameloaded', 00H
$SG74992 DB	'host_gameloaded', 00H
$SG75001 DB	'host_gameloaded', 00H
$SG75061 DB	'Dormant entity %s is thinking!!', 0aH, 00H
	ORG $+3
$SG75081 DB	'ENTITY TABLE OR INDEX IS WRONG!!!!', 0aH, 00H
$SG75091 DB	'globalname', 00H
	ORG $+1
$SG75094 DB	'Global entity found %s, wrong class %s', 0aH, 00H
$SG75116 DB	'ENTVARS', 00H
$SG75136 DB	'Global Entity %s (%s) not in table!!!', 0aH, 00H
	ORG $+1
$SG75169 DB	'c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\'
	DB	'xashxt_v0.81_rev.1_src\server\dll_int.cpp', 00H
	ORG $+2
$SG75170 DB	'i == 0', 00H
	ORG $+1
$SG75174 DB	'ENTITY IS NOT A PLAYER: %d', 0aH, 00H
$SG75207 DB	'c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\'
	DB	'xashxt_v0.81_rev.1_src\server\dll_int.cpp', 00H
	ORG $+2
$SG75208 DB	'fieldCount <= 64', 00H
	ORG $+3
$SG75224 DB	'c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\'
	DB	'xashxt_v0.81_rev.1_src\server\dll_int.cpp', 00H
	ORG $+2
$SG75225 DB	'fieldCount <= 64', 00H
	ORG $+3
$SG75293 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75294 DB	'n', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'w', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H
	ORG $+2
$SG75337 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75463 DB	'0', 00H, 00H, 00H
$SG75338 DB	'(', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, '(', 00H, '&', 00H, 's', 00H, 'r', 00H, 'c', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'(', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, '(', 00H, '&', 00H, 's', 00H, 'r', 00H, 'c', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '(', 00H, 'B', 00H, 'a', 00H, 's'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, '+', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '(', 00H, ')'
	DB	00H, ')', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG75460 DB	'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG75469 DB	'0', 00H, 00H, 00H
$SG75339 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75473 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG75340 DB	'(', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, '(', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'I', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, '(', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ')'
	DB	00H, 00H, 00H
$SG75412 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75475 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG75413 DB	'I', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, '('
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ')', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, '(', 00H, ' ', 00H, 'm', 00H, '_'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, ')', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, '(', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'm', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, ')', 00H, 00H, 00H
	ORG $+4
$SG75459 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75462 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75468 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75472 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75474 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
?gNewDLLFunctions@@3UNEW_DLL_FUNCTIONS@@A DD FLAT:?OnFreeEntPrivateData@@YAXPAUedict_s@@@Z ; gNewDLLFunctions
	DD	FLAT:?GameDLLShutdown@@YAXXZ
	DD	FLAT:?ShouldCollide@@YAHPAUedict_s@@0@Z
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??__G@YGXPAX0IIP6EPAX00@Z@Z			; `vector copy constructor iterator'
PUBLIC	??0Vector@@QAE@XZ				; Vector::Vector
PUBLIC	??0Vector@@QAE@MMM@Z				; Vector::Vector
PUBLIC	??8Vector@@QBEHABV0@@Z				; Vector::operator==
PUBLIC	??9Vector@@QBEHABV0@@Z				; Vector::operator!=
PUBLIC	??HVector@@QBE?AV0@ABV0@@Z			; Vector::operator+
PUBLIC	??GVector@@QBE?AV0@ABV0@@Z			; Vector::operator-
PUBLIC	??DVector@@QBE?AV0@M@Z				; Vector::operator*
PUBLIC	??0entvars_s@@QAE@XZ				; entvars_s::entvars_s
PUBLIC	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z		; GET_PRIVATE
PUBLIC	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z		; ENT
PUBLIC	?ENT@@YAPAUedict_s@@H@Z				; ENT
PUBLIC	?OFFSET@@YAHPBUedict_s@@@Z			; OFFSET
PUBLIC	?OFFSET@@YAHPAUentvars_s@@@Z			; OFFSET
PUBLIC	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z		; VARS
PUBLIC	?INDEXENT@@YAPAUedict_s@@H@Z			; INDEXENT
PUBLIC	?FNullEnt@@YAHH@Z				; FNullEnt
PUBLIC	?FNullEnt@@YAHPAUentvars_s@@@Z			; FNullEnt
PUBLIC	?FStrEq@@YAHPBD0@Z				; FStrEq
PUBLIC	?FClassnameIs@@YAHPAUentvars_s@@PBD@Z		; FClassnameIs
PUBLIC	??0CSave@@QAE@PAUsaverestore_s@@@Z		; CSave::CSave
PUBLIC	??1CSave@@QAE@XZ				; CSave::~CSave
PUBLIC	??0CRestore@@QAE@PAUsaverestore_s@@@Z		; CRestore::CRestore
PUBLIC	?SetGlobalMode@CRestore@@QAEXH@Z		; CRestore::SetGlobalMode
PUBLIC	?PrecacheMode@CRestore@@QAEXH@Z			; CRestore::PrecacheMode
PUBLIC	??1CRestore@@QAE@XZ				; CRestore::~CRestore
PUBLIC	_GetEntityAPI
PUBLIC	_GetEntityAPI2
PUBLIC	_GetNewDLLFunctions
PUBLIC	?DispatchCreateEntitiesInRestoreList@@YAXPAUsaverestore_s@@HH@Z ; DispatchCreateEntitiesInRestoreList
PUBLIC	?Get@EHANDLE@@QAEPAUedict_s@@XZ			; EHANDLE::Get
PUBLIC	??BEHANDLE@@QAEHXZ				; EHANDLE::operator int
PUBLIC	??CEHANDLE@@QAEPAVCBaseEntity@@XZ		; EHANDLE::operator->
PUBLIC	?GetClassname@CBaseEntity@@QAEPBDXZ		; CBaseEntity::GetClassname
PUBLIC	?Spawn@CBaseEntity@@UAEXXZ			; CBaseEntity::Spawn
PUBLIC	?Precache@CBaseEntity@@UAEXXZ			; CBaseEntity::Precache
PUBLIC	?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z ; CBaseEntity::KeyValue
PUBLIC	?ObjectCaps@CBaseEntity@@UAEHXZ			; CBaseEntity::ObjectCaps
PUBLIC	?Activate@CBaseEntity@@UAEXXZ			; CBaseEntity::Activate
PUBLIC	?OnChangeLevel@CBaseEntity@@UAEXXZ		; CBaseEntity::OnChangeLevel
PUBLIC	?OnTeleport@CBaseEntity@@UAEXXZ			; CBaseEntity::OnTeleport
PUBLIC	?PortalSleep@CBaseEntity@@UAEXM@Z		; CBaseEntity::PortalSleep
PUBLIC	?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z ; CBaseEntity::StartMessage
PUBLIC	?GetPosition@CBaseEntity@@UAEMXZ		; CBaseEntity::GetPosition
PUBLIC	?OnChangeParent@CBaseEntity@@UAEXXZ		; CBaseEntity::OnChangeParent
PUBLIC	?OnClearParent@CBaseEntity@@UAEXXZ		; CBaseEntity::OnClearParent
PUBLIC	?OnRemove@CBaseEntity@@UAEXXZ			; CBaseEntity::OnRemove
PUBLIC	?Classify@CBaseEntity@@UAEHXZ			; CBaseEntity::Classify
PUBLIC	?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z	; CBaseEntity::DeathNotice
PUBLIC	?IsRigidBody@CBaseEntity@@UAEHXZ		; CBaseEntity::IsRigidBody
PUBLIC	?GetState@CBaseEntity@@UAE?AW4STATE@@XZ		; CBaseEntity::GetState
PUBLIC	?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z	; CBaseEntity::GetState
PUBLIC	?BloodColor@CBaseEntity@@UAEHXZ			; CBaseEntity::BloodColor
PUBLIC	?IsTriggered@CBaseEntity@@UAEHPAV1@@Z		; CBaseEntity::IsTriggered
PUBLIC	?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ ; CBaseEntity::MyMonsterPointer
PUBLIC	?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ ; CBaseEntity::MySquadMonsterPointer
PUBLIC	?GetToggleState@CBaseEntity@@UAEHXZ		; CBaseEntity::GetToggleState
PUBLIC	?AddPoints@CBaseEntity@@UAEXHH@Z		; CBaseEntity::AddPoints
PUBLIC	?AddPointsToTeam@CBaseEntity@@UAEXHH@Z		; CBaseEntity::AddPointsToTeam
PUBLIC	?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ; CBaseEntity::AddPlayerItem
PUBLIC	?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ; CBaseEntity::RemovePlayerItem
PUBLIC	?GiveAmmo@CBaseEntity@@UAEHHPADH@Z		; CBaseEntity::GiveAmmo
PUBLIC	?GetDelay@CBaseEntity@@UAEMXZ			; CBaseEntity::GetDelay
PUBLIC	?IsMoving@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMoving
PUBLIC	?OverrideReset@CBaseEntity@@UAEXXZ		; CBaseEntity::OverrideReset
PUBLIC	?TransferReset@CBaseEntity@@UAEXXZ		; CBaseEntity::TransferReset
PUBLIC	?SetToggleState@CBaseEntity@@UAEXH@Z		; CBaseEntity::SetToggleState
PUBLIC	?StartSneaking@CBaseEntity@@UAEXXZ		; CBaseEntity::StartSneaking
PUBLIC	?StopSneaking@CBaseEntity@@UAEXXZ		; CBaseEntity::StopSneaking
PUBLIC	?OnControls@CBaseEntity@@UAEHPAV1@@Z		; CBaseEntity::OnControls
PUBLIC	?IsSneaking@CBaseEntity@@UAEHXZ			; CBaseEntity::IsSneaking
PUBLIC	?IsAlive@CBaseEntity@@UAEHXZ			; CBaseEntity::IsAlive
PUBLIC	?IsBSPModel@CBaseEntity@@UAEHXZ			; CBaseEntity::IsBSPModel
PUBLIC	?IsCustomModel@CBaseEntity@@UAEHXZ		; CBaseEntity::IsCustomModel
PUBLIC	?ReflectGauss@CBaseEntity@@UAEHXZ		; CBaseEntity::ReflectGauss
PUBLIC	?HasTarget@CBaseEntity@@UAEHH@Z			; CBaseEntity::HasTarget
PUBLIC	?IsPlayer@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPlayer
PUBLIC	?IsNetClient@CBaseEntity@@UAEHXZ		; CBaseEntity::IsNetClient
PUBLIC	?IsMonster@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMonster
PUBLIC	?IsPushable@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPushable
PUBLIC	?IsProjectile@CBaseEntity@@UAEHXZ		; CBaseEntity::IsProjectile
PUBLIC	?IsFuncScreen@CBaseEntity@@UAEHXZ		; CBaseEntity::IsFuncScreen
PUBLIC	?IsPortal@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPortal
PUBLIC	?IsTank@CBaseEntity@@UAEHXZ			; CBaseEntity::IsTank
PUBLIC	?IsMover@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMover
PUBLIC	?IsBreakable@CBaseEntity@@UAEHXZ		; CBaseEntity::IsBreakable
PUBLIC	?TeamID@CBaseEntity@@UAEPBDXZ			; CBaseEntity::TeamID
PUBLIC	?Think@CBaseEntity@@UAEXXZ			; CBaseEntity::Think
PUBLIC	?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z	; CBaseEntity::Use
PUBLIC	?Touch@CBaseEntity@@UAEXPAV1@@Z			; CBaseEntity::Touch
PUBLIC	?Blocked@CBaseEntity@@UAEXPAV1@@Z		; CBaseEntity::Blocked
PUBLIC	?MoveDone@CBaseEntity@@UAEXXZ			; CBaseEntity::MoveDone
PUBLIC	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z		; CBaseEntity::operator new
PUBLIC	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z		; CBaseEntity::operator delete
PUBLIC	?Respawn@CBaseEntity@@UAEPAV1@XZ		; CBaseEntity::Respawn
PUBLIC	?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z	; CBaseEntity::Instance
PUBLIC	?UpdateOwner@CBaseEntity@@UAEXXZ		; CBaseEntity::UpdateOwner
PUBLIC	?FBecomeProne@CBaseEntity@@UAEHXZ		; CBaseEntity::FBecomeProne
PUBLIC	?Center@CBaseEntity@@UAE?AVVector@@XZ		; CBaseEntity::Center
PUBLIC	?EyePosition@CBaseEntity@@UAE?AVVector@@XZ	; CBaseEntity::EyePosition
PUBLIC	?EarPosition@CBaseEntity@@UAE?AVVector@@XZ	; CBaseEntity::EarPosition
PUBLIC	?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z	; CBaseEntity::BodyTarget
PUBLIC	?IsPointSized@CBaseEntity@@UBEHXZ		; CBaseEntity::IsPointSized
PUBLIC	?Illumination@CBaseEntity@@UAEHXZ		; CBaseEntity::Illumination
PUBLIC	??0CBaseEntity@@QAE@XZ				; CBaseEntity::CBaseEntity
PUBLIC	??0CWorld@@QAE@XZ				; CWorld::CWorld
PUBLIC	_DllMain@12
PUBLIC	?GiveFnptrsToDll@@YGXPAUenginefuncs_s@@PAUglobalvars_t@@@Z ; GiveFnptrsToDll
PUBLIC	?FindGlobalEntity@@YAPAVCBaseEntity@@HH@Z	; FindGlobalEntity
PUBLIC	??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z	; GetClassPtr<CWorld>
PUBLIC	??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@ ; `string'
PUBLIC	??_C@_0BF@DOONGEFO@Bad?5pev?5in?5OFFSET?$CI?$CJ?6@ ; `string'
PUBLIC	??_7CBaseEntity@@6B@				; CBaseEntity::`vftable'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	??_C@_08JJJAOBDI@movewith@			; `string'
PUBLIC	??_C@_0M@EAELDHJO@parentflags@			; `string'
PUBLIC	??_C@_05IAKJCFIM@style@				; `string'
PUBLIC	??_C@_0L@IKCANML@reflection@			; `string'
PUBLIC	??_C@_0N@JILDNHAP@vlight_cache@			; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CWorld@@6B@					; CWorld::`vftable'
PUBLIC	??_R4CBaseEntity@@6B@				; CBaseEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseEntity@@@8				; CBaseEntity `RTTI Type Descriptor'
PUBLIC	??_R3CBaseEntity@@8				; CBaseEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseEntity@@8				; CBaseEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseEntity@@8			; CBaseEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CWorld@@6B@				; CWorld::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCWorld@@@8				; CWorld `RTTI Type Descriptor'
PUBLIC	??_R3CWorld@@8					; CWorld::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CWorld@@8					; CWorld::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CWorld@@8				; CWorld::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_atoi:PROC
EXTRN	??0matrix4x4@@QAE@XZ:PROC			; matrix4x4::matrix4x4
EXTRN	?Q_atoi@@YAHPBD@Z:PROC				; Q_atoi
EXTRN	?Q_strncmp@@YAHPBD0H@Z:PROC			; Q_strncmp
EXTRN	?CreateEntityByName@@YAPAVCBaseEntity@@PBDPAUentvars_s@@@Z:PROC ; CreateEntityByName
EXTRN	?DBG_EntOfVars@@YAPAUedict_s@@PBUentvars_s@@@Z:PROC ; DBG_EntOfVars
EXTRN	?ENT@@YAPAUedict_s@@PAVCBaseEntity@@@Z:PROC	; ENT
EXTRN	?DBG_AssertFunction@@YAXHPBD0H0@Z:PROC		; DBG_AssertFunction
EXTRN	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z:PROC	; UTIL_GetModelType
EXTRN	??0CSaveRestoreBuffer@@QAE@PAUsaverestore_s@@@Z:PROC ; CSaveRestoreBuffer::CSaveRestoreBuffer
EXTRN	??1CSaveRestoreBuffer@@QAE@XZ:PROC		; CSaveRestoreBuffer::~CSaveRestoreBuffer
EXTRN	?WriteFields@CSave@@QAEHPBDPBXPAUdatamap_s@@PAUtypedescription_s@@H@Z:PROC ; CSave::WriteFields
EXTRN	?ReadEntVars@CRestore@@QAEHPBDPAUdatamap_s@@PAUentvars_s@@@Z:PROC ; CRestore::ReadEntVars
EXTRN	?ReadFields@CRestore@@QAEHPBDPBXPAUdatamap_s@@PAUtypedescription_s@@H@Z:PROC ; CRestore::ReadFields
EXTRN	?EntityAdd@CGlobalState@@QAEXHHW4GLOBALESTATE@@M@Z:PROC ; CGlobalState::EntityAdd
EXTRN	?EntityUpdate@CGlobalState@@QAEXHH@Z:PROC	; CGlobalState::EntityUpdate
EXTRN	?EntityFromTable@CGlobalState@@QAEPBUglobalentity_s@@H@Z:PROC ; CGlobalState::EntityFromTable
EXTRN	??0CMeshDesc@@QAE@XZ:PROC			; CMeshDesc::CMeshDesc
EXTRN	?FreeMesh@CMeshDesc@@QAEXXZ:PROC		; CMeshDesc::FreeMesh
EXTRN	?GetDataDescMap@CBaseEntity@@UAEPAUdatamap_s@@XZ:PROC ; CBaseEntity::GetDataDescMap
EXTRN	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetAbsOrigin
EXTRN	?GetAbsVelocity@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetAbsVelocity
EXTRN	?CalcAbsolutePosition@CBaseEntity@@QAEXXZ:PROC	; CBaseEntity::CalcAbsolutePosition
EXTRN	?Save@CBaseEntity@@UAEHAAVCSave@@@Z:PROC	; CBaseEntity::Save
EXTRN	?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z:PROC	; CBaseEntity::Restore
EXTRN	?SetObjectCollisionBox@CBaseEntity@@UAEXXZ:PROC	; CBaseEntity::SetObjectCollisionBox
EXTRN	?SetNextThink@CBaseEntity@@UAEXM@Z:PROC		; CBaseEntity::SetNextThink
EXTRN	?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z:PROC ; CBaseEntity::TraceAttack
EXTRN	?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z:PROC ; CBaseEntity::TakeDamage
EXTRN	?TakeHealth@CBaseEntity@@UAEHMH@Z:PROC		; CBaseEntity::TakeHealth
EXTRN	?TakeArmor@CBaseEntity@@UAEHMH@Z:PROC		; CBaseEntity::TakeArmor
EXTRN	?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z:PROC	; CBaseEntity::Killed
EXTRN	?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z:PROC ; CBaseEntity::TraceBleed
EXTRN	?DamageDecal@CBaseEntity@@UAEHH@Z:PROC		; CBaseEntity::DamageDecal
EXTRN	?IsInWorld@CBaseEntity@@UAEHH@Z:PROC		; CBaseEntity::IsInWorld
EXTRN	?GetNextTarget@CBaseEntity@@UAEPAV1@XZ:PROC	; CBaseEntity::GetNextTarget
EXTRN	?UpdateOnRemove@CBaseEntity@@QAEXXZ:PROC	; CBaseEntity::UpdateOnRemove
EXTRN	?MakeDormant@CBaseEntity@@QAEXXZ:PROC		; CBaseEntity::MakeDormant
EXTRN	?RelinkEntity@CBaseEntity@@QAEXHPBVVector@@H@Z:PROC ; CBaseEntity::RelinkEntity
EXTRN	?FVisible@CBaseEntity@@UAEHPAV1@@Z:PROC		; CBaseEntity::FVisible
EXTRN	?FVisible@CBaseEntity@@UAEHABVVector@@@Z:PROC	; CBaseEntity::FVisible
EXTRN	?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z:PROC	; CBaseEntity::ShouldCollide
EXTRN	?Spawn@CWorld@@UAEXXZ:PROC			; CWorld::Spawn
EXTRN	?Precache@CWorld@@UAEXXZ:PROC			; CWorld::Precache
EXTRN	?KeyValue@CWorld@@UAEXPAUKeyValueData_s@@@Z:PROC ; CWorld::KeyValue
EXTRN	?EntvarsKeyvalue@@YAXPAUentvars_s@@PAUKeyValueData_s@@@Z:PROC ; EntvarsKeyvalue
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	?g_vecZero@@3VVector@@B:BYTE			; g_vecZero
EXTRN	?g_fPhysicInitialized@@3HA:DWORD		; g_fPhysicInitialized
EXTRN	?g_iXashEngineBuildNumber@@3HA:DWORD		; g_iXashEngineBuildNumber
EXTRN	?gGlobalState@@3VCGlobalState@@A:QWORD		; gGlobalState
EXTRN	?g_pGameRules@@3PAVCGameRules@@A:DWORD		; g_pGameRules
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@CWorld@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CWorld@@8 DD FLAT:??_R0?AVCWorld@@@8	; CWorld::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CWorld@@8
rdata$r	ENDS
;	COMDAT ??_R2CWorld@@8
rdata$r	SEGMENT
??_R2CWorld@@8 DD FLAT:??_R1A@?0A@EA@CWorld@@8		; CWorld::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CWorld@@8
rdata$r	SEGMENT
??_R3CWorld@@8 DD 00H					; CWorld::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CWorld@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCWorld@@@8
data$r	SEGMENT
??_R0?AVCWorld@@@8 DD FLAT:??_7type_info@@6B@		; CWorld `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCWorld@@', 00H
data$r	ENDS
;	COMDAT ??_R4CWorld@@6B@
rdata$r	SEGMENT
??_R4CWorld@@6B@ DD 00H					; CWorld::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCWorld@@@8
	DD	FLAT:??_R3CWorld@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseEntity@@8 DD FLAT:??_R0?AVCBaseEntity@@@8 ; CBaseEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseEntity@@8
rdata$r	SEGMENT
??_R2CBaseEntity@@8 DD FLAT:??_R1A@?0A@EA@CBaseEntity@@8 ; CBaseEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseEntity@@8
rdata$r	SEGMENT
??_R3CBaseEntity@@8 DD 00H				; CBaseEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseEntity@@@8
data$r	SEGMENT
??_R0?AVCBaseEntity@@@8 DD FLAT:??_7type_info@@6B@	; CBaseEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseEntity@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBaseEntity@@6B@
rdata$r	SEGMENT
??_R4CBaseEntity@@6B@ DD 00H				; CBaseEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseEntity@@@8
	DD	FLAT:??_R3CBaseEntity@@8
rdata$r	ENDS
_DATA	SEGMENT
	ORG $+4
?gFunctionTable@@3UDLL_FUNCTIONS@@A DD FLAT:?GameDLLInit@@YAXXZ ; gFunctionTable
	DD	FLAT:?DispatchSpawn@@YAHPAUedict_s@@@Z
	DD	FLAT:?DispatchThink@@YAXPAUedict_s@@@Z
	DD	FLAT:?DispatchUse@@YAXPAUedict_s@@0@Z
	DD	FLAT:?DispatchTouch@@YAXPAUedict_s@@0@Z
	DD	FLAT:?DispatchBlocked@@YAXPAUedict_s@@0@Z
	DD	FLAT:?DispatchKeyValue@@YAXPAUedict_s@@PAUKeyValueData_s@@@Z
	DD	FLAT:?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z
	DD	FLAT:?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z
	DD	FLAT:?DispatchObjectCollsionBox@@YAXPAUedict_s@@@Z
	DD	FLAT:?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	DD	FLAT:?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	DD	FLAT:?SaveGlobalState@@YAXPAUsaverestore_s@@@Z
	DD	FLAT:?RestoreGlobalState@@YAXPAUsaverestore_s@@@Z
	DD	FLAT:?ResetGlobalState@@YAXXZ
	DD	FLAT:?ClientConnect@@YAHPAUedict_s@@PBD1QAD@Z
	DD	FLAT:?ClientDisconnect@@YAXPAUedict_s@@@Z
	DD	FLAT:?ClientKill@@YAXPAUedict_s@@@Z
	DD	FLAT:?ClientPutInServer@@YAXPAUedict_s@@@Z
	DD	FLAT:?ClientCommand@@YAXPAUedict_s@@@Z
	DD	FLAT:?ClientUserInfoChanged@@YAXPAUedict_s@@PAD@Z
	DD	FLAT:?ServerActivate@@YAXPAUedict_s@@HH@Z
	DD	FLAT:?ServerDeactivate@@YAXXZ
	DD	FLAT:?PlayerPreThink@@YAXPAUedict_s@@@Z
	DD	FLAT:?PlayerPostThink@@YAXPAUedict_s@@@Z
	DD	FLAT:?StartFrame@@YAXXZ
	DD	FLAT:?ParmsNewLevel@@YAXXZ
	DD	FLAT:?ParmsChangeLevel@@YAXXZ
	DD	FLAT:?GetGameDescription@@YAPBDXZ
	DD	FLAT:?PlayerCustomization@@YAXPAUedict_s@@PAUcustomization_s@@@Z
	DD	FLAT:?SpectatorConnect@@YAXPAUedict_s@@@Z
	DD	FLAT:?SpectatorDisconnect@@YAXPAUedict_s@@@Z
	DD	FLAT:?SpectatorThink@@YAXPAUedict_s@@@Z
	DD	FLAT:?Sys_Error@@YAXPBD@Z
	DD	FLAT:?PM_Move@@YAXPAUplayermove_s@@H@Z
	DD	FLAT:?PM_Init@@YAXPAUplayermove_s@@@Z
	DD	FLAT:?PM_FindTextureType@@YADPAD@Z
	DD	FLAT:?SetupVisibility@@YAXPAUedict_s@@0PAPAE1@Z
	DD	FLAT:?UpdateClientData@@YAXPBUedict_s@@HPAUclientdata_s@@@Z
	DD	FLAT:?AddToFullPack@@YAHPAUentity_state_s@@HPAUedict_s@@1HHPAE@Z
	DD	FLAT:?CreateBaseline@@YAXHHPAUentity_state_s@@PAUedict_s@@HVVector@@2@Z
	DD	FLAT:?RegisterEncoders@@YAXXZ
	DD	FLAT:?GetWeaponData@@YAHPAUedict_s@@PAUweapon_data_s@@@Z
	DD	FLAT:?CmdStart@@YAXPBUedict_s@@PBUusercmd_s@@I@Z
	DD	FLAT:?CmdEnd@@YAXPBUedict_s@@@Z
	DD	FLAT:?ConnectionlessPacket@@YAHPBUnetadr_s@@PBDPADPAH@Z
	DD	FLAT:?GetHullBounds@@YAHHPAM0@Z
	DD	FLAT:?CreateInstancedBaselines@@YAXXZ
	DD	FLAT:?InconsistentFile@@YAHPBUedict_s@@PBDPAD@Z
	DD	FLAT:?AllowLagCompensation@@YAHXZ
_DATA	ENDS
;	COMDAT ??_7CWorld@@6B@
CONST	SEGMENT
??_7CWorld@@6B@ DD FLAT:??_R4CWorld@@6B@		; CWorld::`vftable'
	DD	FLAT:?GetDataDescMap@CBaseEntity@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CWorld@@UAEXXZ
	DD	FLAT:?Precache@CWorld@@UAEXXZ
	DD	FLAT:?KeyValue@CWorld@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CBaseEntity@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JILDNHAP@vlight_cache@
CONST	SEGMENT
??_C@_0N@JILDNHAP@vlight_cache@ DB 'vlight_cache', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IKCANML@reflection@
CONST	SEGMENT
??_C@_0L@IKCANML@reflection@ DB 'reflection', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IAKJCFIM@style@
CONST	SEGMENT
??_C@_05IAKJCFIM@style@ DB 'style', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EAELDHJO@parentflags@
CONST	SEGMENT
??_C@_0M@EAELDHJO@parentflags@ DB 'parentflags', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JJJAOBDI@movewith@
CONST	SEGMENT
??_C@_08JJJAOBDI@movewith@ DB 'movewith', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CBaseEntity@@6B@
CONST	SEGMENT
??_7CBaseEntity@@6B@ DD FLAT:??_R4CBaseEntity@@6B@	; CBaseEntity::`vftable'
	DD	FLAT:?GetDataDescMap@CBaseEntity@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CBaseEntity@@UAEXXZ
	DD	FLAT:?Precache@CBaseEntity@@UAEXXZ
	DD	FLAT:?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CBaseEntity@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_C@_0BF@DOONGEFO@Bad?5pev?5in?5OFFSET?$CI?$CJ?6@
CONST	SEGMENT
??_C@_0BF@DOONGEFO@Bad?5pev?5in?5OFFSET?$CI?$CJ?6@ DB 'Bad pev in OFFSET('
	DB	')', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@
CONST	SEGMENT
??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@ DB 'Bad ent in OFFSET('
	DB	')', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z$0
__ehfuncinfo$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z$0
__unwindtable$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z$0
__unwindtable$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z$0
__unwindtable$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z$1
__ehfuncinfo$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv85 = -24						; size = 4
$T3 = -20						; size = 4
_pev$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_a$ = 8							; size = 4
??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z PROC	; GetClassPtr<CWorld>, COMDAT

; 1056 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1057 : 	entvars_t *pev = (entvars_t *)a;

	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _pev$[ebp], eax

; 1058 : 
; 1059 : 	// allocate entity if necessary
; 1060 : 	if (pev == NULL)

	cmp	DWORD PTR _pev$[ebp], 0
	jne	SHORT $LN2@GetClassPt

; 1061 : 		pev = VARS(CREATE_ENTITY());

	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+84
	push	eax
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	mov	DWORD PTR _pev$[ebp], eax
$LN2@GetClassPt:

; 1062 : 
; 1063 : 	// get the private data
; 1064 : 	a = (T *)GET_PRIVATE(ENT(pev));

	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _a$[ebp], eax

; 1065 : 
; 1066 : 	if (a == NULL) 

	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN3@GetClassPt

; 1067 : 	{
; 1068 : 		// allocate private data 
; 1069 : 		a = new(pev) T;

	mov	edx, DWORD PTR _pev$[ebp]
	push	edx
	push	1652					; 00000674H
	call	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z	; CBaseEntity::operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@GetClassPt
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CWorld@@QAE@XZ
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN6@GetClassPt
$LN5@GetClassPt:
	mov	DWORD PTR tv85[ebp], 0
$LN6@GetClassPt:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _a$[ebp], ecx

; 1070 : 		a->pev = pev;

	mov	edx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@GetClassPt:

; 1071 : 	}
; 1072 : 	return a;

	mov	eax, DWORD PTR _a$[ebp]

; 1073 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z$0:
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z	; CBaseEntity::operator delete
	add	esp, 8
	ret	0
__ehhandler$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z ENDP	; GetClassPtr<CWorld>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pent$ = -8						; size = 4
_pReturn$ = -4						; size = 4
_classname$ = 8						; size = 4
_globalname$ = 12					; size = 4
?FindGlobalEntity@@YAPAVCBaseEntity@@HH@Z PROC		; FindGlobalEntity

; 324  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 325  : 	edict_t *pent = FIND_ENTITY_BY_STRING( NULL, "globalname", STRING(globalname) );

	mov	eax, DWORD PTR _globalname$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	push	OFFSET $SG75091
	push	0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pent$[ebp], eax

; 326  : 	CBaseEntity *pReturn = CBaseEntity::Instance( pent );

	mov	ecx, DWORD PTR _pent$[ebp]
	push	ecx
	call	?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z ; CBaseEntity::Instance
	add	esp, 4
	mov	DWORD PTR _pReturn$[ebp], eax

; 327  : 	if ( pReturn )

	cmp	DWORD PTR _pReturn$[ebp], 0
	je	SHORT $LN2@FindGlobal

; 328  : 	{
; 329  : 		if ( !FClassnameIs( pReturn->pev, STRING(classname) ) )

	mov	edx, DWORD PTR _classname$[ebp]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _pReturn$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FClassnameIs@@YAHPAUentvars_s@@PBD@Z	; FClassnameIs
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@FindGlobal

; 330  : 		{
; 331  : 			ALERT( at_console, "Global entity found %s, wrong class %s\n", STRING(globalname), STRING(pReturn->pev->classname) );

	mov	edx, DWORD PTR _pReturn$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _globalname$[ebp]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	push	OFFSET $SG75094
	push	1
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 16					; 00000010H

; 332  : 			pReturn = NULL;

	mov	DWORD PTR _pReturn$[ebp], 0
$LN2@FindGlobal:

; 333  : 		}
; 334  : 	}
; 335  : 
; 336  : 	return pReturn;

	mov	eax, DWORD PTR _pReturn$[ebp]

; 337  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FindGlobalEntity@@YAPAVCBaseEntity@@HH@Z ENDP		; FindGlobalEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pengfuncsFromEngine$ = 8				; size = 4
_pGlobals$ = 12						; size = 4
?GiveFnptrsToDll@@YGXPAUenginefuncs_s@@PAUglobalvars_t@@@Z PROC ; GiveFnptrsToDll

; 43   : {

	push	ebp
	mov	ebp, esp

; 44   : 	memcpy( &g_engfuncs, pengfuncsFromEngine, sizeof( enginefuncs_t ));

	push	576					; 00000240H
	mov	eax, DWORD PTR _pengfuncsFromEngine$[ebp]
	push	eax
	push	OFFSET ?g_engfuncs@@3Uenginefuncs_s@@A	; g_engfuncs
	call	_memcpy
	add	esp, 12					; 0000000cH

; 45   : 	g_iXashEngineBuildNumber = (int)CVAR_GET_FLOAT( "build" ); // 0 for old builds or GoldSrc

	push	OFFSET $SG74969
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+228
	add	esp, 4
	call	__ftol2_sse
	mov	DWORD PTR ?g_iXashEngineBuildNumber@@3HA, eax ; g_iXashEngineBuildNumber

; 46   : 	if( g_iXashEngineBuildNumber <= 0 )

	cmp	DWORD PTR ?g_iXashEngineBuildNumber@@3HA, 0 ; g_iXashEngineBuildNumber
	jg	SHORT $LN2@GiveFnptrs

; 47   : 		g_iXashEngineBuildNumber = (int)CVAR_GET_FLOAT( "buildnum" );

	push	OFFSET $SG74971
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+228
	add	esp, 4
	call	__ftol2_sse
	mov	DWORD PTR ?g_iXashEngineBuildNumber@@3HA, eax ; g_iXashEngineBuildNumber
$LN2@GiveFnptrs:

; 48   : 	gpGlobals = pGlobals;

	mov	ecx, DWORD PTR _pGlobals$[ebp]
	mov	DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A, ecx ; gpGlobals

; 49   : }

	pop	ebp
	ret	8
?GiveFnptrsToDll@@YGXPAUenginefuncs_s@@PAUglobalvars_t@@@Z ENDP ; GiveFnptrsToDll
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_hinstDLL$ = 8						; size = 4
_fdwReason$ = 12					; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC

; 38   : {

	push	ebp
	mov	ebp, esp

; 39   : 	return TRUE;

	mov	eax, 1

; 40   : }

	pop	ebp
	ret	12					; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pEntity$1 = -8						; size = 4
_pEntity$2 = -4						; size = 4
_pEdict$ = 8						; size = 4
?OnFreeEntPrivateData@@YAXPAUedict_s@@@Z PROC		; OnFreeEntPrivateData

; 530  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 531  : 	if( g_fPhysicInitialized )

	cmp	DWORD PTR ?g_fPhysicInitialized@@3HA, 0	; g_fPhysicInitialized
	je	SHORT $LN2@OnFreeEntP

; 532  : 	{
; 533  : 		if( pEdict && pEdict->pvPrivateData )

	cmp	DWORD PTR _pEdict$[ebp], 0
	je	SHORT $LN3@OnFreeEntP
	mov	eax, DWORD PTR _pEdict$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN3@OnFreeEntP

; 534  : 		{
; 535  : 			CBaseEntity *pEntity = CBaseEntity::Instance( pEdict );

	mov	ecx, DWORD PTR _pEdict$[ebp]
	push	ecx
	call	?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z ; CBaseEntity::Instance
	add	esp, 4
	mov	DWORD PTR _pEntity$1[ebp], eax

; 536  : 			pEntity->m_BodyMesh.FreeMesh(); // release all local copy of meshes

	mov	ecx, DWORD PTR _pEntity$1[ebp]
	add	ecx, 248				; 000000f8H
	call	?FreeMesh@CMeshDesc@@QAEXXZ		; CMeshDesc::FreeMesh
$LN3@OnFreeEntP:

; 537  : 		}
; 538  : 
; 539  : 		if( GET_SERVER_STATE() == SERVER_DEAD )

	call	DWORD PTR ?g_physfuncs@@3Userver_physics_api_s@@A+20
	test	eax, eax
	jne	SHORT $LN2@OnFreeEntP

; 540  : 			return;

	jmp	SHORT $LN1@OnFreeEntP
$LN2@OnFreeEntP:

; 541  : 	}
; 542  : 
; 543  : 	if( pEdict && pEdict->pvPrivateData )

	cmp	DWORD PTR _pEdict$[ebp], 0
	je	SHORT $LN1@OnFreeEntP
	mov	edx, DWORD PTR _pEdict$[ebp]
	cmp	DWORD PTR [edx+124], 0
	je	SHORT $LN1@OnFreeEntP

; 544  : 	{
; 545  : 		CBaseEntity *pEntity = CBaseEntity::Instance( pEdict );

	mov	eax, DWORD PTR _pEdict$[ebp]
	push	eax
	call	?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z ; CBaseEntity::Instance
	add	esp, 4
	mov	DWORD PTR _pEntity$2[ebp], eax

; 546  : 		pEntity->m_BodyMesh.FreeMesh();

	mov	ecx, DWORD PTR _pEntity$2[ebp]
	add	ecx, 248				; 000000f8H
	call	?FreeMesh@CMeshDesc@@QAEXXZ		; CMeshDesc::FreeMesh

; 547  : 		pEntity->UpdateOnRemove();

	mov	ecx, DWORD PTR _pEntity$2[ebp]
	call	?UpdateOnRemove@CBaseEntity@@QAEXXZ	; CBaseEntity::UpdateOnRemove
$LN1@OnFreeEntP:

; 548  : 	}
; 549  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnFreeEntPrivateData@@YAXPAUedict_s@@@Z ENDP		; OnFreeEntPrivateData
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CWorld@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CWorld@@QAE@XZ PROC					; CWorld::CWorld, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEntity@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CWorld@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CWorld@@QAE@XZ ENDP					; CWorld::CWorld
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CBaseEntity@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBaseEntity@@QAE@XZ PROC				; CBaseEntity::CBaseEntity, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??0matrix4x4@@QAE@XZ			; matrix4x4::matrix4x4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	call	??0CMeshDesc@@QAE@XZ			; CMeshDesc::CMeshDesc
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseEntity@@QAE@XZ ENDP				; CBaseEntity::CBaseEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Illumination@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Illumination@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::Illumination, COMDAT
; _this$ = ecx

; 706  : 	virtual int Illumination( ) { return GETENTITYILLUM( ENT( pev ) ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+60
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?Illumination@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::Illumination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPointSized@CBaseEntity@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -1						; size = 1
?IsPointSized@CBaseEntity@@UBEHXZ PROC			; CBaseEntity::IsPointSized, COMDAT
; _this$ = ecx

; 704  : 	virtual BOOL IsPointSized() const { return (pev->size == g_vecZero) ? true : false; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?g_vecZero@@3VVector@@B		; g_vecZero
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 244				; 000000f4H
	call	??8Vector@@QBEHABV0@@Z			; Vector::operator==
	test	eax, eax
	je	SHORT $LN3@IsPointSiz
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsPointSiz
$LN3@IsPointSiz:
	mov	BYTE PTR tv70[ebp], 0
$LN4@IsPointSiz:
	movzx	eax, BYTE PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPointSized@CBaseEntity@@UBEHXZ ENDP			; CBaseEntity::IsPointSized
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_posSrc$ = 12						; size = 4
?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z PROC	; CBaseEntity::BodyTarget, COMDAT
; _this$ = ecx

; 703  : 	virtual Vector BodyTarget( const Vector &posSrc ) { return Center( ); };		// position to shoot at

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+300]
	call	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z ENDP	; CBaseEntity::BodyTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EarPosition@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::EarPosition, COMDAT
; _this$ = ecx

; 702  : 	virtual Vector EarPosition( ) { return GetAbsOrigin() + pev->view_ofs; };			// position of ears

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EarPosition@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::EarPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EyePosition@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::EyePosition, COMDAT
; _this$ = ecx

; 701  : 	virtual Vector EyePosition( ) { return GetAbsOrigin() + pev->view_ofs; };			// position of eyes

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EyePosition@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::EyePosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Center@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Center@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::Center, COMDAT
; _this$ = ecx

; 700  : 	virtual Vector Center( ) { return (pev->absmax + pev->absmin) * 0.5; }; // center point of entity

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 196				; 000000c4H
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 208				; 000000d0H
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	ecx, eax
	call	??DVector@@QBE?AV0@M@Z			; Vector::operator*
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Center@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::Center
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?FBecomeProne@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FBecomeProne@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::FBecomeProne, COMDAT
; _this$ = ecx

; 695  : 	virtual BOOL FBecomeProne( void ) {return FALSE;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?FBecomeProne@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::FBecomeProne
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?UpdateOwner@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateOwner@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::UpdateOwner, COMDAT
; _this$ = ecx

; 691  : 	virtual	void UpdateOwner( void ) { return; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateOwner@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::UpdateOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z
_TEXT	SEGMENT
_pEnt$ = -4						; size = 4
_pent$ = 8						; size = 4
?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z PROC	; CBaseEntity::Instance, COMDAT

; 512  : 	{ 

	push	ebp
	mov	ebp, esp
	push	ecx

; 513  : 		if ( !pent )

	cmp	DWORD PTR _pent$[ebp], 0
	jne	SHORT $LN2@Instance

; 514  : 			pent = ENT(0);

	push	0
	call	?ENT@@YAPAUedict_s@@H@Z			; ENT
	add	esp, 4
	mov	DWORD PTR _pent$[ebp], eax
$LN2@Instance:

; 515  : 		CBaseEntity *pEnt = (CBaseEntity *)GET_PRIVATE(pent); 

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEnt$[ebp], eax

; 516  : 		return pEnt; 

	mov	eax, DWORD PTR _pEnt$[ebp]

; 517  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?Instance@CBaseEntity@@SAPAV1@PAUedict_s@@@Z ENDP	; CBaseEntity::Instance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Respawn@CBaseEntity@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Respawn@CBaseEntity@@UAEPAV1@XZ PROC			; CBaseEntity::Respawn, COMDAT
; _this$ = ecx

; 499  : 	virtual CBaseEntity *Respawn( void ) { return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Respawn@CBaseEntity@@UAEPAV1@XZ ENDP			; CBaseEntity::Respawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z
_TEXT	SEGMENT
_pMem$ = 8						; size = 4
_pev$ = 12						; size = 4
??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z PROC		; CBaseEntity::operator delete, COMDAT

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		pev->flags |= FL_KILLME;

	mov	eax, DWORD PTR _pev$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	or	ecx, 1073741824				; 40000000H
	mov	edx, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+420], ecx

; 484  : 	};

	pop	ebp
	ret	0
??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z ENDP		; CBaseEntity::operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z
_TEXT	SEGMENT
_stAllocateBlock$ = 8					; size = 4
_pev$ = 12						; size = 4
??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z PROC		; CBaseEntity::operator new, COMDAT

; 475  : 	{

	push	ebp
	mov	ebp, esp

; 476  : 		return (void *)ALLOC_PRIVATE(ENT(pev), stAllocateBlock);

	mov	eax, DWORD PTR _stAllocateBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+252
	add	esp, 8

; 477  : 	};

	pop	ebp
	ret	0
??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z ENDP		; CBaseEntity::operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MoveDone@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MoveDone@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::MoveDone, COMDAT
; _this$ = ecx

; 471  : 	virtual void MoveDone( void ) { if( m_pfnMoveDone )(this->*m_pfnMoveDone)(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1648], 0
	je	SHORT $LN1@MoveDone
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1648]
	call	eax
$LN1@MoveDone:
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveDone@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::MoveDone
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Blocked@CBaseEntity@@UAEXPAV1@@Z
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?Blocked@CBaseEntity@@UAEXPAV1@@Z PROC			; CBaseEntity::Blocked, COMDAT
; _this$ = ecx

; 462  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 		if( m_pfnBlocked )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1644], 0
	je	SHORT $LN2@Blocked

; 464  : 			(this->*m_pfnBlocked)( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1644]
	call	eax
$LN2@Blocked:

; 465  : 
; 466  : 		// forward the blocked event to our parent, if any.
; 467  : 		if( m_hParent != NULL )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??BEHANDLE@@QAEHXZ			; EHANDLE::operator int
	test	eax, eax
	je	SHORT $LN1@Blocked

; 468  : 			m_hParent->Blocked( pOther );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??CEHANDLE@@QAEPAVCBaseEntity@@XZ	; EHANDLE::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+280]
	call	edx
$LN1@Blocked:

; 469  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Blocked@CBaseEntity@@UAEXPAV1@@Z ENDP			; CBaseEntity::Blocked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Touch@CBaseEntity@@UAEXPAV1@@Z
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?Touch@CBaseEntity@@UAEXPAV1@@Z PROC			; CBaseEntity::Touch, COMDAT
; _this$ = ecx

; 452  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 453  : 		if( m_pfnTouch )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1636], 0
	je	SHORT $LN2@Touch

; 454  : 			(this->*m_pfnTouch)( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1636]
	call	eax
$LN2@Touch:

; 455  : 
; 456  : 		// forward the blocked event to our parent, if any.
; 457  : 		if( m_hParent != NULL )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??BEHANDLE@@QAEHXZ			; EHANDLE::operator int
	test	eax, eax
	je	SHORT $LN1@Touch

; 458  : 			m_hParent->Touch( pOther );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??CEHANDLE@@QAEPAVCBaseEntity@@XZ	; EHANDLE::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+276]
	call	edx
$LN1@Touch:

; 459  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Touch@CBaseEntity@@UAEXPAV1@@Z ENDP			; CBaseEntity::Touch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
_pCaller$ = 12						; size = 4
_useType$ = 16						; size = 4
_value$ = 20						; size = 4
?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z PROC	; CBaseEntity::Use, COMDAT
; _this$ = ecx

; 447  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 448  : 		if (m_pfnUse) (this->*m_pfnUse)( pActivator, pCaller, useType, value );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1640], 0
	je	SHORT $LN2@Use
	push	ecx
	movss	xmm0, DWORD PTR _value$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _useType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCaller$[ebp]
	push	edx
	mov	eax, DWORD PTR _pActivator$[ebp]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1640]
	call	eax
$LN2@Use:

; 449  : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z ENDP	; CBaseEntity::Use
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Think@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Think@CBaseEntity@@UAEXXZ PROC				; CBaseEntity::Think, COMDAT
; _this$ = ecx

; 444  : 	virtual void Think( void ) { if (m_pfnThink) (this->*m_pfnThink)(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1632], 0
	je	SHORT $LN1@Think
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1632]
	call	eax
$LN1@Think:
	mov	esp, ebp
	pop	ebp
	ret	0
?Think@CBaseEntity@@UAEXXZ ENDP				; CBaseEntity::Think
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?TeamID@CBaseEntity@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TeamID@CBaseEntity@@UAEPBDXZ PROC			; CBaseEntity::TeamID, COMDAT
; _this$ = ecx

; 433  : 	virtual const char	*TeamID( void ) { return ""; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_00CNPNBAHC@@
	mov	esp, ebp
	pop	ebp
	ret	0
?TeamID@CBaseEntity@@UAEPBDXZ ENDP			; CBaseEntity::TeamID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsBreakable@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBreakable@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsBreakable, COMDAT
; _this$ = ecx

; 432  : 	virtual BOOL	IsBreakable( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBreakable@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsBreakable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMover@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMover@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMover, COMDAT
; _this$ = ecx

; 431  : 	virtual BOOL	IsMover( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMover@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMover
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsTank@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTank@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsTank, COMDAT
; _this$ = ecx

; 430  : 	virtual BOOL	IsTank( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTank@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsTank
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPortal@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPortal@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPortal, COMDAT
; _this$ = ecx

; 429  : 	virtual BOOL	IsPortal( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPortal@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPortal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsFuncScreen@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFuncScreen@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsFuncScreen, COMDAT
; _this$ = ecx

; 428  : 	virtual BOOL	IsFuncScreen( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFuncScreen@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsFuncScreen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsProjectile@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsProjectile@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsProjectile, COMDAT
; _this$ = ecx

; 427  : 	virtual BOOL	IsProjectile( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsProjectile@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsProjectile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPushable@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPushable@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPushable, COMDAT
; _this$ = ecx

; 426  : 	virtual BOOL	IsPushable( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPushable@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPushable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMonster@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?IsMonster@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMonster, COMDAT
; _this$ = ecx

; 425  : 	virtual BOOL	IsMonster( void ) { return (pev->flags & FL_MONSTER ? TRUE : FALSE); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+420]
	and	edx, 32					; 00000020H
	je	SHORT $LN3@IsMonster
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsMonster
$LN3@IsMonster:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsMonster:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMonster@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMonster
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsNetClient@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsNetClient@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsNetClient, COMDAT
; _this$ = ecx

; 424  : 	virtual BOOL	IsNetClient( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsNetClient@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsNetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPlayer@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPlayer@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPlayer, COMDAT
; _this$ = ecx

; 423  : 	virtual BOOL	IsPlayer( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPlayer@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?HasTarget@CBaseEntity@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_targetname$ = 8					; size = 4
?HasTarget@CBaseEntity@@UAEHH@Z PROC			; CBaseEntity::HasTarget, COMDAT
; _this$ = ecx

; 421  : 	virtual BOOL	HasTarget( string_t targetname ) { return FStrEq(STRING(targetname), STRING(pev->targetname) ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+460]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _targetname$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	4
?HasTarget@CBaseEntity@@UAEHH@Z ENDP			; CBaseEntity::HasTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ReflectGauss@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
?ReflectGauss@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::ReflectGauss, COMDAT
; _this$ = ecx

; 420  : 	virtual BOOL	ReflectGauss( void ) { return (( IsBSPModel() || IsCustomModel()) && !pev->takedamage ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	call	eax
	test	eax, eax
	jne	SHORT $LN3@ReflectGau
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	call	eax
	test	eax, eax
	je	SHORT $LN4@ReflectGau
$LN3@ReflectGau:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movss	xmm0, DWORD PTR [edx+364]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@ReflectGau
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN5@ReflectGau
$LN4@ReflectGau:
	mov	DWORD PTR tv77[ebp], 0
$LN5@ReflectGau:
	mov	eax, DWORD PTR tv77[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ReflectGauss@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::ReflectGauss
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsCustomModel@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsCustomModel@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsCustomModel, COMDAT
; _this$ = ecx

; 419  : 	virtual BOOL	IsCustomModel( void ) { return pev->solid == SOLID_CUSTOM; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+268], 5
	jne	SHORT $LN3@IsCustomMo
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsCustomMo
$LN3@IsCustomMo:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsCustomMo:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCustomModel@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsCustomModel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsBSPModel@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
?IsBSPModel@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsBSPModel, COMDAT
; _this$ = ecx

; 418  : 	virtual BOOL	IsBSPModel( void ) { return UTIL_GetModelType( pev->modelindex ) == mod_brush; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+180]
	push	edx
	call	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z ; UTIL_GetModelType
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@IsBSPModel
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@IsBSPModel
$LN3@IsBSPModel:
	mov	DWORD PTR tv69[ebp], 0
$LN4@IsBSPModel:
	mov	eax, DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBSPModel@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsBSPModel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsAlive@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?IsAlive@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsAlive, COMDAT
; _this$ = ecx

; 417  : 	virtual BOOL	IsAlive( void ) { return (pev->deadflag == DEAD_NO) && pev->health > 0; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+368], 0
	jne	SHORT $LN3@IsAlive
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	movss	xmm0, DWORD PTR [eax+352]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@IsAlive
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsAlive
$LN3@IsAlive:
	mov	DWORD PTR tv70[ebp], 0
$LN4@IsAlive:
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAlive@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsAlive
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsSneaking@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSneaking@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsSneaking, COMDAT
; _this$ = ecx

; 416  : 	virtual BOOL	IsSneaking( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSneaking@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnControls@CBaseEntity@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pTest$ = 8						; size = 4
?OnControls@CBaseEntity@@UAEHPAV1@@Z PROC		; CBaseEntity::OnControls, COMDAT
; _this$ = ecx

; 415  : 	virtual BOOL	OnControls( CBaseEntity *pTest ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?OnControls@CBaseEntity@@UAEHPAV1@@Z ENDP		; CBaseEntity::OnControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StopSneaking@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StopSneaking@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::StopSneaking, COMDAT
; _this$ = ecx

; 414  : 	virtual void	StopSneaking( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?StopSneaking@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::StopSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StartSneaking@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartSneaking@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::StartSneaking, COMDAT
; _this$ = ecx

; 413  : 	virtual void	StartSneaking( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?StartSneaking@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::StartSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?SetToggleState@CBaseEntity@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetToggleState@CBaseEntity@@UAEXH@Z PROC		; CBaseEntity::SetToggleState, COMDAT
; _this$ = ecx

; 412  : 	virtual void	SetToggleState( int state ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetToggleState@CBaseEntity@@UAEXH@Z ENDP		; CBaseEntity::SetToggleState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?TransferReset@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TransferReset@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::TransferReset, COMDAT
; _this$ = ecx

; 409  : 	virtual void	TransferReset( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?TransferReset@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::TransferReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OverrideReset@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OverrideReset@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OverrideReset, COMDAT
; _this$ = ecx

; 408  : 	virtual void	OverrideReset( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OverrideReset@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OverrideReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMoving@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMoving@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMoving, COMDAT
; _this$ = ecx

; 407  : 	virtual int	IsMoving( void ) { return GetAbsVelocity() != g_vecZero; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?g_vecZero@@3VVector@@B		; g_vecZero
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsVelocity@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsVelocity
	mov	ecx, eax
	call	??9Vector@@QBEHABV0@@Z			; Vector::operator!=
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMoving@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMoving
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetDelay@CBaseEntity@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDelay@CBaseEntity@@UAEMXZ PROC			; CBaseEntity::GetDelay, COMDAT
; _this$ = ecx

; 406  : 	virtual float	GetDelay( void ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDelay@CBaseEntity@@UAEMXZ ENDP			; CBaseEntity::GetDelay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iAmount$ = 8						; size = 4
_szName$ = 12						; size = 4
_iMax$ = 16						; size = 4
?GiveAmmo@CBaseEntity@@UAEHHPADH@Z PROC			; CBaseEntity::GiveAmmo, COMDAT
; _this$ = ecx

; 405  : 	virtual int 	GiveAmmo( int iAmount, char *szName, int iMax ) { return -1; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GiveAmmo@CBaseEntity@@UAEHHPADH@Z ENDP			; CBaseEntity::GiveAmmo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pItem$ = 8						; size = 4
?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z PROC ; CBaseEntity::RemovePlayerItem, COMDAT
; _this$ = ecx

; 404  : 	virtual BOOL	RemovePlayerItem( CBasePlayerItem *pItem ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ENDP ; CBaseEntity::RemovePlayerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pItem$ = 8						; size = 4
?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z PROC ; CBaseEntity::AddPlayerItem, COMDAT
; _this$ = ecx

; 403  : 	virtual BOOL	AddPlayerItem( CBasePlayerItem *pItem ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ENDP ; CBaseEntity::AddPlayerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_score$ = 8						; size = 4
_bAllowNegativeScore$ = 12				; size = 4
?AddPointsToTeam@CBaseEntity@@UAEXHH@Z PROC		; CBaseEntity::AddPointsToTeam, COMDAT
; _this$ = ecx

; 402  : 	virtual void	AddPointsToTeam( int score, BOOL bAllowNegativeScore ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?AddPointsToTeam@CBaseEntity@@UAEXHH@Z ENDP		; CBaseEntity::AddPointsToTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPoints@CBaseEntity@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_score$ = 8						; size = 4
_bAllowNegativeScore$ = 12				; size = 4
?AddPoints@CBaseEntity@@UAEXHH@Z PROC			; CBaseEntity::AddPoints, COMDAT
; _this$ = ecx

; 401  : 	virtual void	AddPoints( int score, BOOL bAllowNegativeScore ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?AddPoints@CBaseEntity@@UAEXHH@Z ENDP			; CBaseEntity::AddPoints
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetToggleState@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetToggleState@CBaseEntity@@UAEHXZ PROC		; CBaseEntity::GetToggleState, COMDAT
; _this$ = ecx

; 400  : 	virtual int	GetToggleState( void ) { return TS_AT_TOP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetToggleState@CBaseEntity@@UAEHXZ ENDP		; CBaseEntity::GetToggleState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ PROC ; CBaseEntity::MySquadMonsterPointer, COMDAT
; _this$ = ecx

; 399  : 	virtual CSquadMonster *MySquadMonsterPointer( void ) { return NULL;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ ENDP ; CBaseEntity::MySquadMonsterPointer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ PROC ; CBaseEntity::MyMonsterPointer, COMDAT
; _this$ = ecx

; 398  : 	virtual CBaseMonster *MyMonsterPointer( void ) { return NULL;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ ENDP ; CBaseEntity::MyMonsterPointer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
?IsTriggered@CBaseEntity@@UAEHPAV1@@Z PROC		; CBaseEntity::IsTriggered, COMDAT
; _this$ = ecx

; 397  : 	virtual BOOL	IsTriggered( CBaseEntity *pActivator ) {return TRUE;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	4
?IsTriggered@CBaseEntity@@UAEHPAV1@@Z ENDP		; CBaseEntity::IsTriggered
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?BloodColor@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BloodColor@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::BloodColor, COMDAT
; _this$ = ecx

; 395  : 	virtual int	BloodColor( void ) { return DONT_BLEED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?BloodColor@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::BloodColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pEnt$ = 8						; size = 4
?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z PROC	; CBaseEntity::GetState, COMDAT
; _this$ = ecx

; 388  : 	virtual STATE GetState ( CBaseEntity* pEnt ) { return GetState(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z ENDP	; CBaseEntity::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseEntity@@UAE?AW4STATE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CBaseEntity@@UAE?AW4STATE@@XZ PROC		; CBaseEntity::GetState, COMDAT
; _this$ = ecx

; 385  : 	virtual STATE GetState ( void ) { return STATE_OFF; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@CBaseEntity@@UAE?AW4STATE@@XZ ENDP		; CBaseEntity::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsRigidBody@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsRigidBody@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsRigidBody, COMDAT
; _this$ = ecx

; 374  : 	virtual BOOL IsRigidBody( void ) { return (m_iActorType == ACTOR_DYNAMIC); } 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1604]
	cmp	ecx, 1
	jne	SHORT $LN3@IsRigidBod
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsRigidBod
$LN3@IsRigidBod:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsRigidBod:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRigidBody@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsRigidBody
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pevChild$ = 8						; size = 4
?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z PROC	; CBaseEntity::DeathNotice, COMDAT
; _this$ = ecx

; 373  : 	virtual void DeathNotice ( entvars_t *pevChild ) { } // monster maker children use this to tell the monster maker that they have died.

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z ENDP	; CBaseEntity::DeathNotice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Classify@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Classify@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::Classify, COMDAT
; _this$ = ecx

; 372  : 	virtual int Classify ( void ) { return CLASS_NONE; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Classify@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::Classify
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnRemove@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnRemove@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnRemove, COMDAT
; _this$ = ecx

; 360  : 	virtual void	OnRemove( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnRemove@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnRemove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnClearParent@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnClearParent@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnClearParent, COMDAT
; _this$ = ecx

; 359  : 	virtual void	OnClearParent( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnClearParent@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnClearParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnChangeParent@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnChangeParent@CBaseEntity@@UAEXXZ PROC		; CBaseEntity::OnChangeParent, COMDAT
; _this$ = ecx

; 358  : 	virtual void	OnChangeParent( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeParent@CBaseEntity@@UAEXXZ ENDP		; CBaseEntity::OnChangeParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetPosition@CBaseEntity@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPosition@CBaseEntity@@UAEMXZ PROC			; CBaseEntity::GetPosition, COMDAT
; _this$ = ecx

; 357  : 	virtual float	GetPosition( void ) { return 0.0f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPosition@CBaseEntity@@UAEMXZ ENDP			; CBaseEntity::GetPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z PROC	; CBaseEntity::StartMessage, COMDAT
; _this$ = ecx

; 356  :           virtual void	StartMessage( CBasePlayer *pPlayer ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z ENDP	; CBaseEntity::StartMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?PortalSleep@CBaseEntity@@UAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_seconds$ = 8						; size = 4
?PortalSleep@CBaseEntity@@UAEXM@Z PROC			; CBaseEntity::PortalSleep, COMDAT
; _this$ = ecx

; 355  : 	virtual void	PortalSleep( float seconds ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?PortalSleep@CBaseEntity@@UAEXM@Z ENDP			; CBaseEntity::PortalSleep
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnTeleport@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnTeleport@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnTeleport, COMDAT
; _this$ = ecx

; 354  : 	virtual void	OnTeleport( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnTeleport@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnTeleport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnChangeLevel@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnChangeLevel@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnChangeLevel, COMDAT
; _this$ = ecx

; 353  : 	virtual void	OnChangeLevel( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeLevel@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnChangeLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Activate@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Activate@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::Activate, COMDAT
; _this$ = ecx

; 352  : 	virtual void	Activate( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Activate@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ObjectCaps@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ObjectCaps@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::ObjectCaps, COMDAT
; _this$ = ecx

; 351  : 	virtual int	ObjectCaps( void ) { return FCAP_ACROSS_TRANSITION; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectCaps@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::ObjectCaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z
_TEXT	SEGMENT
tv139 = -8						; size = 4
_this$ = -4						; size = 4
_pkvd$ = 8						; size = 4
?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z PROC	; CBaseEntity::KeyValue, COMDAT
; _this$ = ecx

; 315  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 		// get support for spirit field too
; 317  : 		if( FStrEq( pkvd->szKeyName, "parent" ) || FStrEq( pkvd->szKeyName, "movewith" ))

	push	OFFSET ??_C@_06MLKDMCBD@parent@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@KeyValue
	push	OFFSET ??_C@_08JJJAOBDI@movewith@
	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@KeyValue
$LN6@KeyValue:

; 318  : 		{
; 319  : 			m_iParent = ALLOC_STRING(pkvd->szValue);

	mov	ecx, DWORD PTR _pkvd$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+172], eax

; 320  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN4@KeyValue:

; 321  : 		}
; 322  : 		else if( FStrEq( pkvd->szKeyName, "parentflags" ))

	push	OFFSET ??_C@_0M@EAELDHJO@parentflags@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@KeyValue

; 323  : 		{
; 324  : 			m_iParentFlags = Q_atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+176], eax

; 325  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN7@KeyValue:

; 326  : 		}
; 327  : 		else if( FStrEq( pkvd->szKeyName, "style" ))

	push	OFFSET ??_C@_05IAKJCFIM@style@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@KeyValue

; 328  : 		{
; 329  : 			m_iStyle = Q_atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 330  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN9@KeyValue:

; 331  : 		}
; 332  : 		else if( FStrEq( pkvd->szKeyName, "reflection" ))

	push	OFFSET ??_C@_0L@IKCANML@reflection@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@KeyValue

; 333  : 		{
; 334  : 			switch( Q_atoi( pkvd->szValue ))

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	DWORD PTR tv139[ebp], eax
	cmp	DWORD PTR tv139[ebp], 1
	je	SHORT $LN13@KeyValue
	cmp	DWORD PTR tv139[ebp], 2
	je	SHORT $LN14@KeyValue
	jmp	SHORT $LN2@KeyValue
$LN13@KeyValue:

; 335  : 			{
; 336  : 			case 1: pev->effects |= EF_NOREFLECT; break;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+280]
	or	eax, 16777216				; 01000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+280], eax
	jmp	SHORT $LN2@KeyValue
$LN14@KeyValue:

; 337  : 			case 2: pev->effects |= EF_REFLECTONLY; break;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+280]
	or	edx, 33554432				; 02000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+280], edx
$LN2@KeyValue:

; 338  : 			}
; 339  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	SHORT $LN1@KeyValue
$LN11@KeyValue:

; 340  : 		}
; 341  : 		else if( FStrEq(pkvd->szKeyName, "vlight_cache"))

	push	OFFSET ??_C@_0N@JILDNHAP@vlight_cache@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@KeyValue

; 342  : 		{
; 343  : 			pev->iuser3 = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+588], eax

; 344  : 			pkvd->fHandled = TRUE;

	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [eax+12], 1
	jmp	SHORT $LN1@KeyValue
$LN15@KeyValue:

; 345  : 		}
; 346  : 		else pkvd->fHandled = FALSE;

	mov	ecx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN1@KeyValue:

; 347  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z ENDP	; CBaseEntity::KeyValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Precache@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Precache@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::Precache, COMDAT
; _this$ = ecx

; 313  : 	virtual void	Precache( void ) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Precache@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::Precache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Spawn@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Spawn@CBaseEntity@@UAEXXZ PROC				; CBaseEntity::Spawn, COMDAT
; _this$ = ecx

; 312  : 	virtual void	Spawn( void ) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Spawn@CBaseEntity@@UAEXXZ ENDP				; CBaseEntity::Spawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetClassname@CBaseEntity@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClassname@CBaseEntity@@QAEPBDXZ PROC		; CBaseEntity::GetClassname, COMDAT
; _this$ = ecx

; 275  : 	const char*	GetClassname() { return STRING( pev->classname ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClassname@CBaseEntity@@QAEPBDXZ ENDP		; CBaseEntity::GetClassname
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ??CEHANDLE@@QAEPAVCBaseEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??CEHANDLE@@QAEPAVCBaseEntity@@XZ PROC			; EHANDLE::operator->, COMDAT
; _this$ = ecx

; 90   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 	return (CBaseEntity *)GET_PRIVATE( Get( ) ); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@EHANDLE@@QAEPAUedict_s@@XZ		; EHANDLE::Get
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??CEHANDLE@@QAEPAVCBaseEntity@@XZ ENDP			; EHANDLE::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ??BEHANDLE@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
??BEHANDLE@@QAEHXZ PROC					; EHANDLE::operator int, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	return Get() != NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@EHANDLE@@QAEPAUedict_s@@XZ		; EHANDLE::Get
	test	eax, eax
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??BEHANDLE@@QAEHXZ ENDP					; EHANDLE::operator int
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ?Get@EHANDLE@@QAEPAUedict_s@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@EHANDLE@@QAEPAUedict_s@@XZ PROC			; EHANDLE::Get, COMDAT
; _this$ = ecx

; 40   : { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 	if( m_pent )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Get

; 42   : 	{
; 43   : #if 0
; 44   : 		// keep client entity always in actual state
; 45   : 		if( ENTINDEX( m_pent ) == 1 )
; 46   : 			m_serialnumber = m_pent->serialnumber;
; 47   : #endif
; 48   : 		if( m_pent->serialnumber == m_serialnumber ) 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN2@Get

; 49   : 			return m_pent; 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	jmp	SHORT $LN1@Get
$LN2@Get:

; 50   : 	}
; 51   : 
; 52   : 	return NULL; 

	xor	eax, eax
$LN1@Get:

; 53   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Get@EHANDLE@@QAEPAUedict_s@@XZ ENDP			; EHANDLE::Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pent$ = -40						; size = 4
tv177 = -36						; size = 4
_ed$1 = -32						; size = 4
tv91 = -28						; size = 4
tv81 = -24						; size = 4
_active$2 = -20						; size = 4
_pEntity$ = -16						; size = 4
_ed$3 = -12						; size = 4
_i$4 = -8						; size = 4
_pTable$ = -4						; size = 4
_pSaveData$ = 8						; size = 4
_levelMask$ = 12					; size = 4
_create_world$ = 16					; size = 4
?DispatchCreateEntitiesInRestoreList@@YAXPAUsaverestore_s@@HH@Z PROC ; DispatchCreateEntitiesInRestoreList

; 465  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H

; 466  : 	ENTITYTABLE *pTable;
; 467  : 	CBaseEntity *pEntity;
; 468  : 	edict_t *pent;
; 469  : 
; 470  : 	// create entity list
; 471  : 	for( int i = 0; i < pSaveData->tableCount; i++ )

	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@DispatchCr
$LN2@DispatchCr:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@DispatchCr:
	mov	ecx, DWORD PTR _pSaveData$[ebp]
	mov	edx, DWORD PTR _i$4[ebp]
	cmp	edx, DWORD PTR [ecx+32]
	jge	$LN1@DispatchCr

; 472  : 	{
; 473  : 		pTable = &pSaveData->pTable[i];

	imul	eax, DWORD PTR _i$4[ebp], 24
	mov	ecx, DWORD PTR _pSaveData$[ebp]
	add	eax, DWORD PTR [ecx+40]
	mov	DWORD PTR _pTable$[ebp], eax

; 474  : 		pEntity = NULL;

	mov	DWORD PTR _pEntity$[ebp], 0

; 475  : 		pent = NULL;

	mov	DWORD PTR _pent$[ebp], 0

; 476  : 
; 477  : 		if( pTable->classname != NULL_STRING && pTable->size && ( !FBitSet( pTable->flags, FENTTABLE_REMOVED ) || !create_world ))

	mov	edx, DWORD PTR _pTable$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	$LN5@DispatchCr
	mov	eax, DWORD PTR _pTable$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN5@DispatchCr
	mov	ecx, DWORD PTR _pTable$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	and	edx, 1073741824				; 40000000H
	je	SHORT $LN6@DispatchCr
	cmp	DWORD PTR _create_world$[ebp], 0
	jne	$LN5@DispatchCr
$LN6@DispatchCr:

; 478  : 		{
; 479  : 			int	active = FBitSet( pTable->flags, levelMask ) ? 1 : 0;

	mov	eax, DWORD PTR _pTable$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	and	ecx, DWORD PTR _levelMask$[ebp]
	je	SHORT $LN16@DispatchCr
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN17@DispatchCr
$LN16@DispatchCr:
	mov	DWORD PTR tv81[ebp], 0
$LN17@DispatchCr:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _active$2[ebp], edx

; 480  : 
; 481  : 			if( create_world )

	cmp	DWORD PTR _create_world$[ebp], 0
	je	SHORT $LN7@DispatchCr

; 482  : 				active = 1;

	mov	DWORD PTR _active$2[ebp], 1
$LN7@DispatchCr:

; 483  : 
; 484  : 			if( pTable->id == 0 && create_world ) // worldspawn

	mov	eax, DWORD PTR _pTable$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN8@DispatchCr
	cmp	DWORD PTR _create_world$[ebp], 0
	je	$LN8@DispatchCr

; 485  : 			{
; 486  : 				ASSERT( i == 0 );

	cmp	DWORD PTR _i$4[ebp], 0
	jne	SHORT $LN18@DispatchCr
	mov	DWORD PTR tv91[ebp], 1
	jmp	SHORT $LN19@DispatchCr
$LN18@DispatchCr:
	mov	DWORD PTR tv91[ebp], 0
$LN19@DispatchCr:
	push	0
	push	486					; 000001e6H
	push	OFFSET $SG75169
	push	OFFSET $SG75170
	mov	ecx, DWORD PTR tv91[ebp]
	push	ecx
	call	?DBG_AssertFunction@@YAXHPBD0H0@Z	; DBG_AssertFunction
	add	esp, 20					; 00000014H

; 487  : 
; 488  : 				edict_t *ed = INDEXENT( pTable->id );

	mov	edx, DWORD PTR _pTable$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?INDEXENT@@YAPAUedict_s@@H@Z		; INDEXENT
	add	esp, 4
	mov	DWORD PTR _ed$3[ebp], eax

; 489  : 
; 490  : 				memset( &ed->v, 0, sizeof( entvars_t ));

	push	676					; 000002a4H
	push	0
	mov	ecx, DWORD PTR _ed$3[ebp]
	add	ecx, 128				; 00000080H
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH

; 491  : 				ed->v.pContainingEntity = ed;

	mov	edx, DWORD PTR _ed$3[ebp]
	mov	eax, DWORD PTR _ed$3[ebp]
	mov	DWORD PTR [edx+648], eax

; 492  : 				ed->free = false;

	mov	ecx, DWORD PTR _ed$3[ebp]
	mov	DWORD PTR [ecx], 0

; 493  : 				pEntity = GetClassPtr( (CWorld *)VARS(ed));

	mov	edx, DWORD PTR _ed$3[ebp]
	push	edx
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	push	eax
	call	??$GetClassPtr@VCWorld@@@@YAPAVCWorld@@PAV0@@Z ; GetClassPtr<CWorld>
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax
	jmp	$LN9@DispatchCr
$LN8@DispatchCr:

; 494  : 			}
; 495  : 			else if(( pTable->id > 0 ) && ( pTable->id <= gpGlobals->maxClients ))

	mov	eax, DWORD PTR _pTable$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN10@DispatchCr
	mov	ecx, DWORD PTR _pTable$[ebp]
	mov	edx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx+144]
	jg	SHORT $LN10@DispatchCr

; 496  : 			{
; 497  : 				if( !FBitSet( pTable->flags, FENTTABLE_PLAYER ))

	mov	ecx, DWORD PTR _pTable$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	and	edx, -2147483648			; 80000000H
	jne	SHORT $LN12@DispatchCr

; 498  : 					ALERT( at_warning, "ENTITY IS NOT A PLAYER: %d\n", i );

	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	push	OFFSET $SG75174
	push	3
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 12					; 0000000cH
$LN12@DispatchCr:

; 499  : 
; 500  : 				edict_t *ed = INDEXENT( pTable->id );

	mov	ecx, DWORD PTR _pTable$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?INDEXENT@@YAPAUedict_s@@H@Z		; INDEXENT
	add	esp, 4
	mov	DWORD PTR _ed$1[ebp], eax

; 501  : 
; 502  : 				// create the player
; 503  : 				if( active && ed != NULL )

	cmp	DWORD PTR _active$2[ebp], 0
	je	SHORT $LN13@DispatchCr
	cmp	DWORD PTR _ed$1[ebp], 0
	je	SHORT $LN13@DispatchCr

; 504  : 					pEntity = CreateEntityByName( STRING( pTable->classname ), VARS( ed ));

	mov	eax, DWORD PTR _ed$1[ebp]
	push	eax
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pTable$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?CreateEntityByName@@YAPAVCBaseEntity@@PBDPAUentvars_s@@@Z ; CreateEntityByName
	add	esp, 8
	mov	DWORD PTR _pEntity$[ebp], eax
$LN13@DispatchCr:

; 505  : 			}

	jmp	SHORT $LN9@DispatchCr
$LN10@DispatchCr:

; 506  : 			else if( active )

	cmp	DWORD PTR _active$2[ebp], 0
	je	SHORT $LN9@DispatchCr

; 507  : 			{
; 508  : 				pEntity = CreateEntityByName( STRING( pTable->classname ));

	push	0
	mov	eax, DWORD PTR _pTable$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?CreateEntityByName@@YAPAVCBaseEntity@@PBDPAUentvars_s@@@Z ; CreateEntityByName
	add	esp, 8
	mov	DWORD PTR _pEntity$[ebp], eax
$LN9@DispatchCr:

; 509  : 			}
; 510  : 
; 511  : 			pent = (pEntity) ? ENT(pEntity) : NULL;

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN20@DispatchCr
	mov	edx, DWORD PTR _pEntity$[ebp]
	push	edx
	call	?ENT@@YAPAUedict_s@@PAVCBaseEntity@@@Z	; ENT
	add	esp, 4
	mov	DWORD PTR tv177[ebp], eax
	jmp	SHORT $LN21@DispatchCr
$LN20@DispatchCr:
	mov	DWORD PTR tv177[ebp], 0
$LN21@DispatchCr:
	mov	eax, DWORD PTR tv177[ebp]
	mov	DWORD PTR _pent$[ebp], eax
$LN5@DispatchCr:

; 512  : 		}
; 513  : 
; 514  : 		pTable->pent = pent;

	mov	ecx, DWORD PTR _pTable$[ebp]
	mov	edx, DWORD PTR _pent$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 515  : 	}

	jmp	$LN2@DispatchCr
$LN1@DispatchCr:

; 516  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchCreateEntitiesInRestoreList@@YAXPAUsaverestore_s@@HH@Z ENDP ; DispatchCreateEntitiesInRestoreList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_restoreHelper$ = -1604					; size = 36
_pFields$ = -1568					; size = 4
tv69 = -1564						; size = 4
_pField$ = -1560					; size = 4
_i$2 = -1556						; size = 4
_pRemapFields$ = -1552					; size = 1536
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pSaveData$ = 8						; size = 4
_pname$ = 12						; size = 4
_pBaseData$ = 16					; size = 4
_pInFields$ = 20					; size = 4
_fieldCount$ = 24					; size = 4
?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z PROC ; SaveReadFields

; 575  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1592				; 00000638H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 576  : 	TYPEDESCRIPTION	pRemapFields[64];
; 577  : 	TYPEDESCRIPTION	*pFields, *pField;
; 578  : 
; 579  : 	pFields = pField = pRemapFields;

	lea	eax, DWORD PTR _pRemapFields$[ebp]
	mov	DWORD PTR _pField$[ebp], eax
	mov	ecx, DWORD PTR _pField$[ebp]
	mov	DWORD PTR _pFields$[ebp], ecx

; 580  : 
; 581  : 	ASSERT( fieldCount <= 64 );

	cmp	DWORD PTR _fieldCount$[ebp], 64		; 00000040H
	jg	SHORT $LN6@SaveReadFi
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN7@SaveReadFi
$LN6@SaveReadFi:
	mov	DWORD PTR tv69[ebp], 0
$LN7@SaveReadFi:
	push	0
	push	581					; 00000245H
	push	OFFSET $SG75224
	push	OFFSET $SG75225
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	call	?DBG_AssertFunction@@YAXHPBD0H0@Z	; DBG_AssertFunction
	add	esp, 20					; 00000014H

; 582  : 
; 583  : 	// convert short engine decsription into long game description
; 584  : 	for( int i = 0; i < fieldCount; i++, pField++ )

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@SaveReadFi
$LN2@SaveReadFi:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
	mov	ecx, DWORD PTR _pField$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR _pField$[ebp], ecx
$LN4@SaveReadFi:
	mov	edx, DWORD PTR _i$2[ebp]
	cmp	edx, DWORD PTR _fieldCount$[ebp]
	jge	$LN3@SaveReadFi

; 585  : 	{
; 586  : 		pField->fieldType = pInFields[i].fieldType;

	mov	eax, DWORD PTR _i$2[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _pField$[ebp]
	mov	edx, DWORD PTR _pInFields$[ebp]
	mov	eax, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx], eax

; 587  : 		pField->fieldName = pInFields[i].fieldName;

	mov	ecx, DWORD PTR _i$2[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _pField$[ebp]
	mov	eax, DWORD PTR _pInFields$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR [edx+4], ecx

; 588  : 		pField->fieldOffset = pInFields[i].fieldOffset;

	mov	edx, DWORD PTR _i$2[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _pField$[ebp]
	mov	ecx, DWORD PTR _pInFields$[ebp]
	mov	edx, DWORD PTR [ecx+edx+8]
	mov	DWORD PTR [eax+8], edx

; 589  : 		pField->fieldSize = pInFields[i].fieldSize;

	mov	eax, DWORD PTR _i$2[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _pField$[ebp]
	mov	edx, DWORD PTR _pInFields$[ebp]
	mov	ax, WORD PTR [edx+eax+12]
	mov	WORD PTR [ecx+12], ax

; 590  : 		pField->flags = pInFields[i].flags;

	mov	ecx, DWORD PTR _i$2[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _pField$[ebp]
	mov	eax, DWORD PTR _pInFields$[ebp]
	mov	cx, WORD PTR [eax+ecx+14]
	mov	WORD PTR [edx+14], cx

; 591  : 	}

	jmp	$LN2@SaveReadFi
$LN3@SaveReadFi:

; 592  : 
; 593  : 	CRestore restoreHelper( pSaveData );

	mov	edx, DWORD PTR _pSaveData$[ebp]
	push	edx
	lea	ecx, DWORD PTR _restoreHelper$[ebp]
	call	??0CRestore@@QAE@PAUsaverestore_s@@@Z	; CRestore::CRestore
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 594  : 	restoreHelper.ReadFields( pname, pBaseData, NULL, pFields, fieldCount );

	mov	eax, DWORD PTR _fieldCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFields$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pBaseData$[ebp]
	push	edx
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	lea	ecx, DWORD PTR _restoreHelper$[ebp]
	call	?ReadFields@CRestore@@QAEHPBDPBXPAUdatamap_s@@PAUtypedescription_s@@H@Z ; CRestore::ReadFields

; 595  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _restoreHelper$[ebp]
	call	??1CRestore@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z$0:
	lea	ecx, DWORD PTR _restoreHelper$[ebp]
	jmp	??1CRestore@@QAE@XZ
__ehhandler$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1596]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveReadFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z ENDP ; SaveReadFields
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_saveHelper$ = -1596					; size = 28
_pFields$ = -1568					; size = 4
tv69 = -1564						; size = 4
_pField$ = -1560					; size = 4
_i$2 = -1556						; size = 4
_pRemapFields$ = -1552					; size = 1536
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pSaveData$ = 8						; size = 4
_pname$ = 12						; size = 4
_pBaseData$ = 16					; size = 4
_pInFields$ = 20					; size = 4
_fieldCount$ = 24					; size = 4
?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z PROC ; SaveWriteFields

; 552  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1584				; 00000630H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 553  : 	TYPEDESCRIPTION	pRemapFields[64];
; 554  : 	TYPEDESCRIPTION	*pFields, *pField;
; 555  : 
; 556  : 	pFields = pField = pRemapFields;

	lea	eax, DWORD PTR _pRemapFields$[ebp]
	mov	DWORD PTR _pField$[ebp], eax
	mov	ecx, DWORD PTR _pField$[ebp]
	mov	DWORD PTR _pFields$[ebp], ecx

; 557  : 
; 558  : 	ASSERT( fieldCount <= 64 );

	cmp	DWORD PTR _fieldCount$[ebp], 64		; 00000040H
	jg	SHORT $LN6@SaveWriteF
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN7@SaveWriteF
$LN6@SaveWriteF:
	mov	DWORD PTR tv69[ebp], 0
$LN7@SaveWriteF:
	push	0
	push	558					; 0000022eH
	push	OFFSET $SG75207
	push	OFFSET $SG75208
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	call	?DBG_AssertFunction@@YAXHPBD0H0@Z	; DBG_AssertFunction
	add	esp, 20					; 00000014H

; 559  : 
; 560  : 	// convert short engine decsription into long game description
; 561  : 	for( int i = 0; i < fieldCount; i++, pField++ )

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@SaveWriteF
$LN2@SaveWriteF:
	mov	eax, DWORD PTR _i$2[ebp]
	add	eax, 1
	mov	DWORD PTR _i$2[ebp], eax
	mov	ecx, DWORD PTR _pField$[ebp]
	add	ecx, 24					; 00000018H
	mov	DWORD PTR _pField$[ebp], ecx
$LN4@SaveWriteF:
	mov	edx, DWORD PTR _i$2[ebp]
	cmp	edx, DWORD PTR _fieldCount$[ebp]
	jge	$LN3@SaveWriteF

; 562  : 	{
; 563  : 		pField->fieldType = pInFields[i].fieldType;

	mov	eax, DWORD PTR _i$2[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _pField$[ebp]
	mov	edx, DWORD PTR _pInFields$[ebp]
	mov	eax, DWORD PTR [edx+eax]
	mov	DWORD PTR [ecx], eax

; 564  : 		pField->fieldName = pInFields[i].fieldName;

	mov	ecx, DWORD PTR _i$2[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _pField$[ebp]
	mov	eax, DWORD PTR _pInFields$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+4]
	mov	DWORD PTR [edx+4], ecx

; 565  : 		pField->fieldOffset = pInFields[i].fieldOffset;

	mov	edx, DWORD PTR _i$2[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _pField$[ebp]
	mov	ecx, DWORD PTR _pInFields$[ebp]
	mov	edx, DWORD PTR [ecx+edx+8]
	mov	DWORD PTR [eax+8], edx

; 566  : 		pField->fieldSize = pInFields[i].fieldSize;

	mov	eax, DWORD PTR _i$2[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _pField$[ebp]
	mov	edx, DWORD PTR _pInFields$[ebp]
	mov	ax, WORD PTR [edx+eax+12]
	mov	WORD PTR [ecx+12], ax

; 567  : 		pField->flags = pInFields[i].flags;

	mov	ecx, DWORD PTR _i$2[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _pField$[ebp]
	mov	eax, DWORD PTR _pInFields$[ebp]
	mov	cx, WORD PTR [eax+ecx+14]
	mov	WORD PTR [edx+14], cx

; 568  : 	}

	jmp	$LN2@SaveWriteF
$LN3@SaveWriteF:

; 569  : 
; 570  : 	CSave saveHelper( pSaveData );

	mov	edx, DWORD PTR _pSaveData$[ebp]
	push	edx
	lea	ecx, DWORD PTR _saveHelper$[ebp]
	call	??0CSave@@QAE@PAUsaverestore_s@@@Z	; CSave::CSave
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 571  : 	saveHelper.WriteFields( pname, pBaseData, NULL, pFields, fieldCount );

	mov	eax, DWORD PTR _fieldCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFields$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pBaseData$[ebp]
	push	edx
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	lea	ecx, DWORD PTR _saveHelper$[ebp]
	call	?WriteFields@CSave@@QAEHPBDPBXPAUdatamap_s@@PAUtypedescription_s@@H@Z ; CSave::WriteFields

; 572  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _saveHelper$[ebp]
	call	??1CSave@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z$0:
	lea	ecx, DWORD PTR _saveHelper$[ebp]
	jmp	??1CSave@@QAE@XZ
__ehhandler$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1588]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SaveWriteFields@@YAXPAUsaverestore_s@@PBDPAXPAUENGTYPEDESCRIPTION@@H@Z ENDP ; SaveWriteFields
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pEntity$ = -4						; size = 4
_pent$ = 8						; size = 4
?DispatchObjectCollsionBox@@YAXPAUedict_s@@@Z PROC	; DispatchObjectCollsionBox

; 519  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 520  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pent);

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 521  : 
; 522  : 	if( pEntity )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN1@DispatchOb

; 523  : 	{
; 524  : 		pEntity->CalcAbsolutePosition();

	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?CalcAbsolutePosition@CBaseEntity@@QAEXXZ ; CBaseEntity::CalcAbsolutePosition

; 525  : 		pEntity->SetObjectCollisionBox();

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
$LN1@DispatchOb:

; 526  : 	}
; 527  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchObjectCollsionBox@@YAXPAUedict_s@@@Z ENDP	; DispatchObjectCollsionBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
$T2 = -844						; size = 12
$T3 = -832						; size = 12
$T4 = -820						; size = 12
$T5 = -808						; size = 12
_tmpRestore$6 = -796					; size = 36
$T7 = -760						; size = 4
$T8 = -756						; size = 4
$T9 = -752						; size = 4
_pGlobal$10 = -748					; size = 4
_restoreHelper$11 = -744				; size = 36
_pTable$12 = -708					; size = 4
_pGlobal$13 = -704					; size = 4
_pNewEntity$14 = -700					; size = 4
_pEntity$ = -696					; size = 4
_tmpVars$15 = -692					; size = 676
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pent$ = 8						; size = 4
_pSaveData$ = 12					; size = 4
_globalEntity$ = 16					; size = 4
?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z PROC ; DispatchRestore

; 340  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 832				; 00000340H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 341  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pent);

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 342  : 
; 343  : 	gpGlobals->vecLandmarkOffset = g_vecZero;

	mov	ecx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	add	ecx, 160				; 000000a0H
	mov	edx, DWORD PTR ?g_vecZero@@3VVector@@B
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR ?g_vecZero@@3VVector@@B+4
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR ?g_vecZero@@3VVector@@B+8
	mov	DWORD PTR [ecx+8], edx

; 344  : 
; 345  : 	if ( pEntity && pSaveData )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	$LN2@DispatchRe
	cmp	DWORD PTR _pSaveData$[ebp], 0
	je	$LN2@DispatchRe

; 346  : 	{
; 347  : 		entvars_t tmpVars;

	lea	ecx, DWORD PTR _tmpVars$15[ebp]
	call	??0entvars_s@@QAE@XZ

; 348  : 		ENTITYTABLE *pTable = &pSaveData->pTable[pSaveData->currentIndex];

	mov	eax, DWORD PTR _pSaveData$[ebp]
	imul	ecx, DWORD PTR [eax+28], 24
	mov	edx, DWORD PTR _pSaveData$[ebp]
	add	ecx, DWORD PTR [edx+40]
	mov	DWORD PTR _pTable$12[ebp], ecx

; 349  : 
; 350  : 		CRestore restoreHelper( pSaveData );

	mov	eax, DWORD PTR _pSaveData$[ebp]
	push	eax
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	call	??0CRestore@@QAE@PAUsaverestore_s@@@Z	; CRestore::CRestore
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 351  : 		if ( globalEntity )

	cmp	DWORD PTR _globalEntity$[ebp], 0
	je	$LN3@DispatchRe

; 352  : 		{
; 353  : 			CRestore tmpRestore( pSaveData );

	mov	ecx, DWORD PTR _pSaveData$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	call	??0CRestore@@QAE@PAUsaverestore_s@@@Z	; CRestore::CRestore
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 354  : 			tmpRestore.PrecacheMode( 0 );

	push	0
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	call	?PrecacheMode@CRestore@@QAEXH@Z		; CRestore::PrecacheMode

; 355  : 			tmpRestore.ReadEntVars( "ENTVARS", pEntity->GetDataDescMap(), &tmpVars );

	lea	edx, DWORD PTR _tmpVars$15[ebp]
	push	edx
	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	push	eax
	push	OFFSET $SG75116
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	call	?ReadEntVars@CRestore@@QAEHPBDPAUdatamap_s@@PAUentvars_s@@@Z ; CRestore::ReadEntVars

; 356  : 
; 357  : 			// HACKHACK - reset the save pointers, we're going to restore for real this time
; 358  : 			pSaveData->size = pSaveData->pTable[pSaveData->currentIndex].location;

	mov	ecx, DWORD PTR _pSaveData$[ebp]
	imul	edx, DWORD PTR [ecx+28], 24
	mov	eax, DWORD PTR _pSaveData$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	eax, DWORD PTR _pSaveData$[ebp]
	mov	ecx, DWORD PTR [ecx+edx+8]
	mov	DWORD PTR [eax+8], ecx

; 359  : 			pSaveData->pCurrentData = pSaveData->pBaseData + pSaveData->size;

	mov	edx, DWORD PTR _pSaveData$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pSaveData$[ebp]
	add	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _pSaveData$[ebp]
	mov	DWORD PTR [edx+4], eax

; 360  : 			// -------------------
; 361  : 
; 362  : 			const globalentity_t *pGlobal = gGlobalState.EntityFromTable( tmpVars.globalname );

	mov	eax, DWORD PTR _tmpVars$15[ebp+4]
	push	eax
	mov	ecx, OFFSET ?gGlobalState@@3VCGlobalState@@A ; gGlobalState
	call	?EntityFromTable@CGlobalState@@QAEPBUglobalentity_s@@H@Z ; CGlobalState::EntityFromTable
	mov	DWORD PTR _pGlobal$10[ebp], eax

; 363  : 			
; 364  : 			// Don't overlay any instance of the global that isn't the latest
; 365  : 			// pSaveData->szCurrentMapName is the level this entity is coming from
; 366  : 			// pGlobla->levelName is the last level the global entity was active in.
; 367  : 			// If they aren't the same, then this global update is out of date.
; 368  : 			if ( !FStrEq( pSaveData->szCurrentMapName, pGlobal->levelName ) )

	mov	ecx, DWORD PTR _pGlobal$10[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR _pSaveData$[ebp]
	add	edx, 1364				; 00000554H
	push	edx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@DispatchRe

; 369  : 				return 0;

	mov	DWORD PTR $T9[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	call	??1CRestore@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	call	??1CRestore@@QAE@XZ
	mov	eax, DWORD PTR $T9[ebp]
	jmp	$LN1@DispatchRe
$LN4@DispatchRe:

; 370  : 
; 371  : 			// Compute the new global offset
; 372  : 			gpGlobals->vecLandmarkOffset = pSaveData->vecLandmarkOffset;

	mov	eax, DWORD PTR _pSaveData$[ebp]
	add	eax, 1348				; 00000544H
	mov	ecx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	add	ecx, 160				; 000000a0H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 373  : 			CBaseEntity *pNewEntity = FindGlobalEntity( tmpVars.classname, tmpVars.globalname );

	mov	ecx, DWORD PTR _tmpVars$15[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _tmpVars$15[ebp]
	push	edx
	call	?FindGlobalEntity@@YAPAVCBaseEntity@@HH@Z ; FindGlobalEntity
	add	esp, 8
	mov	DWORD PTR _pNewEntity$14[ebp], eax

; 374  : 			if ( pNewEntity )

	cmp	DWORD PTR _pNewEntity$14[ebp], 0
	je	$LN5@DispatchRe

; 375  : 			{
; 376  : //				ALERT( at_console, "Overlay %s with %s\n", STRING(pNewEntity->pev->classname), STRING(tmpVars.classname) );
; 377  : 				// Tell the restore code we're overlaying a global entity from another level
; 378  : 				restoreHelper.SetGlobalMode( 1 );	// Don't overwrite global fields

	push	1
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	call	?SetGlobalMode@CRestore@@QAEXH@Z	; CRestore::SetGlobalMode

; 379  : 
; 380  : 				if( UTIL_GetModelType( pNewEntity->pev->modelindex ) == mod_brush )

	mov	eax, DWORD PTR _pNewEntity$14[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+180]
	push	edx
	call	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z ; UTIL_GetModelType
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN7@DispatchRe

; 381  : 				{
; 382  : 					// calculate model offsets to update the childrens
; 383  : 					restoreHelper.modelSpaceOffset = tmpVars.mins - pNewEntity->pev->mins;

	mov	eax, DWORD PTR _pNewEntity$14[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 220				; 000000dcH
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	lea	ecx, DWORD PTR _tmpVars$15[ebp+220]
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _restoreHelper$11[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _restoreHelper$11[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _restoreHelper$11[ebp+8], eax

; 384  : 					restoreHelper.modelOriginOffset = tmpVars.vuser1 - pNewEntity->pev->vuser1;

	mov	ecx, DWORD PTR _pNewEntity$14[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 612				; 00000264H
	push	edx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _tmpVars$15[ebp+612]
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _restoreHelper$11[ebp+12], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _restoreHelper$11[ebp+16], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _restoreHelper$11[ebp+20], eax
$LN7@DispatchRe:

; 385  : 				}
; 386  : 
; 387  : 				pSaveData->vecLandmarkOffset = (pSaveData->vecLandmarkOffset - pNewEntity->pev->mins) + tmpVars.mins;

	lea	ecx, DWORD PTR _tmpVars$15[ebp+220]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR _pNewEntity$14[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 220				; 000000dcH
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _pSaveData$[ebp]
	add	ecx, 1348				; 00000544H
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	ecx, DWORD PTR _pSaveData$[ebp]
	add	ecx, 1348				; 00000544H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 388  : 				pEntity = pNewEntity;// we're going to restore this data OVER the old entity

	mov	ecx, DWORD PTR _pNewEntity$14[ebp]
	mov	DWORD PTR _pEntity$[ebp], ecx

; 389  : 				pent = ENT( pEntity->pev );

	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	mov	DWORD PTR _pent$[ebp], eax

; 390  : 				pTable->pent = pent;

	mov	ecx, DWORD PTR _pTable$12[ebp]
	mov	edx, DWORD PTR _pent$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 391  : 
; 392  : 				// Update the global table to say that the global definition of this entity should come from this level
; 393  : 				gGlobalState.EntityUpdate( pEntity->pev->globalname, gpGlobals->mapname );

	mov	eax, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, OFFSET ?gGlobalState@@3VCGlobalState@@A ; gGlobalState
	call	?EntityUpdate@CGlobalState@@QAEXHH@Z	; CGlobalState::EntityUpdate

; 394  : 			}
; 395  : 			else

	jmp	SHORT $LN6@DispatchRe
$LN5@DispatchRe:

; 396  : 			{
; 397  : 				// This entity will be freed automatically by the engine.  If we don't do a restore on a matching entity (below)
; 398  : 				// or call EntityUpdate() to move it to this level, we haven't changed global state at all.
; 399  : 				return 0;

	mov	DWORD PTR $T8[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	call	??1CRestore@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	call	??1CRestore@@QAE@XZ
	mov	eax, DWORD PTR $T8[ebp]
	jmp	$LN1@DispatchRe
$LN6@DispatchRe:

; 400  : 			}
; 401  : 		}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	call	??1CRestore@@QAE@XZ
$LN3@DispatchRe:

; 402  : 
; 403  : 		if ( pEntity->ObjectCaps() & FCAP_MUST_SPAWN )

	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	and	eax, 4
	je	SHORT $LN8@DispatchRe

; 404  : 		{
; 405  : 			pEntity->Restore( restoreHelper );

	lea	eax, DWORD PTR _restoreHelper$11[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax

; 406  : 			pEntity->Spawn();

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 407  : 		}
; 408  : 		else

	jmp	SHORT $LN9@DispatchRe
$LN8@DispatchRe:

; 409  : 		{
; 410  : 			pEntity->Restore( restoreHelper );

	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx

; 411  : 			pEntity->Precache( );

	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
$LN9@DispatchRe:

; 412  : 		}
; 413  : 
; 414  : 		restoreHelper.modelOriginOffset = g_vecZero;

	mov	ecx, DWORD PTR ?g_vecZero@@3VVector@@B
	mov	DWORD PTR _restoreHelper$11[ebp+12], ecx
	mov	edx, DWORD PTR ?g_vecZero@@3VVector@@B+4
	mov	DWORD PTR _restoreHelper$11[ebp+16], edx
	mov	eax, DWORD PTR ?g_vecZero@@3VVector@@B+8
	mov	DWORD PTR _restoreHelper$11[ebp+20], eax

; 415  : 		restoreHelper.modelSpaceOffset = g_vecZero;

	mov	ecx, DWORD PTR ?g_vecZero@@3VVector@@B
	mov	DWORD PTR _restoreHelper$11[ebp], ecx
	mov	edx, DWORD PTR ?g_vecZero@@3VVector@@B+4
	mov	DWORD PTR _restoreHelper$11[ebp+4], edx
	mov	eax, DWORD PTR ?g_vecZero@@3VVector@@B+8
	mov	DWORD PTR _restoreHelper$11[ebp+8], eax

; 416  : 
; 417  : 		// Again, could be deleted, get the pointer again.
; 418  : 		pEntity = (CBaseEntity *)GET_PRIVATE(pent);

	mov	ecx, DWORD PTR _pent$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 419  : 
; 420  : 		// Is this an overriding global entity (coming over the transition), or one restoring in a level
; 421  : 		if ( globalEntity )

	cmp	DWORD PTR _globalEntity$[ebp], 0
	je	SHORT $LN10@DispatchRe

; 422  : 		{
; 423  : 			pSaveData->vecLandmarkOffset = gpGlobals->vecLandmarkOffset;

	mov	edx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	add	edx, 160				; 000000a0H
	mov	eax, DWORD PTR _pSaveData$[ebp]
	add	eax, 1348				; 00000544H
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx

; 424  : 
; 425  : 			if ( pEntity )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN12@DispatchRe

; 426  : 			{
; 427  : 				pEntity->RelinkEntity( TRUE );

	push	0
	push	0
	push	1
	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?RelinkEntity@CBaseEntity@@QAEXHPBVVector@@H@Z ; CBaseEntity::RelinkEntity

; 428  : 				pEntity->OverrideReset();

	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+164]
	call	eax
$LN12@DispatchRe:

; 429  : 			}
; 430  : 		}

	jmp	$LN21@DispatchRe
$LN10@DispatchRe:

; 431  : 		else if ( pEntity && pEntity->pev->globalname ) 

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	$LN13@DispatchRe
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+4], 0
	je	$LN13@DispatchRe

; 432  : 		{
; 433  : 			const globalentity_t *pGlobal = gGlobalState.EntityFromTable( pEntity->pev->globalname );

	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, OFFSET ?gGlobalState@@3VCGlobalState@@A ; gGlobalState
	call	?EntityFromTable@CGlobalState@@QAEPBUglobalentity_s@@H@Z ; CGlobalState::EntityFromTable
	mov	DWORD PTR _pGlobal$13[ebp], eax

; 434  : 			if ( pGlobal )

	cmp	DWORD PTR _pGlobal$13[ebp], 0
	je	SHORT $LN15@DispatchRe

; 435  : 			{
; 436  : 				// Already dead? delete
; 437  : 				if ( pGlobal->state == GLOBAL_DEAD )

	mov	eax, DWORD PTR _pGlobal$13[ebp]
	cmp	DWORD PTR [eax+96], 2
	jne	SHORT $LN17@DispatchRe

; 438  : 					return -1;

	mov	DWORD PTR $T7[ebp], -1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	call	??1CRestore@@QAE@XZ
	mov	eax, DWORD PTR $T7[ebp]
	jmp	$LN1@DispatchRe
	jmp	SHORT $LN19@DispatchRe
$LN17@DispatchRe:

; 439  : 				else if ( !FStrEq( STRING(gpGlobals->mapname), pGlobal->levelName ) )

	mov	ecx, DWORD PTR _pGlobal$13[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN19@DispatchRe

; 440  : 				{
; 441  : 					pEntity->MakeDormant();	// Hasn't been moved to this level yet, wait but stay alive

	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?MakeDormant@CBaseEntity@@QAEXXZ	; CBaseEntity::MakeDormant
$LN19@DispatchRe:

; 442  : 				}
; 443  : 				// In this level & not dead, continue on as normal
; 444  : 			}
; 445  : 			else

	jmp	SHORT $LN16@DispatchRe
$LN15@DispatchRe:

; 446  : 			{
; 447  : 				ALERT( at_error, "Global Entity %s (%s) not in table!!!\n", STRING(pEntity->pev->globalname), STRING(pEntity->pev->classname) );

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	push	OFFSET $SG75136
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244

; 448  : 				// Spawned entities default to 'On'
; 449  : 				gGlobalState.EntityAdd( pEntity->pev->globalname, gpGlobals->mapname, GLOBAL_ON );

	add	esp, 12					; 0000000cH
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, OFFSET ?gGlobalState@@3VCGlobalState@@A ; gGlobalState
	call	?EntityAdd@CGlobalState@@QAEXHHW4GLOBALESTATE@@M@Z ; CGlobalState::EntityAdd
$LN16@DispatchRe:

; 450  : 			}

	jmp	SHORT $LN21@DispatchRe
$LN13@DispatchRe:

; 451  : 		}
; 452  : 		else if( gpGlobals->changelevel )

	mov	eax, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	cmp	DWORD PTR [eax+136], 0
	je	SHORT $LN21@DispatchRe

; 453  : 		{
; 454  : 			if( pTable->flags & ( FENTTABLE_MOVEABLE|FENTTABLE_PLAYER ))

	mov	ecx, DWORD PTR _pTable$12[ebp]
	mov	edx, DWORD PTR [ecx+16]
	and	edx, -1610612736			; a0000000H
	je	SHORT $LN21@DispatchRe

; 455  : 			{
; 456  : 				// do reset for moveable entities
; 457  : 				pEntity->TransferReset();

	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+168]
	call	eax
$LN21@DispatchRe:

; 458  : 			}
; 459  : 		}
; 460  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	call	??1CRestore@@QAE@XZ
$LN2@DispatchRe:

; 461  : 	return 0;

	xor	eax, eax
$LN1@DispatchRe:

; 462  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z$0:
	lea	ecx, DWORD PTR _restoreHelper$11[ebp]
	jmp	??1CRestore@@QAE@XZ
__unwindfunclet$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z$1:
	lea	ecx, DWORD PTR _tmpRestore$6[ebp]
	jmp	??1CRestore@@QAE@XZ
__ehhandler$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-836]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DispatchRestore@@YAHPAUedict_s@@PAUsaverestore_s@@H@Z ENDP ; DispatchRestore
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_saveHelper$2 = -48					; size = 28
_pTable$3 = -20						; size = 4
_pEntity$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pent$ = 8						; size = 4
_pSaveData$ = 12					; size = 4
?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z PROC	; DispatchSave

; 298  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 299  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pent);

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 300  : 	
; 301  : 	if ( pEntity && pSaveData )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	$LN1@DispatchSa
	cmp	DWORD PTR _pSaveData$[ebp], 0
	je	$LN1@DispatchSa

; 302  : 	{
; 303  : 		ENTITYTABLE *pTable = &pSaveData->pTable[ pSaveData->currentIndex ];

	mov	ecx, DWORD PTR _pSaveData$[ebp]
	imul	edx, DWORD PTR [ecx+28], 24
	mov	eax, DWORD PTR _pSaveData$[ebp]
	add	edx, DWORD PTR [eax+40]
	mov	DWORD PTR _pTable$3[ebp], edx

; 304  : 
; 305  : 		if ( pTable->pent != pent )

	mov	ecx, DWORD PTR _pTable$3[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR _pent$[ebp]
	je	SHORT $LN3@DispatchSa

; 306  : 			ALERT( at_error, "ENTITY TABLE OR INDEX IS WRONG!!!!\n" );

	push	OFFSET $SG75081
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 8
$LN3@DispatchSa:

; 307  : 
; 308  : 		if ( pEntity->ObjectCaps() & FCAP_DONT_SAVE )

	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	and	eax, -2147483648			; 80000000H
	je	SHORT $LN4@DispatchSa

; 309  : 			return;

	jmp	SHORT $LN1@DispatchSa
$LN4@DispatchSa:

; 310  : 
; 311  : 		pTable->location = pSaveData->size;		// Remember entity position for file I/O

	mov	ecx, DWORD PTR _pTable$3[ebp]
	mov	edx, DWORD PTR _pSaveData$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 312  : 		pTable->classname = pEntity->pev->classname;	// Remember entity class for respawn

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _pTable$3[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax+20], ecx

; 313  : 
; 314  : 		CSave saveHelper( pSaveData );

	mov	edx, DWORD PTR _pSaveData$[ebp]
	push	edx
	lea	ecx, DWORD PTR _saveHelper$2[ebp]
	call	??0CSave@@QAE@PAUsaverestore_s@@@Z	; CSave::CSave
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 315  : 		pEntity->Save( saveHelper );

	lea	eax, DWORD PTR _saveHelper$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax

; 316  : 
; 317  : 		pTable->size = pSaveData->size - pTable->location;	// Size of entity block is data size written to block

	mov	ecx, DWORD PTR _pSaveData$[ebp]
	mov	edx, DWORD PTR _pTable$3[ebp]
	mov	eax, DWORD PTR [ecx+8]
	sub	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _pTable$3[ebp]
	mov	DWORD PTR [ecx+12], eax

; 318  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _saveHelper$2[ebp]
	call	??1CSave@@QAE@XZ
$LN1@DispatchSa:

; 319  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z$0:
	lea	ecx, DWORD PTR _saveHelper$2[ebp]
	jmp	??1CSave@@QAE@XZ
__ehhandler$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DispatchSave@@YAXPAUedict_s@@PAUsaverestore_s@@@Z ENDP	; DispatchSave
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pOther$ = -8						; size = 4
_pEntity$ = -4						; size = 4
_pentBlocked$ = 8					; size = 4
_pentOther$ = 12					; size = 4
?DispatchBlocked@@YAXPAUedict_s@@0@Z PROC		; DispatchBlocked

; 289  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 290  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE( pentBlocked );

	mov	eax, DWORD PTR _pentBlocked$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 291  : 	CBaseEntity *pOther = (CBaseEntity *)GET_PRIVATE( pentOther );

	mov	ecx, DWORD PTR _pentOther$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pOther$[ebp], eax

; 292  : 
; 293  : 	if (pEntity)

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN1@DispatchBl

; 294  : 		pEntity->Blocked( pOther );

	mov	edx, DWORD PTR _pOther$[ebp]
	push	edx
	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+280]
	call	eax
$LN1@DispatchBl:

; 295  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchBlocked@@YAXPAUedict_s@@0@Z ENDP		; DispatchBlocked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pEntity$ = -4						; size = 4
_pent$ = 8						; size = 4
?DispatchThink@@YAXPAUedict_s@@@Z PROC			; DispatchThink

; 276  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 277  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pent);

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 278  : 
; 279  : 	if (pEntity)

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN1@DispatchTh

; 280  : 	{
; 281  : 		if( FBitSet( pEntity->pev->flags, FL_DORMANT ))

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+420]
	and	eax, -2147483648			; 80000000H
	je	SHORT $LN3@DispatchTh

; 282  : 			ALERT( at_error, "Dormant entity %s is thinking!!\n", pEntity->GetClassname() );

	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?GetClassname@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetClassname
	push	eax
	push	OFFSET $SG75061
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 12					; 0000000cH
$LN3@DispatchTh:

; 283  : 				
; 284  : 		pEntity->Think();

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+268]
	call	eax
$LN1@DispatchTh:

; 285  : 	}
; 286  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchThink@@YAXPAUedict_s@@@Z ENDP			; DispatchThink
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pOther$ = -8						; size = 4
_pEntity$ = -4						; size = 4
_pentUsed$ = 8						; size = 4
_pentOther$ = 12					; size = 4
?DispatchUse@@YAXPAUedict_s@@0@Z PROC			; DispatchUse

; 267  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 268  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pentUsed);

	mov	eax, DWORD PTR _pentUsed$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 269  : 	CBaseEntity *pOther = (CBaseEntity *)GET_PRIVATE(pentOther);

	mov	ecx, DWORD PTR _pentOther$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pOther$[ebp], eax

; 270  : 
; 271  : 	if (pEntity && !(pEntity->pev->flags & FL_KILLME) )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN2@DispatchUs
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+420]
	and	ecx, 1073741824				; 40000000H
	jne	SHORT $LN2@DispatchUs

; 272  : 		pEntity->Use( pOther, pOther, USE_TOGGLE, 0 );

	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	3
	mov	edx, DWORD PTR _pOther$[ebp]
	push	edx
	mov	eax, DWORD PTR _pOther$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+272]
	call	eax
$LN2@DispatchUs:

; 273  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchUse@@YAXPAUedict_s@@0@Z ENDP			; DispatchUse
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pOther$ = -8						; size = 4
_pEntity$ = -4						; size = 4
_pentTouched$ = 8					; size = 4
_pentOther$ = 12					; size = 4
?DispatchTouch@@YAXPAUedict_s@@0@Z PROC			; DispatchTouch

; 255  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 256  : 	if ( gTouchDisabled )

	cmp	DWORD PTR ?gTouchDisabled@@3HA, 0	; gTouchDisabled
	je	SHORT $LN2@DispatchTo

; 257  : 		return;

	jmp	SHORT $LN1@DispatchTo
$LN2@DispatchTo:

; 258  : 
; 259  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pentTouched);

	mov	eax, DWORD PTR _pentTouched$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 260  : 	CBaseEntity *pOther = (CBaseEntity *)GET_PRIVATE( pentOther );

	mov	ecx, DWORD PTR _pentOther$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pOther$[ebp], eax

; 261  : 
; 262  : 	if ( pEntity && pOther && ! ((pEntity->pev->flags | pOther->pev->flags) & FL_KILLME) )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN1@DispatchTo
	cmp	DWORD PTR _pOther$[ebp], 0
	je	SHORT $LN1@DispatchTo
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _pOther$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax+420]
	or	eax, DWORD PTR [edx+420]
	and	eax, 1073741824				; 40000000H
	jne	SHORT $LN1@DispatchTo

; 263  : 		pEntity->Touch( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax+276]
	call	edx
$LN1@DispatchTo:

; 264  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchTouch@@YAXPAUedict_s@@0@Z ENDP			; DispatchTouch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pEntity$ = -4						; size = 4
_pentKeyvalue$ = 8					; size = 4
_pkvd$ = 12						; size = 4
?DispatchKeyValue@@YAXPAUedict_s@@PAUKeyValueData_s@@@Z PROC ; DispatchKeyValue

; 231  : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 232  : 	if ( !pkvd || !pentKeyvalue )

	cmp	DWORD PTR _pkvd$[ebp], 0
	je	SHORT $LN3@DispatchKe
	cmp	DWORD PTR _pentKeyvalue$[ebp], 0
	jne	SHORT $LN2@DispatchKe
$LN3@DispatchKe:

; 233  : 		return;

	jmp	SHORT $LN1@DispatchKe
$LN2@DispatchKe:

; 234  : 
; 235  : 	EntvarsKeyvalue( VARS(pentKeyvalue), pkvd );

	mov	eax, DWORD PTR _pkvd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pentKeyvalue$[ebp]
	push	ecx
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	push	eax
	call	?EntvarsKeyvalue@@YAXPAUentvars_s@@PAUKeyValueData_s@@@Z ; EntvarsKeyvalue
	add	esp, 8

; 236  : 
; 237  : 	// If the key was an entity variable, or there's no class set yet, don't look for the object, it may
; 238  : 	// not exist yet.
; 239  : 	if ( pkvd->fHandled || pkvd->szClassName == NULL )

	mov	edx, DWORD PTR _pkvd$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN5@DispatchKe
	mov	eax, DWORD PTR _pkvd$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@DispatchKe
$LN5@DispatchKe:

; 240  : 		return;

	jmp	SHORT $LN1@DispatchKe
$LN4@DispatchKe:

; 241  : 
; 242  : 	// Get the actualy entity object
; 243  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pentKeyvalue);

	mov	ecx, DWORD PTR _pentKeyvalue$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 244  : 
; 245  : 	if ( !pEntity )

	cmp	DWORD PTR _pEntity$[ebp], 0
	jne	SHORT $LN6@DispatchKe

; 246  : 		return;

	jmp	SHORT $LN1@DispatchKe
$LN6@DispatchKe:

; 247  : 
; 248  : 	pEntity->KeyValue( pkvd );

	mov	edx, DWORD PTR _pkvd$[ebp]
	push	edx
	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
$LN1@DispatchKe:

; 249  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchKeyValue@@YAXPAUedict_s@@PAUKeyValueData_s@@@Z ENDP ; DispatchKeyValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
$T1 = -56						; size = 12
$T2 = -44						; size = 12
$T3 = -32						; size = 12
$T4 = -20						; size = 12
_pGlobal$5 = -8						; size = 4
_pEntity$ = -4						; size = 4
_pent$ = 8						; size = 4
?DispatchSpawn@@YAHPAUedict_s@@@Z PROC			; DispatchSpawn

; 179  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H

; 180  : 	CBaseEntity *pEntity = (CBaseEntity *)GET_PRIVATE(pent);

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 181  : 
; 182  : 	if( pEntity )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	$LN8@DispatchSp

; 183  : 	{
; 184  : //		ALERT( at_aiconsole, "DispatchSpawn: %s\n", pEntity->GetClassname());
; 185  : 		// Initialize these or entities who don't link to the world won't have anything in here
; 186  : 		pEntity->pev->absmin = pEntity->GetAbsOrigin() - Vector( 1.0f, 1.0f, 1.0f );

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, 196				; 000000c4H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 187  : 		pEntity->pev->absmax = pEntity->GetAbsOrigin() + Vector( 1.0f, 1.0f, 1.0f );

	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	edx, DWORD PTR _pEntity$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	add	ecx, 208				; 000000d0H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 188  : 
; 189  : 		pEntity->Spawn();

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 190  : 
; 191  : 		// Try to get the pointer again, in case the spawn function deleted the entity.
; 192  : 		// UNDONE: Spawn() should really return a code to ask that the entity be deleted, but
; 193  : 		// that would touch too much code for me to do that right now.
; 194  : 		pEntity = (CBaseEntity *)GET_PRIVATE( pent );

	mov	ecx, DWORD PTR _pent$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _pEntity$[ebp], eax

; 195  : 
; 196  : 		if( pEntity )

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	SHORT $LN5@DispatchSp

; 197  : 		{
; 198  : 			if ( g_pGameRules && !g_pGameRules->IsAllowedToSpawn( pEntity ))

	cmp	DWORD PTR ?g_pGameRules@@3PAVCGameRules@@A, 0 ; g_pGameRules
	je	SHORT $LN4@DispatchSp
	mov	edx, DWORD PTR _pEntity$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pGameRules@@3PAVCGameRules@@A ; g_pGameRules
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR ?g_pGameRules@@3PAVCGameRules@@A ; g_pGameRules
	mov	eax, DWORD PTR [edx+8]
	call	eax
	test	eax, eax
	jne	SHORT $LN4@DispatchSp

; 199  : 				return -1; // return that this entity should be deleted

	or	eax, -1
	jmp	$LN1@DispatchSp
$LN4@DispatchSp:

; 200  : 			if ( pEntity->pev->flags & FL_KILLME )

	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+420]
	and	eax, 1073741824				; 40000000H
	je	SHORT $LN5@DispatchSp

; 201  : 				return -1;

	or	eax, -1
	jmp	$LN1@DispatchSp
$LN5@DispatchSp:

; 202  : 		}
; 203  : 
; 204  : 		// Handle global stuff here
; 205  : 		if ( pEntity && pEntity->pev->globalname ) 

	cmp	DWORD PTR _pEntity$[ebp], 0
	je	$LN8@DispatchSp
	mov	ecx, DWORD PTR _pEntity$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+4], 0
	je	$LN8@DispatchSp

; 206  : 		{
; 207  : 			const globalentity_t *pGlobal = gGlobalState.EntityFromTable( pEntity->pev->globalname );

	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, OFFSET ?gGlobalState@@3VCGlobalState@@A ; gGlobalState
	call	?EntityFromTable@CGlobalState@@QAEPBUglobalentity_s@@H@Z ; CGlobalState::EntityFromTable
	mov	DWORD PTR _pGlobal$5[ebp], eax

; 208  : 			if ( pGlobal )

	cmp	DWORD PTR _pGlobal$5[ebp], 0
	je	SHORT $LN7@DispatchSp

; 209  : 			{
; 210  : 				// Already dead? delete
; 211  : 				if ( pGlobal->state == GLOBAL_DEAD )

	mov	eax, DWORD PTR _pGlobal$5[ebp]
	cmp	DWORD PTR [eax+96], 2
	jne	SHORT $LN9@DispatchSp

; 212  : 					return -1;

	or	eax, -1
	jmp	SHORT $LN1@DispatchSp
	jmp	SHORT $LN11@DispatchSp
$LN9@DispatchSp:

; 213  : 				else if ( !FStrEq( STRING(gpGlobals->mapname), pGlobal->levelName ) )

	mov	ecx, DWORD PTR _pGlobal$5[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@DispatchSp

; 214  : 					pEntity->MakeDormant();	// Hasn't been moved to this level yet, wait but stay alive

	mov	ecx, DWORD PTR _pEntity$[ebp]
	call	?MakeDormant@CBaseEntity@@QAEXXZ	; CBaseEntity::MakeDormant
$LN11@DispatchSp:

; 215  : 				// In this level & not dead, continue on as normal
; 216  : 			}
; 217  : 			else

	jmp	SHORT $LN8@DispatchSp
$LN7@DispatchSp:

; 218  : 			{
; 219  : 				// Spawned entities default to 'On'
; 220  : 				gGlobalState.EntityAdd( pEntity->pev->globalname, gpGlobals->mapname, GLOBAL_ON );

	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	ecx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pEntity$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, OFFSET ?gGlobalState@@3VCGlobalState@@A ; gGlobalState
	call	?EntityAdd@CGlobalState@@QAEXHHW4GLOBALESTATE@@M@Z ; CGlobalState::EntityAdd
$LN8@DispatchSp:

; 221  : //				ALERT( at_console, "Added global entity %s (%s)\n", STRING(pEntity->pev->classname), STRING(pEntity->pev->globalname) );
; 222  : 			}
; 223  : 		}
; 224  : 
; 225  : 	}
; 226  : 
; 227  : 	return 0;

	xor	eax, eax
$LN1@DispatchSp:

; 228  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DispatchSpawn@@YAHPAUedict_s@@@Z ENDP			; DispatchSpawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pFunctionTable$ = 8					; size = 4
_interfaceVersion$ = 12					; size = 4
_GetNewDLLFunctions PROC

; 157  : {

	push	ebp
	mov	ebp, esp

; 158  : 	if( !pFunctionTable || *interfaceVersion != NEW_DLL_FUNCTIONS_VERSION )

	cmp	DWORD PTR _pFunctionTable$[ebp], 0
	je	SHORT $LN3@GetNewDLLF
	mov	eax, DWORD PTR _interfaceVersion$[ebp]
	cmp	DWORD PTR [eax], 1
	je	SHORT $LN2@GetNewDLLF
$LN3@GetNewDLLF:

; 159  : 	{
; 160  : 		*interfaceVersion = NEW_DLL_FUNCTIONS_VERSION;

	mov	ecx, DWORD PTR _interfaceVersion$[ebp]
	mov	DWORD PTR [ecx], 1

; 161  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@GetNewDLLF
$LN2@GetNewDLLF:

; 162  : 	}
; 163  : 
; 164  : 	if( !CVAR_GET_POINTER( "host_gameloaded" ) || g_iXashEngineBuildNumber < 4140 )

	push	OFFSET $SG75001
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+464
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GetNewDLLF
	cmp	DWORD PTR ?g_iXashEngineBuildNumber@@3HA, 4140 ; g_iXashEngineBuildNumber, 0000102cH
	jge	SHORT $LN4@GetNewDLLF
$LN5@GetNewDLLF:

; 165  : 	{
; 166  : 		// Tell engine what version we had, so it can figure out who is out of date.
; 167  : 		*interfaceVersion = NEW_DLL_FUNCTIONS_VERSION;

	mov	edx, DWORD PTR _interfaceVersion$[ebp]
	mov	DWORD PTR [edx], 1

; 168  : 		return FALSE; // not a Xash3D

	xor	eax, eax
	jmp	SHORT $LN1@GetNewDLLF
$LN4@GetNewDLLF:

; 169  : 	}
; 170  : 
; 171  : 	memcpy( pFunctionTable, &gNewDLLFunctions, sizeof( gNewDLLFunctions ));

	push	12					; 0000000cH
	push	OFFSET ?gNewDLLFunctions@@3UNEW_DLL_FUNCTIONS@@A ; gNewDLLFunctions
	mov	eax, DWORD PTR _pFunctionTable$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 172  : 	return TRUE;

	mov	eax, 1
$LN1@GetNewDLLF:

; 173  : }

	pop	ebp
	ret	0
_GetNewDLLFunctions ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pFunctionTable$ = 8					; size = 4
_interfaceVersion$ = 12					; size = 4
_GetEntityAPI2 PROC

; 137  : {

	push	ebp
	mov	ebp, esp

; 138  : 	if ( !pFunctionTable || *interfaceVersion != INTERFACE_VERSION )

	cmp	DWORD PTR _pFunctionTable$[ebp], 0
	je	SHORT $LN3@GetEntityA
	mov	eax, DWORD PTR _interfaceVersion$[ebp]
	cmp	DWORD PTR [eax], 140			; 0000008cH
	je	SHORT $LN2@GetEntityA
$LN3@GetEntityA:

; 139  : 	{
; 140  : 		// Tell engine what version we had, so it can figure out who is out of date.
; 141  : 		*interfaceVersion = INTERFACE_VERSION;

	mov	ecx, DWORD PTR _interfaceVersion$[ebp]
	mov	DWORD PTR [ecx], 140			; 0000008cH

; 142  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@GetEntityA
$LN2@GetEntityA:

; 143  : 	}
; 144  : 
; 145  : 	if( !CVAR_GET_POINTER( "host_gameloaded" ) || g_iXashEngineBuildNumber < 4140 )

	push	OFFSET $SG74992
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+464
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GetEntityA
	cmp	DWORD PTR ?g_iXashEngineBuildNumber@@3HA, 4140 ; g_iXashEngineBuildNumber, 0000102cH
	jge	SHORT $LN4@GetEntityA
$LN5@GetEntityA:

; 146  : 	{
; 147  : 		// Tell engine what version we had, so it can figure out who is out of date.
; 148  : 		*interfaceVersion = INTERFACE_VERSION;

	mov	edx, DWORD PTR _interfaceVersion$[ebp]
	mov	DWORD PTR [edx], 140			; 0000008cH

; 149  : 		return FALSE; // not a Xash3D

	xor	eax, eax
	jmp	SHORT $LN1@GetEntityA
$LN4@GetEntityA:

; 150  : 	}	
; 151  : 
; 152  : 	memcpy( pFunctionTable, &gFunctionTable, sizeof( DLL_FUNCTIONS ) );

	push	200					; 000000c8H
	push	OFFSET ?gFunctionTable@@3UDLL_FUNCTIONS@@A
	mov	eax, DWORD PTR _pFunctionTable$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 153  : 	return TRUE;

	mov	eax, 1
$LN1@GetEntityA:

; 154  : }

	pop	ebp
	ret	0
_GetEntityAPI2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\dll_int.cpp
_TEXT	SEGMENT
_pFunctionTable$ = 8					; size = 4
_interfaceVersion$ = 12					; size = 4
_GetEntityAPI PROC

; 123  : {

	push	ebp
	mov	ebp, esp

; 124  : 	if ( !pFunctionTable || interfaceVersion != INTERFACE_VERSION )

	cmp	DWORD PTR _pFunctionTable$[ebp], 0
	je	SHORT $LN3@GetEntityA
	cmp	DWORD PTR _interfaceVersion$[ebp], 140	; 0000008cH
	je	SHORT $LN2@GetEntityA
$LN3@GetEntityA:

; 125  : 	{
; 126  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@GetEntityA
$LN2@GetEntityA:

; 127  : 	}
; 128  : 
; 129  : 	if( !CVAR_GET_POINTER( "host_gameloaded" ) || g_iXashEngineBuildNumber < 4140 )

	push	OFFSET $SG74982
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+464
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GetEntityA
	cmp	DWORD PTR ?g_iXashEngineBuildNumber@@3HA, 4140 ; g_iXashEngineBuildNumber, 0000102cH
	jge	SHORT $LN4@GetEntityA
$LN5@GetEntityA:

; 130  : 		return FALSE; // not a Xash3D

	xor	eax, eax
	jmp	SHORT $LN1@GetEntityA
$LN4@GetEntityA:

; 131  : 
; 132  : 	memcpy( pFunctionTable, &gFunctionTable, sizeof( DLL_FUNCTIONS ) );

	push	200					; 000000c8H
	push	OFFSET ?gFunctionTable@@3UDLL_FUNCTIONS@@A
	mov	eax, DWORD PTR _pFunctionTable$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 133  : 	return TRUE;

	mov	eax, 1
$LN1@GetEntityA:

; 134  : }

	pop	ebp
	ret	0
_GetEntityAPI ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1CRestore@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CRestore@@QAE@XZ PROC				; CRestore::~CRestore, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSaveRestoreBuffer@@QAE@XZ		; CSaveRestoreBuffer::~CSaveRestoreBuffer
	mov	esp, ebp
	pop	ebp
	ret	0
??1CRestore@@QAE@XZ ENDP				; CRestore::~CRestore
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\saverestore.h
;	COMDAT ?PrecacheMode@CRestore@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_mode$ = 8						; size = 4
?PrecacheMode@CRestore@@QAEXH@Z PROC			; CRestore::PrecacheMode, COMDAT
; _this$ = ecx

; 104  : 	void	PrecacheMode( BOOL mode ) { m_precache = mode; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?PrecacheMode@CRestore@@QAEXH@Z ENDP			; CRestore::PrecacheMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\saverestore.h
;	COMDAT ?SetGlobalMode@CRestore@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_global$ = 8						; size = 4
?SetGlobalMode@CRestore@@QAEXH@Z PROC			; CRestore::SetGlobalMode, COMDAT
; _this$ = ecx

; 103  : 	inline	void SetGlobalMode( int global ) { m_global = global; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _global$[ebp]
	mov	DWORD PTR [eax+28], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGlobalMode@CRestore@@QAEXH@Z ENDP			; CRestore::SetGlobalMode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\saverestore.h
;	COMDAT ??0CRestore@@QAE@PAUsaverestore_s@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pdata$ = 8						; size = 4
??0CRestore@@QAE@PAUsaverestore_s@@@Z PROC		; CRestore::CRestore, COMDAT
; _this$ = ecx

; 90   : 	CRestore( SAVERESTOREDATA *pdata ) : CSaveRestoreBuffer( pdata ) { m_global = 0; m_precache = TRUE; modelOriginOffset = modelSpaceOffset = g_vecZero; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pdata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSaveRestoreBuffer@@QAE@PAUsaverestore_s@@@Z ; CSaveRestoreBuffer::CSaveRestoreBuffer
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?g_vecZero@@3VVector@@B
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?g_vecZero@@3VVector@@B+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR ?g_vecZero@@3VVector@@B+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CRestore@@QAE@PAUsaverestore_s@@@Z ENDP		; CRestore::CRestore
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1CSave@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CSave@@QAE@XZ PROC					; CSave::~CSave, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSaveRestoreBuffer@@QAE@XZ		; CSaveRestoreBuffer::~CSaveRestoreBuffer
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSave@@QAE@XZ ENDP					; CSave::~CSave
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\saverestore.h
;	COMDAT ??0CSave@@QAE@PAUsaverestore_s@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pdata$ = 8						; size = 4
??0CSave@@QAE@PAUsaverestore_s@@@Z PROC			; CSave::CSave, COMDAT
; _this$ = ecx

; 52   : 	CSave( SAVERESTOREDATA *pdata ) : CSaveRestoreBuffer( pdata ) {};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pdata$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CSaveRestoreBuffer@@QAE@PAUsaverestore_s@@@Z ; CSaveRestoreBuffer::CSaveRestoreBuffer
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CSave@@QAE@PAUsaverestore_s@@@Z ENDP			; CSave::CSave
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FClassnameIs@@YAHPAUentvars_s@@PBD@Z
_TEXT	SEGMENT
_pev$ = 8						; size = 4
_szClassname$ = 12					; size = 4
?FClassnameIs@@YAHPAUentvars_s@@PBD@Z PROC		; FClassnameIs, COMDAT

; 294  : {

	push	ebp
	mov	ebp, esp

; 295  : 	if( FNullEnt( pev )) return FALSE;

	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	call	?FNullEnt@@YAHPAUentvars_s@@@Z		; FNullEnt
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@FClassname
	xor	eax, eax
	jmp	SHORT $LN1@FClassname
$LN2@FClassname:

; 296  : 	return FStrEq( STRING( pev->classname ), szClassname );

	mov	ecx, DWORD PTR _szClassname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pev$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
$LN1@FClassname:

; 297  : }

	pop	ebp
	ret	0
?FClassnameIs@@YAHPAUentvars_s@@PBD@Z ENDP		; FClassnameIs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FStrEq@@YAHPBD0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
_sz1$ = 8						; size = 4
_sz2$ = 12						; size = 4
?FStrEq@@YAHPBD0@Z PROC					; FStrEq, COMDAT

; 286  : 	{ return (Q_strcmp( sz1, sz2 ) == 0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	push	99999					; 0001869fH
	mov	eax, DWORD PTR _sz2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sz1$[ebp]
	push	ecx
	call	?Q_strncmp@@YAHPBD0H@Z			; Q_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@FStrEq
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@FStrEq
$LN3@FStrEq:
	mov	DWORD PTR tv69[ebp], 0
$LN4@FStrEq:
	mov	eax, DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FStrEq@@YAHPBD0@Z ENDP					; FStrEq
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FNullEnt@@YAHPAUentvars_s@@@Z
_TEXT	SEGMENT
tv70 = -4						; size = 4
_pev$ = 8						; size = 4
?FNullEnt@@YAHPAUentvars_s@@@Z PROC			; FNullEnt, COMDAT

; 196  : inline BOOL FNullEnt(entvars_t* pev)				{ return pev == NULL || FNullEnt(OFFSET(pev)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	cmp	DWORD PTR _pev$[ebp], 0
	je	SHORT $LN3@FNullEnt
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	call	?OFFSET@@YAHPAUentvars_s@@@Z		; OFFSET
	add	esp, 4
	push	eax
	call	?FNullEnt@@YAHH@Z			; FNullEnt
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@FNullEnt
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@FNullEnt
$LN3@FNullEnt:
	mov	DWORD PTR tv70[ebp], 1
$LN4@FNullEnt:
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FNullEnt@@YAHPAUentvars_s@@@Z ENDP			; FNullEnt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FNullEnt@@YAHH@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_eoffset$ = 8						; size = 4
?FNullEnt@@YAHH@Z PROC					; FNullEnt, COMDAT

; 194  : inline BOOL FNullEnt(EOFFSET eoffset)			{ return eoffset == 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	cmp	DWORD PTR _eoffset$[ebp], 0
	jne	SHORT $LN3@FNullEnt
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@FNullEnt
$LN3@FNullEnt:
	mov	DWORD PTR tv65[ebp], 0
$LN4@FNullEnt:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FNullEnt@@YAHH@Z ENDP					; FNullEnt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?INDEXENT@@YAPAUedict_s@@H@Z
_TEXT	SEGMENT
_iEdictNum$ = 8						; size = 4
?INDEXENT@@YAPAUedict_s@@H@Z PROC			; INDEXENT, COMDAT

; 187  : inline edict_t* INDEXENT( int iEdictNum )		{ return (*g_engfuncs.pfnPEntityOfEntIndex)(iEdictNum); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _iEdictNum$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+288
	add	esp, 4
	pop	ebp
	ret	0
?INDEXENT@@YAPAUedict_s@@H@Z ENDP			; INDEXENT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z PROC		; VARS, COMDAT

; 178  : { 

	push	ebp
	mov	ebp, esp

; 179  : 	if ( !pent )

	cmp	DWORD PTR _pent$[ebp], 0
	jne	SHORT $LN2@VARS

; 180  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@VARS
$LN2@VARS:

; 181  : 
; 182  : 	return &pent->v; 

	mov	eax, DWORD PTR _pent$[ebp]
	add	eax, 128				; 00000080H
$LN1@VARS:

; 183  : }

	pop	ebp
	ret	0
?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z ENDP		; VARS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?OFFSET@@YAHPAUentvars_s@@@Z
_TEXT	SEGMENT
_pev$ = 8						; size = 4
?OFFSET@@YAHPAUentvars_s@@@Z PROC			; OFFSET, COMDAT

; 168  : { 

	push	ebp
	mov	ebp, esp

; 169  : #if _DEBUG
; 170  : 	if ( !pev )

	cmp	DWORD PTR _pev$[ebp], 0
	jne	SHORT $LN2@OFFSET

; 171  : 		ALERT( at_error, "Bad pev in OFFSET()\n" );

	push	OFFSET ??_C@_0BF@DOONGEFO@Bad?5pev?5in?5OFFSET?$CI?$CJ?6@
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 8
$LN2@OFFSET:

; 172  : #endif
; 173  : 	return OFFSET(ENT(pev)); 

	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	?OFFSET@@YAHPBUedict_s@@@Z		; OFFSET
	add	esp, 4

; 174  : }

	pop	ebp
	ret	0
?OFFSET@@YAHPAUentvars_s@@@Z ENDP			; OFFSET
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?OFFSET@@YAHPBUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?OFFSET@@YAHPBUedict_s@@@Z PROC				; OFFSET, COMDAT

; 160  : { 

	push	ebp
	mov	ebp, esp

; 161  : #if _DEBUG
; 162  : 	if ( !pent )

	cmp	DWORD PTR _pent$[ebp], 0
	jne	SHORT $LN2@OFFSET

; 163  : 		ALERT( at_error, "Bad ent in OFFSET()\n" );

	push	OFFSET ??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 8
$LN2@OFFSET:

; 164  : #endif
; 165  : 	return (*g_engfuncs.pfnEntOffsetOfPEntity)(pent); 

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+280
	add	esp, 4

; 166  : }

	pop	ebp
	ret	0
?OFFSET@@YAHPBUedict_s@@@Z ENDP				; OFFSET
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?ENT@@YAPAUedict_s@@H@Z
_TEXT	SEGMENT
_eoffset$ = 8						; size = 4
?ENT@@YAPAUedict_s@@H@Z PROC				; ENT, COMDAT

; 157  : inline edict_t *ENT(EOFFSET eoffset)			{ return (*g_engfuncs.pfnPEntityOfEntOffset)(eoffset); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _eoffset$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+276
	add	esp, 4
	pop	ebp
	ret	0
?ENT@@YAPAUedict_s@@H@Z ENDP				; ENT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z
_TEXT	SEGMENT
_pev$ = 8						; size = 4
?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z PROC		; ENT, COMDAT

; 151  : 	inline edict_t *ENT(const entvars_t *pev)	{ return DBG_EntOfVars(pev); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	call	?DBG_EntOfVars@@YAPAUedict_s@@PBUentvars_s@@@Z ; DBG_EntOfVars
	add	esp, 4
	pop	ebp
	ret	0
?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z ENDP		; ENT
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\enginecallback.h
;	COMDAT ?GET_PRIVATE@@YAPAXPAUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?GET_PRIVATE@@YAPAXPAUedict_s@@@Z PROC			; GET_PRIVATE, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp

; 102  : 	if ( pent )

	cmp	DWORD PTR _pent$[ebp], 0
	je	SHORT $LN2@GET_PRIVAT

; 103  : 		return pent->pvPrivateData;

	mov	eax, DWORD PTR _pent$[ebp]
	mov	eax, DWORD PTR [eax+124]
	jmp	SHORT $LN1@GET_PRIVAT
$LN2@GET_PRIVAT:

; 104  : 	return NULL;

	xor	eax, eax
$LN1@GET_PRIVAT:

; 105  : }

	pop	ebp
	ret	0
?GET_PRIVATE@@YAPAXPAUedict_s@@@Z ENDP			; GET_PRIVATE
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0entvars_s@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0entvars_s@@QAE@XZ PROC				; entvars_s::entvars_s, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 116				; 00000074H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 128				; 00000080H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 140				; 0000008cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 196				; 000000c4H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 208				; 000000d0H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 220				; 000000dcH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 232				; 000000e8H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 244				; 000000f4H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 336				; 00000150H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 372				; 00000174H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 612				; 00000264H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 624				; 00000270H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 636				; 0000027cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 648				; 00000288H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0entvars_s@@QAE@XZ ENDP				; entvars_s::entvars_s
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??DVector@@QBE?AV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_fl$ = 12						; size = 4
??DVector@@QBE?AV0@M@Z PROC				; Vector::operator*, COMDAT
; _this$ = ecx

; 150  : 	inline Vector operator*(float fl) const		{ return Vector(x*fl, y*fl, z*fl);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??DVector@@QBE?AV0@M@Z ENDP				; Vector::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??GVector@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GVector@@QBE?AV0@ABV0@@Z PROC				; Vector::operator-, COMDAT
; _this$ = ecx

; 147  : 	inline Vector operator-(const Vector& v) const	{ return Vector(x-v.x, y-v.y, z-v.z);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??GVector@@QBE?AV0@ABV0@@Z ENDP				; Vector::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??HVector@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HVector@@QBE?AV0@ABV0@@Z PROC				; Vector::operator+, COMDAT
; _this$ = ecx

; 146  : 	inline Vector operator+(const Vector& v) const	{ return Vector(x+v.x, y+v.y, z+v.z);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??HVector@@QBE?AV0@ABV0@@Z ENDP				; Vector::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??9Vector@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_v$ = 8							; size = 4
??9Vector@@QBEHABV0@@Z PROC				; Vector::operator!=, COMDAT
; _this$ = ecx

; 145  : 	inline int operator!=(const Vector& v) const	{ return !(*this==v);		   }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Vector@@QBEHABV0@@Z			; Vector::operator==
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9Vector@@QBEHABV0@@Z ENDP				; Vector::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??8Vector@@QBEHABV0@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??8Vector@@QBEHABV0@@Z PROC				; Vector::operator==, COMDAT
; _this$ = ecx

; 144  : 	inline int operator==(const Vector& v) const	{ return x==v.x && y==v.y && z==v.z;	   }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	ucomiss	xmm0, DWORD PTR [ecx]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	ucomiss	xmm0, DWORD PTR [eax+4]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	ucomiss	xmm0, DWORD PTR [edx+8]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv73[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??8Vector@@QBEHABV0@@Z ENDP				; Vector::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??0Vector@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
_Z$ = 16						; size = 4
??0Vector@@QAE@MMM@Z PROC				; Vector::Vector, COMDAT
; _this$ = ecx

; 132  : 	inline Vector(float X, float Y, float Z)	{ x = X; y = Y; z = Z;                     }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _X$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Z$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Vector@@QAE@MMM@Z ENDP				; Vector::Vector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??0Vector@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector@@QAE@XZ PROC					; Vector::Vector, COMDAT
; _this$ = ecx

; 131  : 	inline Vector(void)				{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector@@QAE@XZ ENDP					; Vector::Vector
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__G@YGXPAX0IIP6EPAX00@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___u$ = 12						; size = 4
___s$ = 16						; size = 4
___n$ = 20						; size = 4
___f$ = 24						; size = 4
??__G@YGXPAX0IIP6EPAX00@Z@Z PROC			; `vector copy constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN1@vector
	mov	edx, DWORD PTR ___u$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	mov	ecx, DWORD PTR ___u$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___u$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN1@vector:
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??__G@YGXPAX0IIP6EPAX00@Z@Z ENDP			; `vector copy constructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN1@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	edx, DWORD PTR ___t$[ebp]
	add	edx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], edx
	jmp	SHORT $LN2@vector
$LN1@vector:
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
