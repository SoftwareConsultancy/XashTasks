; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\USER\Downloads\XashXT_v0.81_rev.1_with_sources\XashXT_v0.81_rev.1_src\server\ropes\CElectrifiedWire.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A	; CElectrifiedWire::m_DataMap
CONST	SEGMENT
$SG74595 DB	'CElectrifiedWire', 00H
	ORG $+3
$SG74669 DB	'm_bIsActive', 00H
$SG74670 DB	'm_iTipSparkFrequency', 00H
	ORG $+3
$SG74671 DB	'm_iBodySparkFrequency', 00H
	ORG $+2
$SG74672 DB	'm_iLightningFrequency', 00H
	ORG $+2
$SG74673 DB	'm_iXJoltForce', 00H
	ORG $+2
$SG74674 DB	'm_iYJoltForce', 00H
	ORG $+2
$SG74675 DB	'm_iZJoltForce', 00H
	ORG $+2
$SG74676 DB	'm_iNumUninsulatedSegments', 00H
	ORG $+2
$SG74677 DB	'm_iUninsulatedSegments', 00H
	ORG $+1
$SG74678 DB	'm_flLastSparkTime', 00H
	ORG $+2
$SG74679 DB	'CElectrifiedWire', 00H
	ORG $+3
$SG74708 DB	'env_electrified_wire', 00H
	ORG $+3
$SG74725 DB	'sparkfrequency', 00H
	ORG $+1
$SG74728 DB	'bodysparkfrequency', 00H
	ORG $+1
$SG74731 DB	'lightningfrequency', 00H
	ORG $+1
$SG74734 DB	'xforce', 00H
	ORG $+1
$SG74737 DB	'yforce', 00H
	ORG $+1
$SG74740 DB	'zforce', 00H
	ORG $+1
$SG74745 DB	'sprites/lgtning.spr', 00H
$SG74900 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG74901 DB	'n', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'w', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H
	ORG $+2
$SG74944 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75070 DB	'0', 00H, 00H, 00H
$SG74945 DB	'(', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, '(', 00H, '&', 00H, 's', 00H, 'r', 00H, 'c', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'(', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, '(', 00H, '&', 00H, 's', 00H, 'r', 00H, 'c', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '(', 00H, 'B', 00H, 'a', 00H, 's'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, '+', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '(', 00H, ')'
	DB	00H, ')', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG75067 DB	'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG75076 DB	'0', 00H, 00H, 00H
$SG74946 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75080 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG74947 DB	'(', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, '(', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'I', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, '(', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ')'
	DB	00H, 00H, 00H
$SG75019 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75082 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG75020 DB	'I', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, '('
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ')', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, '(', 00H, ' ', 00H, 'm', 00H, '_'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, ')', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, '(', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'm', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, ')', 00H, 00H, 00H
	ORG $+4
$SG75066 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75069 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75075 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75079 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75081 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A DD 00H	; CElectrifiedWire::m_DataMap
	DD	00H
	DD	FLAT:$SG74595
	DD	00H
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??__G@YGXPAX0IIP6EPAX00@Z@Z			; `vector copy constructor iterator'
PUBLIC	??0Vector@@QAE@MMM@Z				; Vector::Vector
PUBLIC	??8Vector@@QBEHABV0@@Z				; Vector::operator==
PUBLIC	??9Vector@@QBEHABV0@@Z				; Vector::operator!=
PUBLIC	??HVector@@QBE?AV0@ABV0@@Z			; Vector::operator+
PUBLIC	??DVector@@QBE?AV0@M@Z				; Vector::operator*
PUBLIC	?MESSAGE_BEGIN@@YAXHHPBMPAUedict_s@@@Z		; MESSAGE_BEGIN
PUBLIC	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z		; GET_PRIVATE
PUBLIC	??0CDatadescGeneratedNameHolder@@QAE@PBD@Z	; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder
PUBLIC	??1CDatadescGeneratedNameHolder@@QAE@XZ		; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder
PUBLIC	??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >
PUBLIC	??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ	; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >
PUBLIC	??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[]
PUBLIC	?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::Element
PUBLIC	?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Base
PUBLIC	?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Count
PUBLIC	?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll
PUBLIC	?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Purge
PUBLIC	??0?$CUtlMemory@PADH@@QAE@HH@Z			; CUtlMemory<char *,int>::CUtlMemory<char *,int>
PUBLIC	??1?$CUtlMemory@PADH@@QAE@XZ			; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
PUBLIC	??A?$CUtlMemory@PADH@@QAEAAPADH@Z		; CUtlMemory<char *,int>::operator[]
PUBLIC	?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z		; CUtlMemory<char *,int>::IsIdxValid
PUBLIC	?Base@?$CUtlMemory@PADH@@QAEPAPADXZ		; CUtlMemory<char *,int>::Base
PUBLIC	?Purge@?$CUtlMemory@PADH@@QAEXXZ		; CUtlMemory<char *,int>::Purge
PUBLIC	?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ ; CUtlMemory<char *,int>::IsExternallyAllocated
PUBLIC	?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ		; CUtlMemory<char *,int>::IsReadOnly
PUBLIC	?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ	; CUtlMemory<char *,int>::ValidateGrowSize
PUBLIC	?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo
PUBLIC	??0IEntityFactory@@QAE@XZ			; IEntityFactory::IEntityFactory
PUBLIC	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z		; ENT
PUBLIC	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z		; VARS
PUBLIC	?ENTINDEX@@YAHPAUedict_s@@@Z			; ENTINDEX
PUBLIC	?FStrEq@@YAHPBD0@Z				; FStrEq
PUBLIC	?Get@EHANDLE@@QAEPAUedict_s@@XZ			; EHANDLE::Get
PUBLIC	??BEHANDLE@@QAEHXZ				; EHANDLE::operator int
PUBLIC	??CEHANDLE@@QAEPAVCBaseEntity@@XZ		; EHANDLE::operator->
PUBLIC	?SetClassname@CBaseEntity@@QAEXPBD@Z		; CBaseEntity::SetClassname
PUBLIC	?ObjectCaps@CBaseEntity@@UAEHXZ			; CBaseEntity::ObjectCaps
PUBLIC	?Activate@CBaseEntity@@UAEXXZ			; CBaseEntity::Activate
PUBLIC	?OnChangeLevel@CBaseEntity@@UAEXXZ		; CBaseEntity::OnChangeLevel
PUBLIC	?OnTeleport@CBaseEntity@@UAEXXZ			; CBaseEntity::OnTeleport
PUBLIC	?PortalSleep@CBaseEntity@@UAEXM@Z		; CBaseEntity::PortalSleep
PUBLIC	?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z ; CBaseEntity::StartMessage
PUBLIC	?GetPosition@CBaseEntity@@UAEMXZ		; CBaseEntity::GetPosition
PUBLIC	?OnChangeParent@CBaseEntity@@UAEXXZ		; CBaseEntity::OnChangeParent
PUBLIC	?OnClearParent@CBaseEntity@@UAEXXZ		; CBaseEntity::OnClearParent
PUBLIC	?OnRemove@CBaseEntity@@UAEXXZ			; CBaseEntity::OnRemove
PUBLIC	?Classify@CBaseEntity@@UAEHXZ			; CBaseEntity::Classify
PUBLIC	?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z	; CBaseEntity::DeathNotice
PUBLIC	?IsRigidBody@CBaseEntity@@UAEHXZ		; CBaseEntity::IsRigidBody
PUBLIC	?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z	; CBaseEntity::GetState
PUBLIC	?BloodColor@CBaseEntity@@UAEHXZ			; CBaseEntity::BloodColor
PUBLIC	?IsTriggered@CBaseEntity@@UAEHPAV1@@Z		; CBaseEntity::IsTriggered
PUBLIC	?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ ; CBaseEntity::MyMonsterPointer
PUBLIC	?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ ; CBaseEntity::MySquadMonsterPointer
PUBLIC	?GetToggleState@CBaseEntity@@UAEHXZ		; CBaseEntity::GetToggleState
PUBLIC	?AddPoints@CBaseEntity@@UAEXHH@Z		; CBaseEntity::AddPoints
PUBLIC	?AddPointsToTeam@CBaseEntity@@UAEXHH@Z		; CBaseEntity::AddPointsToTeam
PUBLIC	?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ; CBaseEntity::AddPlayerItem
PUBLIC	?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ; CBaseEntity::RemovePlayerItem
PUBLIC	?GiveAmmo@CBaseEntity@@UAEHHPADH@Z		; CBaseEntity::GiveAmmo
PUBLIC	?GetDelay@CBaseEntity@@UAEMXZ			; CBaseEntity::GetDelay
PUBLIC	?IsMoving@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMoving
PUBLIC	?OverrideReset@CBaseEntity@@UAEXXZ		; CBaseEntity::OverrideReset
PUBLIC	?TransferReset@CBaseEntity@@UAEXXZ		; CBaseEntity::TransferReset
PUBLIC	?SetToggleState@CBaseEntity@@UAEXH@Z		; CBaseEntity::SetToggleState
PUBLIC	?StartSneaking@CBaseEntity@@UAEXXZ		; CBaseEntity::StartSneaking
PUBLIC	?StopSneaking@CBaseEntity@@UAEXXZ		; CBaseEntity::StopSneaking
PUBLIC	?OnControls@CBaseEntity@@UAEHPAV1@@Z		; CBaseEntity::OnControls
PUBLIC	?IsSneaking@CBaseEntity@@UAEHXZ			; CBaseEntity::IsSneaking
PUBLIC	?IsAlive@CBaseEntity@@UAEHXZ			; CBaseEntity::IsAlive
PUBLIC	?IsBSPModel@CBaseEntity@@UAEHXZ			; CBaseEntity::IsBSPModel
PUBLIC	?IsCustomModel@CBaseEntity@@UAEHXZ		; CBaseEntity::IsCustomModel
PUBLIC	?ReflectGauss@CBaseEntity@@UAEHXZ		; CBaseEntity::ReflectGauss
PUBLIC	?HasTarget@CBaseEntity@@UAEHH@Z			; CBaseEntity::HasTarget
PUBLIC	?IsPlayer@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPlayer
PUBLIC	?IsNetClient@CBaseEntity@@UAEHXZ		; CBaseEntity::IsNetClient
PUBLIC	?IsMonster@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMonster
PUBLIC	?IsPushable@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPushable
PUBLIC	?IsProjectile@CBaseEntity@@UAEHXZ		; CBaseEntity::IsProjectile
PUBLIC	?IsFuncScreen@CBaseEntity@@UAEHXZ		; CBaseEntity::IsFuncScreen
PUBLIC	?IsPortal@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPortal
PUBLIC	?IsTank@CBaseEntity@@UAEHXZ			; CBaseEntity::IsTank
PUBLIC	?IsMover@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMover
PUBLIC	?IsBreakable@CBaseEntity@@UAEHXZ		; CBaseEntity::IsBreakable
PUBLIC	?TeamID@CBaseEntity@@UAEPBDXZ			; CBaseEntity::TeamID
PUBLIC	?Touch@CBaseEntity@@UAEXPAV1@@Z			; CBaseEntity::Touch
PUBLIC	?Blocked@CBaseEntity@@UAEXPAV1@@Z		; CBaseEntity::Blocked
PUBLIC	?MoveDone@CBaseEntity@@UAEXXZ			; CBaseEntity::MoveDone
PUBLIC	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z		; CBaseEntity::operator new
PUBLIC	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z		; CBaseEntity::operator delete
PUBLIC	?Respawn@CBaseEntity@@UAEPAV1@XZ		; CBaseEntity::Respawn
PUBLIC	?UpdateOwner@CBaseEntity@@UAEXXZ		; CBaseEntity::UpdateOwner
PUBLIC	?FBecomeProne@CBaseEntity@@UAEHXZ		; CBaseEntity::FBecomeProne
PUBLIC	?edict@CBaseEntity@@QAEPAUedict_s@@XZ		; CBaseEntity::edict
PUBLIC	?entindex@CBaseEntity@@QAEHXZ			; CBaseEntity::entindex
PUBLIC	?Center@CBaseEntity@@UAE?AVVector@@XZ		; CBaseEntity::Center
PUBLIC	?EyePosition@CBaseEntity@@UAE?AVVector@@XZ	; CBaseEntity::EyePosition
PUBLIC	?EarPosition@CBaseEntity@@UAE?AVVector@@XZ	; CBaseEntity::EarPosition
PUBLIC	?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z	; CBaseEntity::BodyTarget
PUBLIC	?IsPointSized@CBaseEntity@@UBEHXZ		; CBaseEntity::IsPointSized
PUBLIC	?Illumination@CBaseEntity@@UAEHXZ		; CBaseEntity::Illumination
PUBLIC	?GetState@CBaseDelay@@UAE?AW4STATE@@XZ		; CBaseDelay::GetState
PUBLIC	?GetNumSegments@CRope@@QBEHXZ			; CRope::GetNumSegments
PUBLIC	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ	; CRope::GetSegments
PUBLIC	?IsSimulateBones@CRope@@QAE_NXZ			; CRope::IsSimulateBones
PUBLIC	?SetSoundAllowed@CRope@@QAEX_N@Z		; CRope::SetSoundAllowed
PUBLIC	?GetBaseMap@CElectrifiedWire@@SAPAUdatamap_s@@XZ ; CElectrifiedWire::GetBaseMap
PUBLIC	?GetDataDescMap@CElectrifiedWire@@UAEPAUdatamap_s@@XZ ; CElectrifiedWire::GetDataDescMap
PUBLIC	??0CElectrifiedWire@@QAE@XZ			; CElectrifiedWire::CElectrifiedWire
PUBLIC	?KeyValue@CElectrifiedWire@@UAEXPAUKeyValueData_s@@@Z ; CElectrifiedWire::KeyValue
PUBLIC	?Precache@CElectrifiedWire@@UAEXXZ		; CElectrifiedWire::Precache
PUBLIC	?Spawn@CElectrifiedWire@@UAEXXZ			; CElectrifiedWire::Spawn
PUBLIC	?Think@CElectrifiedWire@@UAEXXZ			; CElectrifiedWire::Think
PUBLIC	?Use@CElectrifiedWire@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z ; CElectrifiedWire::Use
PUBLIC	?IsActive@CElectrifiedWire@@QBE_NXZ		; CElectrifiedWire::IsActive
PUBLIC	?ShouldDoEffect@CElectrifiedWire@@QAE_NH@Z	; CElectrifiedWire::ShouldDoEffect
PUBLIC	?DoSpark@CElectrifiedWire@@QAEXH_N@Z		; CElectrifiedWire::DoSpark
PUBLIC	?DoLightning@CElectrifiedWire@@QAEXXZ		; CElectrifiedWire::DoLightning
PUBLIC	??$DataMapAccess@VCRope@@@@YAXPAVCRope@@PAPAUdatamap_s@@@Z ; DataMapAccess<CRope>
PUBLIC	??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z ; DataMapInit<CElectrifiedWire>
PUBLIC	??0?$CEntityFactory@VCElectrifiedWire@@@@QAE@PBD@Z ; CEntityFactory<CElectrifiedWire>::CEntityFactory<CElectrifiedWire>
PUBLIC	?Create@?$CEntityFactory@VCElectrifiedWire@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z ; CEntityFactory<CElectrifiedWire>::Create
PUBLIC	?Destroy@?$CEntityFactory@VCElectrifiedWire@@@@UAEXPAVCBaseEntity@@@Z ; CEntityFactory<CElectrifiedWire>::Destroy
PUBLIC	?GetEntitySize@?$CEntityFactory@VCElectrifiedWire@@@@UAEIXZ ; CEntityFactory<CElectrifiedWire>::GetEntitySize
PUBLIC	??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z ; GetClassPtr<CElectrifiedWire>
PUBLIC	??$Destruct@PAD@@YAXPAPAD@Z			; Destruct<char *>
PUBLIC	??_7IEntityFactory@@6B@				; IEntityFactory::`vftable'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CElectrifiedWire@@6B@			; CElectrifiedWire::`vftable'
PUBLIC	?g_DataMapHolder@CElectrifiedWire_DataDescInit@@3PAUdatamap_s@@A ; CElectrifiedWire_DataDescInit::g_DataMapHolder
PUBLIC	??_7?$CEntityFactory@VCElectrifiedWire@@@@6B@	; CEntityFactory<CElectrifiedWire>::`vftable'
PUBLIC	??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@ ; `string'
PUBLIC	??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@ ; `string'
PUBLIC	??_R4IEntityFactory@@6B@			; IEntityFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIEntityFactory@@@8			; IEntityFactory `RTTI Type Descriptor'
PUBLIC	??_R3IEntityFactory@@8				; IEntityFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IEntityFactory@@8				; IEntityFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IEntityFactory@@8			; IEntityFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CElectrifiedWire@@6B@			; CElectrifiedWire::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCElectrifiedWire@@@8			; CElectrifiedWire `RTTI Type Descriptor'
PUBLIC	??_R3CElectrifiedWire@@8			; CElectrifiedWire::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CElectrifiedWire@@8			; CElectrifiedWire::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CElectrifiedWire@@8		; CElectrifiedWire::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CRope@@8				; CRope::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCRope@@@8				; CRope `RTTI Type Descriptor'
PUBLIC	??_R3CRope@@8					; CRope::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CRope@@8					; CRope::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseDelay@@8			; CBaseDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseDelay@@@8				; CBaseDelay `RTTI Type Descriptor'
PUBLIC	??_R3CBaseDelay@@8				; CBaseDelay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseDelay@@8				; CBaseDelay::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseEntity@@8			; CBaseEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBaseEntity@@@8				; CBaseEntity `RTTI Type Descriptor'
PUBLIC	??_R3CBaseEntity@@8				; CBaseEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseEntity@@8				; CBaseEntity::`RTTI Base Class Array'
PUBLIC	??_R4?$CEntityFactory@VCElectrifiedWire@@@@6B@	; CEntityFactory<CElectrifiedWire>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CEntityFactory@VCElectrifiedWire@@@@@8 ; CEntityFactory<CElectrifiedWire> `RTTI Type Descriptor'
PUBLIC	??_R3?$CEntityFactory@VCElectrifiedWire@@@@8	; CEntityFactory<CElectrifiedWire>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CEntityFactory@VCElectrifiedWire@@@@8	; CEntityFactory<CElectrifiedWire>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CEntityFactory@VCElectrifiedWire@@@@8 ; CEntityFactory<CElectrifiedWire>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fb999999999999a
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_atoi:PROC
EXTRN	?Q_strncmp@@YAHPBD0H@Z:PROC			; Q_strncmp
EXTRN	__wassert:PROC
EXTRN	?UTIL_Remove@@YAXPAVCBaseEntity@@@Z:PROC	; UTIL_Remove
EXTRN	?EntityFactoryDictionary@@YAPAVIEntityFactoryDictionary@@XZ:PROC ; EntityFactoryDictionary
EXTRN	?DBG_EntOfVars@@YAPAUedict_s@@PBUentvars_s@@@Z:PROC ; DBG_EntOfVars
EXTRN	?UTIL_Sparks@@YAXABVVector@@@Z:PROC		; UTIL_Sparks
EXTRN	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z:PROC	; UTIL_GetModelType
EXTRN	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetAbsOrigin
EXTRN	?GetAbsVelocity@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetAbsVelocity
EXTRN	?Save@CBaseEntity@@UAEHAAVCSave@@@Z:PROC	; CBaseEntity::Save
EXTRN	?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z:PROC	; CBaseEntity::Restore
EXTRN	?SetObjectCollisionBox@CBaseEntity@@UAEXXZ:PROC	; CBaseEntity::SetObjectCollisionBox
EXTRN	?SetNextThink@CBaseEntity@@UAEXM@Z:PROC		; CBaseEntity::SetNextThink
EXTRN	?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z:PROC ; CBaseEntity::TraceAttack
EXTRN	?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z:PROC ; CBaseEntity::TakeDamage
EXTRN	?TakeHealth@CBaseEntity@@UAEHMH@Z:PROC		; CBaseEntity::TakeHealth
EXTRN	?TakeArmor@CBaseEntity@@UAEHMH@Z:PROC		; CBaseEntity::TakeArmor
EXTRN	?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z:PROC	; CBaseEntity::Killed
EXTRN	?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z:PROC ; CBaseEntity::TraceBleed
EXTRN	?DamageDecal@CBaseEntity@@UAEHH@Z:PROC		; CBaseEntity::DamageDecal
EXTRN	?IsInWorld@CBaseEntity@@UAEHH@Z:PROC		; CBaseEntity::IsInWorld
EXTRN	?GetNextTarget@CBaseEntity@@UAEPAV1@XZ:PROC	; CBaseEntity::GetNextTarget
EXTRN	?FVisible@CBaseEntity@@UAEHPAV1@@Z:PROC		; CBaseEntity::FVisible
EXTRN	?FVisible@CBaseEntity@@UAEHABVVector@@@Z:PROC	; CBaseEntity::FVisible
EXTRN	?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z:PROC	; CBaseEntity::ShouldCollide
EXTRN	?SetCauseDamageOnTouch@CRopeSegment@@QAEX_N@Z:PROC ; CRopeSegment::SetCauseDamageOnTouch
EXTRN	??0CRope@@QAE@XZ:PROC				; CRope::CRope
EXTRN	?KeyValue@CRope@@UAEXPAUKeyValueData_s@@@Z:PROC	; CRope::KeyValue
EXTRN	?Precache@CRope@@UAEXXZ:PROC			; CRope::Precache
EXTRN	?Spawn@CRope@@UAEXXZ:PROC			; CRope::Spawn
EXTRN	?Think@CRope@@UAEXXZ:PROC			; CRope::Think
EXTRN	?ApplyForceToSegment@CRope@@QAEXABVVector@@H@Z:PROC ; CRope::ApplyForceToSegment
EXTRN	?IsValidSegmentIndex@CRope@@QBE_NH@Z:PROC	; CRope::IsValidSegmentIndex
EXTRN	?GetSegmentAttachmentPoint@CRope@@QBE?AVVector@@H@Z:PROC ; CRope::GetSegmentAttachmentPoint
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?g_vecZero@@3VVector@@B:BYTE			; g_vecZero
EXTRN	?g_engfuncs@@3Uenginefuncs_s@@A:BYTE		; g_engfuncs
EXTRN	?gpGlobals@@3PAUglobalvars_t@@A:DWORD		; gpGlobals
EXTRN	?m_DataMap@CRope@@2Udatamap_s@@A:BYTE		; CRope::m_DataMap
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
?g_DataMapHolder@CElectrifiedWire_DataDescInit@@3PAUdatamap_s@@A DD 01H DUP (?) ; CElectrifiedWire_DataDescInit::g_DataMapHolder
_BSS	ENDS
;	COMDAT ?nameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4VCDatadescGeneratedNameHolder@@A
_BSS	SEGMENT
?nameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4VCDatadescGeneratedNameHolder@@A DB 01cH DUP (?) ; `DataMapInit<CElectrifiedWire>'::`2'::nameHolder
_BSS	ENDS
;	COMDAT ?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA
_BSS	SEGMENT
?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',VCElectrifiedWire::taMapInit>
_BSS	ENDS
_BSS	SEGMENT
?env_electrified_wire@@3V?$CEntityFactory@VCElectrifiedWire@@@@A DD 01H DUP (?) ; env_electrified_wire
_BSS	ENDS
CRT$XCU	SEGMENT
?g_DataMapHolder$initializer$@CElectrifiedWire_DataDescInit@@3P6AXXZA DD FLAT:??__Eg_DataMapHolder@CElectrifiedWire_DataDescInit@@YAXXZ ; CElectrifiedWire_DataDescInit::g_DataMapHolder$initializer$
CRT$XCU	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CEntityFactory@VCElectrifiedWire@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CEntityFactory@VCElectrifiedWire@@@@8 DD FLAT:??_R0?AV?$CEntityFactory@VCElectrifiedWire@@@@@8 ; CEntityFactory<CElectrifiedWire>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CEntityFactory@VCElectrifiedWire@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CEntityFactory@VCElectrifiedWire@@@@8
rdata$r	SEGMENT
??_R2?$CEntityFactory@VCElectrifiedWire@@@@8 DD FLAT:??_R1A@?0A@EA@?$CEntityFactory@VCElectrifiedWire@@@@8 ; CEntityFactory<CElectrifiedWire>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CEntityFactory@VCElectrifiedWire@@@@8
rdata$r	SEGMENT
??_R3?$CEntityFactory@VCElectrifiedWire@@@@8 DD 00H	; CEntityFactory<CElectrifiedWire>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CEntityFactory@VCElectrifiedWire@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CEntityFactory@VCElectrifiedWire@@@@@8
data$r	SEGMENT
??_R0?AV?$CEntityFactory@VCElectrifiedWire@@@@@8 DD FLAT:??_7type_info@@6B@ ; CEntityFactory<CElectrifiedWire> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CEntityFactory@VCElectrifiedWire@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CEntityFactory@VCElectrifiedWire@@@@6B@
rdata$r	SEGMENT
??_R4?$CEntityFactory@VCElectrifiedWire@@@@6B@ DD 00H	; CEntityFactory<CElectrifiedWire>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CEntityFactory@VCElectrifiedWire@@@@@8
	DD	FLAT:??_R3?$CEntityFactory@VCElectrifiedWire@@@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseEntity@@8
rdata$r	SEGMENT
??_R2CBaseEntity@@8 DD FLAT:??_R1A@?0A@EA@CBaseEntity@@8 ; CBaseEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseEntity@@8
rdata$r	SEGMENT
??_R3CBaseEntity@@8 DD 00H				; CBaseEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseEntity@@@8
data$r	SEGMENT
??_R0?AVCBaseEntity@@@8 DD FLAT:??_7type_info@@6B@	; CBaseEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseEntity@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseEntity@@8 DD FLAT:??_R0?AVCBaseEntity@@@8 ; CBaseEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseDelay@@8
rdata$r	SEGMENT
??_R2CBaseDelay@@8 DD FLAT:??_R1A@?0A@EA@CBaseDelay@@8	; CBaseDelay::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseDelay@@8
rdata$r	SEGMENT
??_R3CBaseDelay@@8 DD 00H				; CBaseDelay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBaseDelay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseDelay@@@8
data$r	SEGMENT
??_R0?AVCBaseDelay@@@8 DD FLAT:??_7type_info@@6B@	; CBaseDelay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseDelay@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseDelay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseDelay@@8 DD FLAT:??_R0?AVCBaseDelay@@@8 ; CBaseDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseDelay@@8
rdata$r	ENDS
;	COMDAT ??_R2CRope@@8
rdata$r	SEGMENT
??_R2CRope@@8 DD FLAT:??_R1A@?0A@EA@CRope@@8		; CRope::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDelay@@8
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CRope@@8
rdata$r	SEGMENT
??_R3CRope@@8 DD 00H					; CRope::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CRope@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCRope@@@8
data$r	SEGMENT
??_R0?AVCRope@@@8 DD FLAT:??_7type_info@@6B@		; CRope `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCRope@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CRope@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CRope@@8 DD FLAT:??_R0?AVCRope@@@8	; CRope::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CRope@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CElectrifiedWire@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CElectrifiedWire@@8 DD FLAT:??_R0?AVCElectrifiedWire@@@8 ; CElectrifiedWire::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CElectrifiedWire@@8
rdata$r	ENDS
;	COMDAT ??_R2CElectrifiedWire@@8
rdata$r	SEGMENT
??_R2CElectrifiedWire@@8 DD FLAT:??_R1A@?0A@EA@CElectrifiedWire@@8 ; CElectrifiedWire::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CRope@@8
	DD	FLAT:??_R1A@?0A@EA@CBaseDelay@@8
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CElectrifiedWire@@8
rdata$r	SEGMENT
??_R3CElectrifiedWire@@8 DD 00H				; CElectrifiedWire::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CElectrifiedWire@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCElectrifiedWire@@@8
data$r	SEGMENT
??_R0?AVCElectrifiedWire@@@8 DD FLAT:??_7type_info@@6B@	; CElectrifiedWire `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCElectrifiedWire@@', 00H
data$r	ENDS
;	COMDAT ??_R4CElectrifiedWire@@6B@
rdata$r	SEGMENT
??_R4CElectrifiedWire@@6B@ DD 00H			; CElectrifiedWire::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCElectrifiedWire@@@8
	DD	FLAT:??_R3CElectrifiedWire@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IEntityFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IEntityFactory@@8 DD FLAT:??_R0?AVIEntityFactory@@@8 ; IEntityFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R2IEntityFactory@@8
rdata$r	SEGMENT
??_R2IEntityFactory@@8 DD FLAT:??_R1A@?0A@EA@IEntityFactory@@8 ; IEntityFactory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IEntityFactory@@8
rdata$r	SEGMENT
??_R3IEntityFactory@@8 DD 00H				; IEntityFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIEntityFactory@@@8
data$r	SEGMENT
??_R0?AVIEntityFactory@@@8 DD FLAT:??_7type_info@@6B@	; IEntityFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIEntityFactory@@', 00H
data$r	ENDS
;	COMDAT ??_R4IEntityFactory@@6B@
rdata$r	SEGMENT
??_R4IEntityFactory@@6B@ DD 00H				; IEntityFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIEntityFactory@@@8
	DD	FLAT:??_R3IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@
CONST	SEGMENT
??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@ DB 'I'
	DB	00H, 's', 00H, 'I', 00H, 'd', 00H, 'x', 00H, 'V', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'd', 00H, '(', 00H, 'i', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@ DB '!'
	DB	00H, 'I', 00H, 's', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'O', 00H, 'n', 00H, 'l', 00H, 'y', 00H, '(', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
CONST	SEGMENT
??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '\'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0', 00H
	DB	'.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'v'
	DB	00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H, 't', 00H
	DB	'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0', 00H, '.'
	DB	00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'v', 00H
	DB	'.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\'
	DB	00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H, 's', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\', 00H, 'u'
	DB	00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$CEntityFactory@VCElectrifiedWire@@@@6B@
CONST	SEGMENT
??_7?$CEntityFactory@VCElectrifiedWire@@@@6B@ DD FLAT:??_R4?$CEntityFactory@VCElectrifiedWire@@@@6B@ ; CEntityFactory<CElectrifiedWire>::`vftable'
	DD	FLAT:?Create@?$CEntityFactory@VCElectrifiedWire@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z
	DD	FLAT:?Destroy@?$CEntityFactory@VCElectrifiedWire@@@@UAEXPAVCBaseEntity@@@Z
	DD	FLAT:?GetEntitySize@?$CEntityFactory@VCElectrifiedWire@@@@UAEIXZ
CONST	ENDS
;	COMDAT ?dataDesc@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4PAUtypedescription_s@@A
_DATA	SEGMENT
?dataDesc@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4PAUtypedescription_s@@A DD 012H ; `DataMapInit<CElectrifiedWire>'::`2'::dataDesc
	DD	00H
	DD	00H
	DW	00H
	DW	00H
	DD	00H
	DD	00H
	DD	0cH
	DD	FLAT:$SG74669
	DD	07d0H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74670
	DD	07d4H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74671
	DD	07d8H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74672
	DD	07dcH
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74673
	DD	07e0H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74674
	DD	07e4H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74675
	DD	07e8H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74676
	DD	07ecH
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:$SG74677
	DD	07f0H
	DW	040H
	DW	02H
	DD	00H
	DD	00H
	DD	0fH
	DD	FLAT:$SG74678
	DD	08f4H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
_DATA	ENDS
;	COMDAT ??_7CElectrifiedWire@@6B@
CONST	SEGMENT
??_7CElectrifiedWire@@6B@ DD FLAT:??_R4CElectrifiedWire@@6B@ ; CElectrifiedWire::`vftable'
	DD	FLAT:?GetDataDescMap@CElectrifiedWire@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CElectrifiedWire@@UAEXXZ
	DD	FLAT:?Precache@CElectrifiedWire@@UAEXXZ
	DD	FLAT:?KeyValue@CElectrifiedWire@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CBaseEntity@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseDelay@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CElectrifiedWire@@UAEXXZ
	DD	FLAT:?Use@CElectrifiedWire@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7IEntityFactory@@6B@
CONST	SEGMENT
??_7IEntityFactory@@6B@ DD FLAT:??_R4IEntityFactory@@6B@ ; IEntityFactory::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z$0
__ehfuncinfo$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z$0
__ehfuncinfo$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CUtlMemory@PADH@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z$0
__ehfuncinfo$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDatadescGeneratedNameHolder@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
?env_electrified_wire$initializer$@@3P6AXXZA DD FLAT:??__Eenv_electrified_wire@@YAXXZ ; env_electrified_wire$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??$Destruct@PAD@@YAXPAPAD@Z
_TEXT	SEGMENT
_pMemory$ = 8						; size = 4
??$Destruct@PAD@@YAXPAPAD@Z PROC			; Destruct<char *>, COMDAT

; 49   : {

	push	ebp
	mov	ebp, esp

; 50   : 	pMemory->~T();
; 51   : 
; 52   : #ifdef _DEBUG
; 53   : 	memset( pMemory, 0xDD, sizeof(T) );

	push	4
	push	221					; 000000ddH
	mov	eax, DWORD PTR _pMemory$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 54   : #endif
; 55   : }

	pop	ebp
	ret	0
??$Destruct@PAD@@YAXPAPAD@Z ENDP			; Destruct<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv85 = -24						; size = 4
$T3 = -20						; size = 4
_pev$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_newEnt$ = 8						; size = 4
_className$ = 12					; size = 4
??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z PROC ; GetClassPtr<CElectrifiedWire>, COMDAT

; 1076 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1077 : 	entvars_t *pev = (entvars_t *)newEnt;

	mov	eax, DWORD PTR _newEnt$[ebp]
	mov	DWORD PTR _pev$[ebp], eax

; 1078 : 
; 1079 : 	// allocate entity if necessary
; 1080 : 	if (pev == NULL)

	cmp	DWORD PTR _pev$[ebp], 0
	jne	SHORT $LN2@GetClassPt

; 1081 : 		pev = VARS(CREATE_ENTITY());

	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+84
	push	eax
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	mov	DWORD PTR _pev$[ebp], eax
$LN2@GetClassPt:

; 1082 : 
; 1083 : 	// get the private data
; 1084 : 	newEnt = (T *)GET_PRIVATE(ENT(pev));

	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _newEnt$[ebp], eax

; 1085 : 
; 1086 : 	if (newEnt == NULL) 

	cmp	DWORD PTR _newEnt$[ebp], 0
	jne	SHORT $LN3@GetClassPt

; 1087 : 	{
; 1088 : 		// allocate private data 
; 1089 : 		newEnt = new(pev) T;

	mov	edx, DWORD PTR _pev$[ebp]
	push	edx
	push	2296					; 000008f8H
	call	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z	; CBaseEntity::operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@GetClassPt
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CElectrifiedWire@@QAE@XZ		; CElectrifiedWire::CElectrifiedWire
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN6@GetClassPt
$LN5@GetClassPt:
	mov	DWORD PTR tv85[ebp], 0
$LN6@GetClassPt:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newEnt$[ebp], ecx

; 1090 : 		newEnt->pev = pev;

	mov	edx, DWORD PTR _newEnt$[ebp]
	mov	eax, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@GetClassPt:

; 1091 : 	}
; 1092 : 	newEnt->SetClassname( className );

	mov	ecx, DWORD PTR _className$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newEnt$[ebp]
	call	?SetClassname@CBaseEntity@@QAEXPBD@Z	; CBaseEntity::SetClassname

; 1093 : 
; 1094 : 	return newEnt;

	mov	eax, DWORD PTR _newEnt$[ebp]

; 1095 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z$0:
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z	; CBaseEntity::operator delete
	add	esp, 8
	ret	0
__ehhandler$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z ENDP ; GetClassPtr<CElectrifiedWire>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
;	COMDAT ??__Eenv_electrified_wire@@YAXXZ
text$di	SEGMENT
??__Eenv_electrified_wire@@YAXXZ PROC			; `dynamic initializer for 'env_electrified_wire'', COMDAT

; 42   : LINK_ENTITY_TO_CLASS( env_electrified_wire, CElectrifiedWire );

	push	ebp
	mov	ebp, esp
	push	OFFSET $SG74708
	mov	ecx, OFFSET ?env_electrified_wire@@3V?$CEntityFactory@VCElectrifiedWire@@@@A
	call	??0?$CEntityFactory@VCElectrifiedWire@@@@QAE@PBD@Z ; CEntityFactory<CElectrifiedWire>::CEntityFactory<CElectrifiedWire>
	pop	ebp
	ret	0
??__Eenv_electrified_wire@@YAXXZ ENDP			; `dynamic initializer for 'env_electrified_wire''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?GetEntitySize@?$CEntityFactory@VCElectrifiedWire@@@@UAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEntitySize@?$CEntityFactory@VCElectrifiedWire@@@@UAEIXZ PROC ; CEntityFactory<CElectrifiedWire>::GetEntitySize, COMDAT
; _this$ = ecx

; 103  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 104  : 		return sizeof(T);

	mov	eax, 2296				; 000008f8H

; 105  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetEntitySize@?$CEntityFactory@VCElectrifiedWire@@@@UAEIXZ ENDP ; CEntityFactory<CElectrifiedWire>::GetEntitySize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?Destroy@?$CEntityFactory@VCElectrifiedWire@@@@UAEXPAVCBaseEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pEntity$ = 8						; size = 4
?Destroy@?$CEntityFactory@VCElectrifiedWire@@@@UAEXPAVCBaseEntity@@@Z PROC ; CEntityFactory<CElectrifiedWire>::Destroy, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 		UTIL_Remove( pEntity );

	mov	eax, DWORD PTR _pEntity$[ebp]
	push	eax
	call	?UTIL_Remove@@YAXPAVCBaseEntity@@@Z	; UTIL_Remove
	add	esp, 4

; 100  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Destroy@?$CEntityFactory@VCElectrifiedWire@@@@UAEXPAVCBaseEntity@@@Z ENDP ; CEntityFactory<CElectrifiedWire>::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?Create@?$CEntityFactory@VCElectrifiedWire@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pEnt$ = -4						; size = 4
_pClassName$ = 8					; size = 4
_pev$ = 12						; size = 4
?Create@?$CEntityFactory@VCElectrifiedWire@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z PROC ; CEntityFactory<CElectrifiedWire>::Create, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		T* pEnt = GetClassPtr((T*)pev, pClassName);

	mov	eax, DWORD PTR _pClassName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	??$GetClassPtr@VCElectrifiedWire@@@@YAPAVCElectrifiedWire@@PAV0@PBD@Z ; GetClassPtr<CElectrifiedWire>
	add	esp, 8
	mov	DWORD PTR _pEnt$[ebp], eax

; 94   : 		return pEnt;

	mov	eax, DWORD PTR _pEnt$[ebp]

; 95   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?Create@?$CEntityFactory@VCElectrifiedWire@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z ENDP ; CEntityFactory<CElectrifiedWire>::Create
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ??0?$CEntityFactory@VCElectrifiedWire@@@@QAE@PBD@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
_pClassName$ = 8					; size = 4
??0?$CEntityFactory@VCElectrifiedWire@@@@QAE@PBD@Z PROC	; CEntityFactory<CElectrifiedWire>::CEntityFactory<CElectrifiedWire>, COMDAT
; _this$ = ecx

; 86   : 	CEntityFactory( const char *pClassName )

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	{

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IEntityFactory@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CEntityFactory@VCElectrifiedWire@@@@6B@

; 88   : 		EntityFactoryDictionary()->InstallFactory( this, pClassName );

	call	?EntityFactoryDictionary@@YAPAVIEntityFactoryDictionary@@XZ ; EntityFactoryDictionary
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR _pClassName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax

; 89   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CEntityFactory@VCElectrifiedWire@@@@QAE@PBD@Z ENDP	; CEntityFactory<CElectrifiedWire>::CEntityFactory<CElectrifiedWire>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FnameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@YAXXZ
text$yd	SEGMENT
??__FnameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@YAXXZ PROC ; `DataMapInit<CElectrifiedWire>'::`2'::`dynamic atexit destructor for 'nameHolder'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?nameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4VCDatadescGeneratedNameHolder@@A
	call	??1CDatadescGeneratedNameHolder@@QAE@XZ	; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder
	pop	ebp
	ret	0
??__FnameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@YAXXZ ENDP ; `DataMapInit<CElectrifiedWire>'::`2'::`dynamic atexit destructor for 'nameHolder''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
;	COMDAT ??__Eg_DataMapHolder@CElectrifiedWire_DataDescInit@@YAXXZ
text$di	SEGMENT
??__Eg_DataMapHolder@CElectrifiedWire_DataDescInit@@YAXXZ PROC ; CElectrifiedWire_DataDescInit::`dynamic initializer for 'g_DataMapHolder'', COMDAT

; 23   : BEGIN_DATADESC( CElectrifiedWire )

	push	ebp
	mov	ebp, esp
	push	0
	call	??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z ; DataMapInit<CElectrifiedWire>
	add	esp, 4
	mov	DWORD PTR ?g_DataMapHolder@CElectrifiedWire_DataDescInit@@3PAUdatamap_s@@A, eax ; CElectrifiedWire_DataDescInit::g_DataMapHolder
	pop	ebp
	ret	0
??__Eg_DataMapHolder@CElectrifiedWire_DataDescInit@@YAXXZ ENDP ; CElectrifiedWire_DataDescInit::`dynamic initializer for 'g_DataMapHolder''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z PROC ; DataMapInit<CElectrifiedWire>

; 23   : BEGIN_DATADESC( CElectrifiedWire )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@DataMapIni
	push	OFFSET ?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA, -1
	jne	SHORT $LN2@DataMapIni
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET $SG74679
	mov	ecx, OFFSET ?nameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4VCDatadescGeneratedNameHolder@@A
	call	??0CDatadescGeneratedNameHolder@@QAE@PBD@Z ; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder
	push	OFFSET ??__FnameHolder@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@YAXXZ ; `DataMapInit<CElectrifiedWire>'::`2'::`dynamic atexit destructor for 'nameHolder''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA
	call	__Init_thread_footer
	add	esp, 4
$LN2@DataMapIni:
	call	?GetBaseMap@CElectrifiedWire@@SAPAUdatamap_s@@XZ ; CElectrifiedWire::GetBaseMap
	mov	DWORD PTR ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A+12, eax

; 24   : 	DEFINE_FIELD( m_bIsActive, FIELD_BOOLEAN ),
; 25   : 
; 26   : 	DEFINE_FIELD( m_iTipSparkFrequency, FIELD_INTEGER ),
; 27   : 	DEFINE_FIELD( m_iBodySparkFrequency, FIELD_INTEGER ),
; 28   : 	DEFINE_FIELD( m_iLightningFrequency, FIELD_INTEGER ),
; 29   : 	
; 30   : 	DEFINE_FIELD( m_iXJoltForce, FIELD_INTEGER ),
; 31   : 	DEFINE_FIELD( m_iYJoltForce, FIELD_INTEGER ),
; 32   : 	DEFINE_FIELD( m_iZJoltForce, FIELD_INTEGER ),
; 33   : 	
; 34   : 	DEFINE_FIELD( m_iNumUninsulatedSegments, FIELD_INTEGER ),
; 35   : 	DEFINE_ARRAY( m_iUninsulatedSegments, FIELD_INTEGER, MAX_SEGMENTS ),
; 36   : 	
; 37   : 	//DEFINE_FIELD( m_iLightningSprite, FIELD_INTEGER ), //Not restored, reset in Precache. - Solokiller
; 38   : 	
; 39   : 	DEFINE_FIELD( m_flLastSparkTime, FIELD_TIME ),
; 40   : END_DATADESC()

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@DataMapIni
	mov	DWORD PTR ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A+4, 10 ; 0000000aH
	mov	edx, 24					; 00000018H
	shl	edx, 0
	add	edx, OFFSET ?dataDesc@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4PAUtypedescription_s@@A
	mov	DWORD PTR ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A, edx
	jmp	SHORT $LN4@DataMapIni
$LN3@DataMapIni:
	mov	DWORD PTR ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A+4, 1
	mov	DWORD PTR ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A, OFFSET ?dataDesc@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4PAUtypedescription_s@@A
$LN4@DataMapIni:
	mov	eax, OFFSET ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A ; CElectrifiedWire::m_DataMap
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z$0:
	push	OFFSET ?$TSS0@?1???$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$DataMapInit@VCElectrifiedWire@@@@YAPAUdatamap_s@@PAVCElectrifiedWire@@@Z ENDP ; DataMapInit<CElectrifiedWire>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\common\datamap.h
;	COMDAT ??$DataMapAccess@VCRope@@@@YAXPAVCRope@@PAPAUdatamap_s@@@Z
_TEXT	SEGMENT
_ignored$ = 8						; size = 4
_p$ = 12						; size = 4
??$DataMapAccess@VCRope@@@@YAXPAVCRope@@PAPAUdatamap_s@@@Z PROC ; DataMapAccess<CRope>, COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp

; 183  : 	*p = &T::m_DataMap;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], OFFSET ?m_DataMap@CRope@@2Udatamap_s@@A ; CRope::m_DataMap

; 184  : }

	pop	ebp
	ret	0
??$DataMapAccess@VCRope@@@@YAXPAVCRope@@PAPAUdatamap_s@@@Z ENDP ; DataMapAccess<CRope>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_iSegment2$ = -24					; size = 4
_iSegment1$ = -20					; size = 4
_pSegment2$ = -16					; size = 4
_pSegment1$ = -12					; size = 4
_i$ = -8						; size = 4
_this$ = -4						; size = 4
?DoLightning@CElectrifiedWire@@QAEXXZ PROC		; CElectrifiedWire::DoLightning
; _this$ = ecx

; 221  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx

; 222  : 	const int iSegment1 = RANDOM_LONG( 0, GetNumSegments() - 1 );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSegments@CRope@@QBEHXZ		; CRope::GetNumSegments
	sub	eax, 1
	push	eax
	push	0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+360
	add	esp, 8
	mov	DWORD PTR _iSegment1$[ebp], eax

; 223  : 
; 224  : 	int iSegment2, i;
; 225  : 
; 226  : 	// Try to get a random segment.
; 227  : 	for( i = 0; i < 10; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@DoLightnin
$LN2@DoLightnin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@DoLightnin:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN3@DoLightnin

; 228  : 	{
; 229  : 		iSegment2 = RANDOM_LONG( 0, GetNumSegments() - 1 );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSegments@CRope@@QBEHXZ		; CRope::GetNumSegments
	sub	eax, 1
	push	eax
	push	0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+360
	add	esp, 8
	mov	DWORD PTR _iSegment2$[ebp], eax

; 230  : 
; 231  : 		if( iSegment2 != iSegment1 )

	mov	ecx, DWORD PTR _iSegment2$[ebp]
	cmp	ecx, DWORD PTR _iSegment1$[ebp]
	je	SHORT $LN5@DoLightnin

; 232  : 			break;

	jmp	SHORT $LN3@DoLightnin
$LN5@DoLightnin:

; 233  : 	}

	jmp	SHORT $LN2@DoLightnin
$LN3@DoLightnin:

; 234  : 
; 235  : 	if( i >= 10 ) return;

	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jl	SHORT $LN6@DoLightnin
	jmp	$LN1@DoLightnin
$LN6@DoLightnin:

; 236  : 
; 237  : 	CRopeSegment* pSegment1 = GetSegments()[iSegment1];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ; CRope::GetSegments
	mov	edx, DWORD PTR _iSegment1$[ebp]
	mov	eax, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _pSegment1$[ebp], eax

; 238  : 	CRopeSegment* pSegment2 = GetSegments()[iSegment2];

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ; CRope::GetSegments
	mov	ecx, DWORD PTR _iSegment2$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _pSegment2$[ebp], edx

; 239  : 
; 240  : 	MESSAGE_BEGIN( MSG_BROADCAST, SVC_TEMPENTITY );

	push	0
	push	0
	push	23					; 00000017H
	push	0
	call	?MESSAGE_BEGIN@@YAXHHPBMPAUedict_s@@@Z	; MESSAGE_BEGIN
	add	esp, 16					; 00000010H

; 241  : 
; 242  : 		if( IsSimulateBones( ))

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsSimulateBones@CRope@@QAE_NXZ		; CRope::IsSimulateBones
	movzx	eax, al
	test	eax, eax
	je	$LN7@DoLightnin

; 243  : 		{
; 244  : 			WRITE_BYTE( TE_BEAMPOINTS);

	push	0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 245  : 			WRITE_COORD( pSegment1->GetAbsOrigin().x);

	mov	ecx, DWORD PTR _pSegment1$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+212
	add	esp, 4

; 246  : 			WRITE_COORD( pSegment1->GetAbsOrigin().y);

	mov	ecx, DWORD PTR _pSegment1$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+212
	add	esp, 4

; 247  : 			WRITE_COORD( pSegment1->GetAbsOrigin().z);

	mov	ecx, DWORD PTR _pSegment1$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+212
	add	esp, 4

; 248  : 			WRITE_COORD( pSegment2->GetAbsOrigin().x);

	mov	ecx, DWORD PTR _pSegment2$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	push	ecx
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+212
	add	esp, 4

; 249  : 			WRITE_COORD( pSegment2->GetAbsOrigin().y);

	mov	ecx, DWORD PTR _pSegment2$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+212
	add	esp, 4

; 250  : 			WRITE_COORD( pSegment2->GetAbsOrigin().z);

	mov	ecx, DWORD PTR _pSegment2$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	push	ecx
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+212
	add	esp, 4

; 251  : 		}
; 252  : 		else

	jmp	SHORT $LN8@DoLightnin
$LN7@DoLightnin:

; 253  : 		{
; 254  : 			WRITE_BYTE( TE_BEAMENTS );

	push	8
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 255  : 			WRITE_SHORT( pSegment1->entindex() );

	mov	ecx, DWORD PTR _pSegment1$[ebp]
	call	?entindex@CBaseEntity@@QAEHXZ		; CBaseEntity::entindex
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+200
	add	esp, 4

; 256  : 			WRITE_SHORT( pSegment2->entindex() );

	mov	ecx, DWORD PTR _pSegment2$[ebp]
	call	?entindex@CBaseEntity@@QAEHXZ		; CBaseEntity::entindex
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+200
	add	esp, 4
$LN8@DoLightnin:

; 257  : 		}
; 258  : 		WRITE_SHORT( m_iLightningSprite );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+2288]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+200
	add	esp, 4

; 259  : 		WRITE_BYTE( 0 );

	push	0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 260  : 		WRITE_BYTE( 0 );

	push	0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 261  : 		WRITE_BYTE( 1 );

	push	1
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 262  : 		WRITE_BYTE( 10 );

	push	10					; 0000000aH
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 263  : 		WRITE_BYTE( 80 );

	push	80					; 00000050H
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 264  : 		WRITE_BYTE( 255 );

	push	255					; 000000ffH
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 265  : 		WRITE_BYTE( 255 );

	push	255					; 000000ffH
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 266  : 		WRITE_BYTE( 255 );

	push	255					; 000000ffH
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 267  : 		WRITE_BYTE( 255 );

	push	255					; 000000ffH
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 268  : 		WRITE_BYTE( 255 );

	push	255					; 000000ffH
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+192
	add	esp, 4

; 269  : 	MESSAGE_END();

	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+188
$LN1@DoLightnin:

; 270  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?DoLightning@CElectrifiedWire@@QAEXXZ ENDP		; CElectrifiedWire::DoLightning
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_vecSparkForce$1 = -28					; size = 12
_vecOrigin$ = -16					; size = 12
_this$ = -4						; size = 4
_iSegment$ = 8						; size = 4
_bExertForce$ = 12					; size = 1
?DoSpark@CElectrifiedWire@@QAEXH_N@Z PROC		; CElectrifiedWire::DoSpark
; _this$ = ecx

; 203  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 204  : 	const Vector vecOrigin = GetSegmentAttachmentPoint( iSegment );

	mov	eax, DWORD PTR _iSegment$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vecOrigin$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegmentAttachmentPoint@CRope@@QBE?AVVector@@H@Z ; CRope::GetSegmentAttachmentPoint

; 205  : 
; 206  : 	UTIL_Sparks( vecOrigin );

	lea	edx, DWORD PTR _vecOrigin$[ebp]
	push	edx
	call	?UTIL_Sparks@@YAXABVVector@@@Z		; UTIL_Sparks
	add	esp, 4

; 207  : 
; 208  : 	if( bExertForce )

	movzx	eax, BYTE PTR _bExertForce$[ebp]
	test	eax, eax
	je	$LN2@DoSpark

; 209  : 	{
; 210  : 		const Vector vecSparkForce(

	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+2024]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2024]
	neg	eax
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+364
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+2020]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2020]
	neg	eax
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+364
	add	esp, 4
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _this$[ebp]
	cvtsi2ss xmm0, DWORD PTR [ecx+2016]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2016]
	neg	eax
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+364
	add	esp, 4
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _vecSparkForce$1[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector

; 211  : 			RANDOM_FLOAT( -m_iXJoltForce, m_iXJoltForce ),
; 212  : 			RANDOM_FLOAT( -m_iYJoltForce, m_iYJoltForce ),
; 213  : 			RANDOM_FLOAT( -m_iZJoltForce, m_iZJoltForce )
; 214  : 		);
; 215  : 
; 216  : 		ApplyForceToSegment( vecSparkForce, iSegment );

	mov	ecx, DWORD PTR _iSegment$[ebp]
	push	ecx
	lea	edx, DWORD PTR _vecSparkForce$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ApplyForceToSegment@CRope@@QAEXABVVector@@H@Z ; CRope::ApplyForceToSegment
$LN2@DoSpark:

; 217  : 	}
; 218  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?DoSpark@CElectrifiedWire@@QAEXH_N@Z ENDP		; CElectrifiedWire::DoSpark
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv73 = -4						; size = 4
_iFrequency$ = 8					; size = 4
?ShouldDoEffect@CElectrifiedWire@@QAE_NH@Z PROC		; CElectrifiedWire::ShouldDoEffect
; _this$ = ecx

; 192  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 193  : 	if( iFrequency <= 0 )

	cmp	DWORD PTR _iFrequency$[ebp], 0
	jg	SHORT $LN2@ShouldDoEf

; 194  : 		return false;

	xor	al, al
	jmp	SHORT $LN1@ShouldDoEf
$LN2@ShouldDoEf:

; 195  : 
; 196  : 	if( !IsActive() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsActive@CElectrifiedWire@@QBE_NXZ	; CElectrifiedWire::IsActive
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@ShouldDoEf

; 197  : 		return false;

	xor	al, al
	jmp	SHORT $LN1@ShouldDoEf
$LN3@ShouldDoEf:

; 198  : 
; 199  : 	return RANDOM_LONG( 1, iFrequency ) == 1;

	mov	ecx, DWORD PTR _iFrequency$[ebp]
	push	ecx
	push	1
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+360
	add	esp, 8
	cmp	eax, 1
	jne	SHORT $LN5@ShouldDoEf
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN6@ShouldDoEf
$LN5@ShouldDoEf:
	mov	DWORD PTR tv73[ebp], 0
$LN6@ShouldDoEf:
	mov	al, BYTE PTR tv73[ebp]
$LN1@ShouldDoEf:

; 200  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?ShouldDoEffect@CElectrifiedWire@@QAE_NH@Z ENDP		; CElectrifiedWire::ShouldDoEffect
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.h
;	COMDAT ?IsActive@CElectrifiedWire@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsActive@CElectrifiedWire@@QBE_NXZ PROC		; CElectrifiedWire::IsActive, COMDAT
; _this$ = ecx

; 41   : 	bool IsActive() const { return m_bIsActive; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+2000]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsActive@CElectrifiedWire@@QBE_NXZ ENDP		; CElectrifiedWire::IsActive
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
tv68 = -12						; size = 4
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
_pCaller$ = 12						; size = 4
_useType$ = 16						; size = 4
_flValue$ = 20						; size = 4
?Use@CElectrifiedWire@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z PROC ; CElectrifiedWire::Use
; _this$ = ecx

; 174  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 	m_bIsActive = !m_bIsActive;

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2000]
	test	ecx, ecx
	jne	SHORT $LN8@Use
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN9@Use
$LN8@Use:
	mov	DWORD PTR tv68[ebp], 0
$LN9@Use:
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR tv68[ebp]
	mov	BYTE PTR [edx+2000], al

; 176  : 
; 177  : 	if( m_iNumUninsulatedSegments > 0 )

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+2028], 0
	jle	SHORT $LN5@Use

; 178  : 	{
; 179  : 		for( int i = 0; i < m_iNumUninsulatedSegments; i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@Use
$LN2@Use:
	mov	edx, DWORD PTR _i$1[ebp]
	add	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
$LN4@Use:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR [eax+2028]
	jge	SHORT $LN5@Use

; 180  : 		{
; 181  : 			GetSegments()[m_iUninsulatedSegments[i]]->SetCauseDamageOnTouch( m_bIsActive );

	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+2000]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ; CRope::GetSegments
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+2032]
	mov	ecx, DWORD PTR [eax+ecx*4]
	call	?SetCauseDamageOnTouch@CRopeSegment@@QAEX_N@Z ; CRopeSegment::SetCauseDamageOnTouch

; 182  : 		}

	jmp	SHORT $LN2@Use
$LN5@Use:

; 183  : 	}
; 184  : 
; 185  : 	if( m_iTipSparkFrequency > 0 )

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+2004], 0
	jle	SHORT $LN1@Use

; 186  : 	{
; 187  : 		GetSegments()[GetNumSegments() - 1]->SetCauseDamageOnTouch( m_bIsActive );

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2000]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ; CRope::GetSegments
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSegments@CRope@@QBEHXZ		; CRope::GetNumSegments
	mov	ecx, DWORD PTR [esi+eax*4-4]
	call	?SetCauseDamageOnTouch@CRopeSegment@@QAEX_N@Z ; CRopeSegment::SetCauseDamageOnTouch
$LN1@Use:

; 188  : 	}
; 189  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Use@CElectrifiedWire@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z ENDP ; CElectrifiedWire::Use
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?Think@CElectrifiedWire@@UAEXXZ PROC			; CElectrifiedWire::Think
; _this$ = ecx

; 145  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 146  : 	if( gpGlobals->time - m_flLastSparkTime > 0.1 )

	mov	eax, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	subss	xmm0, DWORD PTR [ecx+2292]
	cvtss2sd xmm0, xmm0
	comisd	xmm0, QWORD PTR __real@3fb999999999999a
	jbe	$LN9@Think

; 147  : 	{
; 148  : 		m_flLastSparkTime = gpGlobals->time;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+2292], ecx

; 149  : 
; 150  : 		if( m_iNumUninsulatedSegments > 0 )

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+2028], 0
	jle	SHORT $LN3@Think

; 151  : 		{
; 152  : 			for( int i = 0; i < m_iNumUninsulatedSegments; i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@Think
$LN2@Think:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@Think:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	edx, DWORD PTR [ecx+2028]
	jge	SHORT $LN3@Think

; 153  : 			{
; 154  : 				if( ShouldDoEffect( m_iBodySparkFrequency ))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+2008]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShouldDoEffect@CElectrifiedWire@@QAE_NH@Z ; CElectrifiedWire::ShouldDoEffect
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@Think

; 155  : 				{
; 156  : 					DoSpark( m_iUninsulatedSegments[i], false );

	push	0
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+2032]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSpark@CElectrifiedWire@@QAEXH_N@Z	; CElectrifiedWire::DoSpark
$LN7@Think:

; 157  : 				}
; 158  : 			}

	jmp	SHORT $LN2@Think
$LN3@Think:

; 159  : 		}
; 160  : 
; 161  : 		if( ShouldDoEffect( m_iTipSparkFrequency ) )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+2004]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShouldDoEffect@CElectrifiedWire@@QAE_NH@Z ; CElectrifiedWire::ShouldDoEffect
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN8@Think

; 162  : 		{
; 163  : 			DoSpark( GetNumSegments() - 1, true );

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSegments@CRope@@QBEHXZ		; CRope::GetNumSegments
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoSpark@CElectrifiedWire@@QAEXH_N@Z	; CElectrifiedWire::DoSpark
$LN8@Think:

; 164  : 		}
; 165  : 
; 166  : 		if( ShouldDoEffect( m_iLightningFrequency ) )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+2012]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShouldDoEffect@CElectrifiedWire@@QAE_NH@Z ; CElectrifiedWire::ShouldDoEffect
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@Think

; 167  : 			DoLightning();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLightning@CElectrifiedWire@@QAEXXZ	; CElectrifiedWire::DoLightning
$LN9@Think:

; 168  : 	}
; 169  : 
; 170  : 	BaseClass::Think();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Think@CRope@@UAEXXZ			; CRope::Think

; 171  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Think@CElectrifiedWire@@UAEXXZ ENDP			; CElectrifiedWire::Think
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_i$1 = -12						; size = 4
_i$2 = -8						; size = 4
_this$ = -4						; size = 4
?Spawn@CElectrifiedWire@@UAEXXZ PROC			; CElectrifiedWire::Spawn
; _this$ = ecx

; 106  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx

; 107  : 	if( !pev->dmg )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movss	xmm0, DWORD PTR [ecx+480]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN8@Spawn

; 108  : 		pev->dmg = 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+480], xmm0
$LN8@Spawn:

; 109  : 
; 110  : 	BaseClass::Spawn();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Spawn@CRope@@UAEXXZ			; CRope::Spawn

; 111  : 
; 112  : 	m_iNumUninsulatedSegments = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2028], 0

; 113  : 	m_bIsActive = true;

	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+2000], 1

; 114  : 
; 115  : 	if( m_iBodySparkFrequency > 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2008], 0
	jle	SHORT $LN3@Spawn

; 116  : 	{
; 117  : 		for( int i = 0; i < GetNumSegments(); i++ )

	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN4@Spawn
$LN2@Spawn:
	mov	ecx, DWORD PTR _i$2[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$2[ebp], ecx
$LN4@Spawn:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSegments@CRope@@QBEHXZ		; CRope::GetNumSegments
	cmp	DWORD PTR _i$2[ebp], eax
	jge	SHORT $LN3@Spawn

; 118  : 		{
; 119  : 			if( IsValidSegmentIndex( i ))

	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsValidSegmentIndex@CRope@@QBE_NH@Z	; CRope::IsValidSegmentIndex
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@Spawn

; 120  : 			{
; 121  : 				m_iUninsulatedSegments[m_iNumUninsulatedSegments++] = i;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+2028]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$2[ebp]
	mov	DWORD PTR [eax+edx*4+2032], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2028]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2028], eax
$LN10@Spawn:

; 122  : 			}
; 123  : 		}

	jmp	SHORT $LN2@Spawn
$LN3@Spawn:

; 124  : 	}
; 125  : 
; 126  : 	if( m_iNumUninsulatedSegments > 0 )

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+2028], 0
	jle	SHORT $LN6@Spawn

; 127  : 	{
; 128  : 		for( int i = 0; i < m_iNumUninsulatedSegments; i++ )

	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN7@Spawn
$LN5@Spawn:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN7@Spawn:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	edx, DWORD PTR [ecx+2028]
	jge	SHORT $LN6@Spawn

; 129  : 		{
; 130  : 			GetSegments()[i]->SetCauseDamageOnTouch( m_bIsActive );

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+2000]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ; CRope::GetSegments
	mov	edx, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	call	?SetCauseDamageOnTouch@CRopeSegment@@QAEX_N@Z ; CRopeSegment::SetCauseDamageOnTouch

; 131  : 		}

	jmp	SHORT $LN5@Spawn
$LN6@Spawn:

; 132  : 	}
; 133  : 
; 134  : 	if( m_iTipSparkFrequency > 0 )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+2004], 0
	jle	SHORT $LN12@Spawn

; 135  : 	{
; 136  : 		GetSegments()[GetNumSegments() - 1]->SetCauseDamageOnTouch( m_bIsActive );

	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+2000]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ; CRope::GetSegments
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNumSegments@CRope@@QBEHXZ		; CRope::GetNumSegments
	mov	ecx, DWORD PTR [esi+eax*4-4]
	call	?SetCauseDamageOnTouch@CRopeSegment@@QAEX_N@Z ; CRopeSegment::SetCauseDamageOnTouch
$LN12@Spawn:

; 137  : 	}
; 138  : 
; 139  : 	m_flLastSparkTime = gpGlobals->time;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?gpGlobals@@3PAUglobalvars_t@@A ; gpGlobals
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+2292], edx

; 140  : 
; 141  : 	SetSoundAllowed( false );

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetSoundAllowed@CRope@@QAEX_N@Z	; CRope::SetSoundAllowed

; 142  : }

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?Spawn@CElectrifiedWire@@UAEXXZ ENDP			; CElectrifiedWire::Spawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Precache@CElectrifiedWire@@UAEXXZ PROC			; CElectrifiedWire::Precache
; _this$ = ecx

; 99   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 100  : 	BaseClass::Precache();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Precache@CRope@@UAEXXZ			; CRope::Precache

; 101  : 
; 102  : 	m_iLightningSprite = PRECACHE_MODEL( "sprites/lgtning.spr" );

	push	OFFSET $SG74745
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2288], eax

; 103  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Precache@CElectrifiedWire@@UAEXXZ ENDP			; CElectrifiedWire::Precache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pkvd$ = 8						; size = 4
?KeyValue@CElectrifiedWire@@UAEXPAUKeyValueData_s@@@Z PROC ; CElectrifiedWire::KeyValue
; _this$ = ecx

; 57   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 58   : 	if( FStrEq( pkvd->szKeyName, "sparkfrequency" ))

	push	OFFSET $SG74725
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@KeyValue

; 59   : 	{
; 60   : 		m_iTipSparkFrequency = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2004], eax

; 61   : 
; 62   : 		pkvd->fHandled = true;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN2@KeyValue:

; 63   : 	}
; 64   : 	else if( FStrEq( pkvd->szKeyName, "bodysparkfrequency" ))

	push	OFFSET $SG74728
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@KeyValue

; 65   : 	{
; 66   : 		m_iBodySparkFrequency = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2008], eax

; 67   : 
; 68   : 		pkvd->fHandled = true;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN4@KeyValue:

; 69   : 	}
; 70   : 	else if( FStrEq( pkvd->szKeyName, "lightningfrequency" ))

	push	OFFSET $SG74731
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@KeyValue

; 71   : 	{
; 72   : 		m_iLightningFrequency = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2012], eax

; 73   : 
; 74   : 		pkvd->fHandled = true;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN6@KeyValue:

; 75   : 	}
; 76   : 	else if( FStrEq( pkvd->szKeyName, "xforce" ))

	push	OFFSET $SG74734
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@KeyValue

; 77   : 	{
; 78   : 		m_iXJoltForce = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2016], eax

; 79   : 
; 80   : 		pkvd->fHandled = true;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN8@KeyValue:

; 81   : 	}
; 82   : 	else if( FStrEq( pkvd->szKeyName, "yforce" ))

	push	OFFSET $SG74737
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@KeyValue

; 83   : 	{
; 84   : 		m_iYJoltForce = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2020], eax

; 85   : 
; 86   : 		pkvd->fHandled = true;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	SHORT $LN1@KeyValue
$LN10@KeyValue:

; 87   : 	}
; 88   : 	else if( FStrEq( pkvd->szKeyName, "zforce" ))

	push	OFFSET $SG74740
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@KeyValue

; 89   : 	{
; 90   : 		m_iZJoltForce = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2024], eax

; 91   : 
; 92   : 		pkvd->fHandled = true;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1

; 93   : 	}
; 94   : 	else

	jmp	SHORT $LN1@KeyValue
$LN12@KeyValue:

; 95   : 		BaseClass::KeyValue( pkvd );

	mov	eax, DWORD PTR _pkvd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?KeyValue@CRope@@UAEXPAUKeyValueData_s@@@Z ; CRope::KeyValue
$LN1@KeyValue:

; 96   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?KeyValue@CElectrifiedWire@@UAEXPAUKeyValueData_s@@@Z ENDP ; CElectrifiedWire::KeyValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CElectrifiedWire@@QAE@XZ PROC			; CElectrifiedWire::CElectrifiedWire
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CRope@@QAE@XZ			; CRope::CRope
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CElectrifiedWire@@6B@

; 45   : 	: m_bIsActive( true )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+2000], 1

; 46   : 	, m_iTipSparkFrequency( 3 )

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+2004], 3

; 47   : 	, m_iBodySparkFrequency( 100 )

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2008], 100		; 00000064H

; 48   : 	, m_iLightningFrequency( 150 )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2012], 150		; 00000096H

; 49   : 	, m_iXJoltForce( 0 )

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+2016], 0

; 50   : 	, m_iYJoltForce( 0 )

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+2020], 0

; 51   : 	, m_iZJoltForce( 0 )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+2024], 0

; 52   : 	, m_iNumUninsulatedSegments( 0 )

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+2028], 0

; 54   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CElectrifiedWire@@QAE@XZ ENDP			; CElectrifiedWire::CElectrifiedWire
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDataDescMap@CElectrifiedWire@@UAEPAUdatamap_s@@XZ PROC ; CElectrifiedWire::GetDataDescMap
; _this$ = ecx

; 23   : BEGIN_DATADESC( CElectrifiedWire )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ?m_DataMap@CElectrifiedWire@@2Udatamap_s@@A ; CElectrifiedWire::m_DataMap
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDataDescMap@CElectrifiedWire@@UAEPAUdatamap_s@@XZ ENDP ; CElectrifiedWire::GetDataDescMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\celectrifiedwire.cpp
_TEXT	SEGMENT
_pResult$ = -4						; size = 4
?GetBaseMap@CElectrifiedWire@@SAPAUdatamap_s@@XZ PROC	; CElectrifiedWire::GetBaseMap

; 23   : BEGIN_DATADESC( CElectrifiedWire )

	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR _pResult$[ebp]
	push	eax
	push	0
	call	??$DataMapAccess@VCRope@@@@YAXPAVCRope@@PAPAUdatamap_s@@@Z ; DataMapAccess<CRope>
	add	esp, 8
	mov	eax, DWORD PTR _pResult$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseMap@CElectrifiedWire@@SAPAUdatamap_s@@XZ ENDP	; CElectrifiedWire::GetBaseMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\crope.h
;	COMDAT ?SetSoundAllowed@CRope@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bAllowed$ = 8						; size = 1
?SetSoundAllowed@CRope@@QAEX_N@Z PROC			; CRope::SetSoundAllowed, COMDAT
; _this$ = ecx

; 66   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 67   : 		m_bMakeSound = bAllowed;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bAllowed$[ebp]
	mov	BYTE PTR [eax+1997], cl

; 68   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?SetSoundAllowed@CRope@@QAEX_N@Z ENDP			; CRope::SetSoundAllowed
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\crope.h
;	COMDAT ?IsSimulateBones@CRope@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSimulateBones@CRope@@QAE_NXZ PROC			; CRope::IsSimulateBones, COMDAT
; _this$ = ecx

; 63   : 	bool IsSimulateBones() { return m_bSimulateBones; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+1996]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSimulateBones@CRope@@QAE_NXZ ENDP			; CRope::IsSimulateBones
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\crope.h
;	COMDAT ?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ PROC	; CRope::GetSegments, COMDAT
; _this$ = ecx

; 62   : 	CRopeSegment** GetSegments() { return m_pSegments; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1712				; 000006b0H
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSegments@CRope@@QAEPAPAVCRopeSegment@@XZ ENDP	; CRope::GetSegments
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ropes\crope.h
;	COMDAT ?GetNumSegments@CRope@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNumSegments@CRope@@QBEHXZ PROC			; CRope::GetNumSegments, COMDAT
; _this$ = ecx

; 61   : 	int GetNumSegments() const { return m_iSegments; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1680]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetNumSegments@CRope@@QBEHXZ ENDP			; CRope::GetNumSegments
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseDelay@@UAE?AW4STATE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CBaseDelay@@UAE?AW4STATE@@XZ PROC		; CBaseDelay::GetState, COMDAT
; _this$ = ecx

; 867  : 	virtual STATE GetState( void ) { return m_iState; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1676]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@CBaseDelay@@UAE?AW4STATE@@XZ ENDP		; CBaseDelay::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Illumination@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Illumination@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::Illumination, COMDAT
; _this$ = ecx

; 706  : 	virtual int Illumination( ) { return GETENTITYILLUM( ENT( pev ) ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+60
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?Illumination@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::Illumination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPointSized@CBaseEntity@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -1						; size = 1
?IsPointSized@CBaseEntity@@UBEHXZ PROC			; CBaseEntity::IsPointSized, COMDAT
; _this$ = ecx

; 704  : 	virtual BOOL IsPointSized() const { return (pev->size == g_vecZero) ? true : false; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?g_vecZero@@3VVector@@B		; g_vecZero
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 244				; 000000f4H
	call	??8Vector@@QBEHABV0@@Z			; Vector::operator==
	test	eax, eax
	je	SHORT $LN3@IsPointSiz
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsPointSiz
$LN3@IsPointSiz:
	mov	BYTE PTR tv70[ebp], 0
$LN4@IsPointSiz:
	movzx	eax, BYTE PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPointSized@CBaseEntity@@UBEHXZ ENDP			; CBaseEntity::IsPointSized
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_posSrc$ = 12						; size = 4
?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z PROC	; CBaseEntity::BodyTarget, COMDAT
; _this$ = ecx

; 703  : 	virtual Vector BodyTarget( const Vector &posSrc ) { return Center( ); };		// position to shoot at

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+300]
	call	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z ENDP	; CBaseEntity::BodyTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EarPosition@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::EarPosition, COMDAT
; _this$ = ecx

; 702  : 	virtual Vector EarPosition( ) { return GetAbsOrigin() + pev->view_ofs; };			// position of ears

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EarPosition@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::EarPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EyePosition@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::EyePosition, COMDAT
; _this$ = ecx

; 701  : 	virtual Vector EyePosition( ) { return GetAbsOrigin() + pev->view_ofs; };			// position of eyes

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EyePosition@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::EyePosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Center@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Center@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::Center, COMDAT
; _this$ = ecx

; 700  : 	virtual Vector Center( ) { return (pev->absmax + pev->absmin) * 0.5; }; // center point of entity

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 196				; 000000c4H
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 208				; 000000d0H
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	ecx, eax
	call	??DVector@@QBE?AV0@M@Z			; Vector::operator*
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Center@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::Center
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?entindex@CBaseEntity@@QAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?entindex@CBaseEntity@@QAEHXZ PROC			; CBaseEntity::entindex, COMDAT
; _this$ = ecx

; 698  : 	int entindex( ) { return ENTINDEX( edict() ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?edict@CBaseEntity@@QAEPAUedict_s@@XZ	; CBaseEntity::edict
	push	eax
	call	?ENTINDEX@@YAHPAUedict_s@@@Z		; ENTINDEX
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?entindex@CBaseEntity@@QAEHXZ ENDP			; CBaseEntity::entindex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?edict@CBaseEntity@@QAEPAUedict_s@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?edict@CBaseEntity@@QAEPAUedict_s@@XZ PROC		; CBaseEntity::edict, COMDAT
; _this$ = ecx

; 696  : 	edict_t *edict() { return ENT( pev ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?edict@CBaseEntity@@QAEPAUedict_s@@XZ ENDP		; CBaseEntity::edict
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?FBecomeProne@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FBecomeProne@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::FBecomeProne, COMDAT
; _this$ = ecx

; 695  : 	virtual BOOL FBecomeProne( void ) {return FALSE;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?FBecomeProne@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::FBecomeProne
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?UpdateOwner@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateOwner@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::UpdateOwner, COMDAT
; _this$ = ecx

; 691  : 	virtual	void UpdateOwner( void ) { return; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateOwner@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::UpdateOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Respawn@CBaseEntity@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Respawn@CBaseEntity@@UAEPAV1@XZ PROC			; CBaseEntity::Respawn, COMDAT
; _this$ = ecx

; 499  : 	virtual CBaseEntity *Respawn( void ) { return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Respawn@CBaseEntity@@UAEPAV1@XZ ENDP			; CBaseEntity::Respawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z
_TEXT	SEGMENT
_pMem$ = 8						; size = 4
_pev$ = 12						; size = 4
??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z PROC		; CBaseEntity::operator delete, COMDAT

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		pev->flags |= FL_KILLME;

	mov	eax, DWORD PTR _pev$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	or	ecx, 1073741824				; 40000000H
	mov	edx, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+420], ecx

; 484  : 	};

	pop	ebp
	ret	0
??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z ENDP		; CBaseEntity::operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z
_TEXT	SEGMENT
_stAllocateBlock$ = 8					; size = 4
_pev$ = 12						; size = 4
??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z PROC		; CBaseEntity::operator new, COMDAT

; 475  : 	{

	push	ebp
	mov	ebp, esp

; 476  : 		return (void *)ALLOC_PRIVATE(ENT(pev), stAllocateBlock);

	mov	eax, DWORD PTR _stAllocateBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+252
	add	esp, 8

; 477  : 	};

	pop	ebp
	ret	0
??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z ENDP		; CBaseEntity::operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MoveDone@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MoveDone@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::MoveDone, COMDAT
; _this$ = ecx

; 471  : 	virtual void MoveDone( void ) { if( m_pfnMoveDone )(this->*m_pfnMoveDone)(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1648], 0
	je	SHORT $LN1@MoveDone
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1648]
	call	eax
$LN1@MoveDone:
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveDone@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::MoveDone
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Blocked@CBaseEntity@@UAEXPAV1@@Z
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?Blocked@CBaseEntity@@UAEXPAV1@@Z PROC			; CBaseEntity::Blocked, COMDAT
; _this$ = ecx

; 462  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 		if( m_pfnBlocked )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1644], 0
	je	SHORT $LN2@Blocked

; 464  : 			(this->*m_pfnBlocked)( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1644]
	call	eax
$LN2@Blocked:

; 465  : 
; 466  : 		// forward the blocked event to our parent, if any.
; 467  : 		if( m_hParent != NULL )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??BEHANDLE@@QAEHXZ			; EHANDLE::operator int
	test	eax, eax
	je	SHORT $LN1@Blocked

; 468  : 			m_hParent->Blocked( pOther );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??CEHANDLE@@QAEPAVCBaseEntity@@XZ	; EHANDLE::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+280]
	call	edx
$LN1@Blocked:

; 469  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Blocked@CBaseEntity@@UAEXPAV1@@Z ENDP			; CBaseEntity::Blocked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Touch@CBaseEntity@@UAEXPAV1@@Z
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?Touch@CBaseEntity@@UAEXPAV1@@Z PROC			; CBaseEntity::Touch, COMDAT
; _this$ = ecx

; 452  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 453  : 		if( m_pfnTouch )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1636], 0
	je	SHORT $LN2@Touch

; 454  : 			(this->*m_pfnTouch)( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1636]
	call	eax
$LN2@Touch:

; 455  : 
; 456  : 		// forward the blocked event to our parent, if any.
; 457  : 		if( m_hParent != NULL )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??BEHANDLE@@QAEHXZ			; EHANDLE::operator int
	test	eax, eax
	je	SHORT $LN1@Touch

; 458  : 			m_hParent->Touch( pOther );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??CEHANDLE@@QAEPAVCBaseEntity@@XZ	; EHANDLE::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+276]
	call	edx
$LN1@Touch:

; 459  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Touch@CBaseEntity@@UAEXPAV1@@Z ENDP			; CBaseEntity::Touch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?TeamID@CBaseEntity@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TeamID@CBaseEntity@@UAEPBDXZ PROC			; CBaseEntity::TeamID, COMDAT
; _this$ = ecx

; 433  : 	virtual const char	*TeamID( void ) { return ""; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_00CNPNBAHC@@
	mov	esp, ebp
	pop	ebp
	ret	0
?TeamID@CBaseEntity@@UAEPBDXZ ENDP			; CBaseEntity::TeamID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsBreakable@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBreakable@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsBreakable, COMDAT
; _this$ = ecx

; 432  : 	virtual BOOL	IsBreakable( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBreakable@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsBreakable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMover@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMover@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMover, COMDAT
; _this$ = ecx

; 431  : 	virtual BOOL	IsMover( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMover@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMover
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsTank@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTank@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsTank, COMDAT
; _this$ = ecx

; 430  : 	virtual BOOL	IsTank( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTank@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsTank
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPortal@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPortal@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPortal, COMDAT
; _this$ = ecx

; 429  : 	virtual BOOL	IsPortal( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPortal@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPortal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsFuncScreen@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFuncScreen@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsFuncScreen, COMDAT
; _this$ = ecx

; 428  : 	virtual BOOL	IsFuncScreen( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFuncScreen@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsFuncScreen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsProjectile@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsProjectile@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsProjectile, COMDAT
; _this$ = ecx

; 427  : 	virtual BOOL	IsProjectile( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsProjectile@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsProjectile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPushable@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPushable@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPushable, COMDAT
; _this$ = ecx

; 426  : 	virtual BOOL	IsPushable( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPushable@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPushable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMonster@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?IsMonster@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMonster, COMDAT
; _this$ = ecx

; 425  : 	virtual BOOL	IsMonster( void ) { return (pev->flags & FL_MONSTER ? TRUE : FALSE); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+420]
	and	edx, 32					; 00000020H
	je	SHORT $LN3@IsMonster
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsMonster
$LN3@IsMonster:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsMonster:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMonster@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMonster
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsNetClient@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsNetClient@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsNetClient, COMDAT
; _this$ = ecx

; 424  : 	virtual BOOL	IsNetClient( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsNetClient@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsNetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPlayer@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPlayer@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPlayer, COMDAT
; _this$ = ecx

; 423  : 	virtual BOOL	IsPlayer( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPlayer@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?HasTarget@CBaseEntity@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_targetname$ = 8					; size = 4
?HasTarget@CBaseEntity@@UAEHH@Z PROC			; CBaseEntity::HasTarget, COMDAT
; _this$ = ecx

; 421  : 	virtual BOOL	HasTarget( string_t targetname ) { return FStrEq(STRING(targetname), STRING(pev->targetname) ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+460]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _targetname$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	4
?HasTarget@CBaseEntity@@UAEHH@Z ENDP			; CBaseEntity::HasTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ReflectGauss@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
?ReflectGauss@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::ReflectGauss, COMDAT
; _this$ = ecx

; 420  : 	virtual BOOL	ReflectGauss( void ) { return (( IsBSPModel() || IsCustomModel()) && !pev->takedamage ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	call	eax
	test	eax, eax
	jne	SHORT $LN3@ReflectGau
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	call	eax
	test	eax, eax
	je	SHORT $LN4@ReflectGau
$LN3@ReflectGau:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movss	xmm0, DWORD PTR [edx+364]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@ReflectGau
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN5@ReflectGau
$LN4@ReflectGau:
	mov	DWORD PTR tv77[ebp], 0
$LN5@ReflectGau:
	mov	eax, DWORD PTR tv77[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ReflectGauss@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::ReflectGauss
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsCustomModel@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsCustomModel@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsCustomModel, COMDAT
; _this$ = ecx

; 419  : 	virtual BOOL	IsCustomModel( void ) { return pev->solid == SOLID_CUSTOM; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+268], 5
	jne	SHORT $LN3@IsCustomMo
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsCustomMo
$LN3@IsCustomMo:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsCustomMo:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCustomModel@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsCustomModel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsBSPModel@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
?IsBSPModel@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsBSPModel, COMDAT
; _this$ = ecx

; 418  : 	virtual BOOL	IsBSPModel( void ) { return UTIL_GetModelType( pev->modelindex ) == mod_brush; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+180]
	push	edx
	call	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z ; UTIL_GetModelType
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@IsBSPModel
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@IsBSPModel
$LN3@IsBSPModel:
	mov	DWORD PTR tv69[ebp], 0
$LN4@IsBSPModel:
	mov	eax, DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBSPModel@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsBSPModel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsAlive@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?IsAlive@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsAlive, COMDAT
; _this$ = ecx

; 417  : 	virtual BOOL	IsAlive( void ) { return (pev->deadflag == DEAD_NO) && pev->health > 0; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+368], 0
	jne	SHORT $LN3@IsAlive
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	movss	xmm0, DWORD PTR [eax+352]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@IsAlive
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsAlive
$LN3@IsAlive:
	mov	DWORD PTR tv70[ebp], 0
$LN4@IsAlive:
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAlive@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsAlive
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsSneaking@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSneaking@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsSneaking, COMDAT
; _this$ = ecx

; 416  : 	virtual BOOL	IsSneaking( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSneaking@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnControls@CBaseEntity@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pTest$ = 8						; size = 4
?OnControls@CBaseEntity@@UAEHPAV1@@Z PROC		; CBaseEntity::OnControls, COMDAT
; _this$ = ecx

; 415  : 	virtual BOOL	OnControls( CBaseEntity *pTest ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?OnControls@CBaseEntity@@UAEHPAV1@@Z ENDP		; CBaseEntity::OnControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StopSneaking@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StopSneaking@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::StopSneaking, COMDAT
; _this$ = ecx

; 414  : 	virtual void	StopSneaking( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?StopSneaking@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::StopSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StartSneaking@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartSneaking@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::StartSneaking, COMDAT
; _this$ = ecx

; 413  : 	virtual void	StartSneaking( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?StartSneaking@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::StartSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?SetToggleState@CBaseEntity@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetToggleState@CBaseEntity@@UAEXH@Z PROC		; CBaseEntity::SetToggleState, COMDAT
; _this$ = ecx

; 412  : 	virtual void	SetToggleState( int state ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetToggleState@CBaseEntity@@UAEXH@Z ENDP		; CBaseEntity::SetToggleState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?TransferReset@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TransferReset@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::TransferReset, COMDAT
; _this$ = ecx

; 409  : 	virtual void	TransferReset( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?TransferReset@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::TransferReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OverrideReset@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OverrideReset@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OverrideReset, COMDAT
; _this$ = ecx

; 408  : 	virtual void	OverrideReset( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OverrideReset@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OverrideReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMoving@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMoving@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMoving, COMDAT
; _this$ = ecx

; 407  : 	virtual int	IsMoving( void ) { return GetAbsVelocity() != g_vecZero; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?g_vecZero@@3VVector@@B		; g_vecZero
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsVelocity@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsVelocity
	mov	ecx, eax
	call	??9Vector@@QBEHABV0@@Z			; Vector::operator!=
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMoving@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMoving
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetDelay@CBaseEntity@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDelay@CBaseEntity@@UAEMXZ PROC			; CBaseEntity::GetDelay, COMDAT
; _this$ = ecx

; 406  : 	virtual float	GetDelay( void ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDelay@CBaseEntity@@UAEMXZ ENDP			; CBaseEntity::GetDelay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iAmount$ = 8						; size = 4
_szName$ = 12						; size = 4
_iMax$ = 16						; size = 4
?GiveAmmo@CBaseEntity@@UAEHHPADH@Z PROC			; CBaseEntity::GiveAmmo, COMDAT
; _this$ = ecx

; 405  : 	virtual int 	GiveAmmo( int iAmount, char *szName, int iMax ) { return -1; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GiveAmmo@CBaseEntity@@UAEHHPADH@Z ENDP			; CBaseEntity::GiveAmmo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pItem$ = 8						; size = 4
?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z PROC ; CBaseEntity::RemovePlayerItem, COMDAT
; _this$ = ecx

; 404  : 	virtual BOOL	RemovePlayerItem( CBasePlayerItem *pItem ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ENDP ; CBaseEntity::RemovePlayerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pItem$ = 8						; size = 4
?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z PROC ; CBaseEntity::AddPlayerItem, COMDAT
; _this$ = ecx

; 403  : 	virtual BOOL	AddPlayerItem( CBasePlayerItem *pItem ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ENDP ; CBaseEntity::AddPlayerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_score$ = 8						; size = 4
_bAllowNegativeScore$ = 12				; size = 4
?AddPointsToTeam@CBaseEntity@@UAEXHH@Z PROC		; CBaseEntity::AddPointsToTeam, COMDAT
; _this$ = ecx

; 402  : 	virtual void	AddPointsToTeam( int score, BOOL bAllowNegativeScore ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?AddPointsToTeam@CBaseEntity@@UAEXHH@Z ENDP		; CBaseEntity::AddPointsToTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPoints@CBaseEntity@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_score$ = 8						; size = 4
_bAllowNegativeScore$ = 12				; size = 4
?AddPoints@CBaseEntity@@UAEXHH@Z PROC			; CBaseEntity::AddPoints, COMDAT
; _this$ = ecx

; 401  : 	virtual void	AddPoints( int score, BOOL bAllowNegativeScore ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?AddPoints@CBaseEntity@@UAEXHH@Z ENDP			; CBaseEntity::AddPoints
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetToggleState@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetToggleState@CBaseEntity@@UAEHXZ PROC		; CBaseEntity::GetToggleState, COMDAT
; _this$ = ecx

; 400  : 	virtual int	GetToggleState( void ) { return TS_AT_TOP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetToggleState@CBaseEntity@@UAEHXZ ENDP		; CBaseEntity::GetToggleState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ PROC ; CBaseEntity::MySquadMonsterPointer, COMDAT
; _this$ = ecx

; 399  : 	virtual CSquadMonster *MySquadMonsterPointer( void ) { return NULL;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ ENDP ; CBaseEntity::MySquadMonsterPointer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ PROC ; CBaseEntity::MyMonsterPointer, COMDAT
; _this$ = ecx

; 398  : 	virtual CBaseMonster *MyMonsterPointer( void ) { return NULL;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ ENDP ; CBaseEntity::MyMonsterPointer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
?IsTriggered@CBaseEntity@@UAEHPAV1@@Z PROC		; CBaseEntity::IsTriggered, COMDAT
; _this$ = ecx

; 397  : 	virtual BOOL	IsTriggered( CBaseEntity *pActivator ) {return TRUE;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	4
?IsTriggered@CBaseEntity@@UAEHPAV1@@Z ENDP		; CBaseEntity::IsTriggered
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?BloodColor@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BloodColor@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::BloodColor, COMDAT
; _this$ = ecx

; 395  : 	virtual int	BloodColor( void ) { return DONT_BLEED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?BloodColor@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::BloodColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pEnt$ = 8						; size = 4
?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z PROC	; CBaseEntity::GetState, COMDAT
; _this$ = ecx

; 388  : 	virtual STATE GetState ( CBaseEntity* pEnt ) { return GetState(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z ENDP	; CBaseEntity::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsRigidBody@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsRigidBody@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsRigidBody, COMDAT
; _this$ = ecx

; 374  : 	virtual BOOL IsRigidBody( void ) { return (m_iActorType == ACTOR_DYNAMIC); } 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1604]
	cmp	ecx, 1
	jne	SHORT $LN3@IsRigidBod
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsRigidBod
$LN3@IsRigidBod:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsRigidBod:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRigidBody@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsRigidBody
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pevChild$ = 8						; size = 4
?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z PROC	; CBaseEntity::DeathNotice, COMDAT
; _this$ = ecx

; 373  : 	virtual void DeathNotice ( entvars_t *pevChild ) { } // monster maker children use this to tell the monster maker that they have died.

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z ENDP	; CBaseEntity::DeathNotice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Classify@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Classify@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::Classify, COMDAT
; _this$ = ecx

; 372  : 	virtual int Classify ( void ) { return CLASS_NONE; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Classify@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::Classify
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnRemove@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnRemove@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnRemove, COMDAT
; _this$ = ecx

; 360  : 	virtual void	OnRemove( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnRemove@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnRemove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnClearParent@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnClearParent@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnClearParent, COMDAT
; _this$ = ecx

; 359  : 	virtual void	OnClearParent( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnClearParent@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnClearParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnChangeParent@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnChangeParent@CBaseEntity@@UAEXXZ PROC		; CBaseEntity::OnChangeParent, COMDAT
; _this$ = ecx

; 358  : 	virtual void	OnChangeParent( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeParent@CBaseEntity@@UAEXXZ ENDP		; CBaseEntity::OnChangeParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetPosition@CBaseEntity@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPosition@CBaseEntity@@UAEMXZ PROC			; CBaseEntity::GetPosition, COMDAT
; _this$ = ecx

; 357  : 	virtual float	GetPosition( void ) { return 0.0f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPosition@CBaseEntity@@UAEMXZ ENDP			; CBaseEntity::GetPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z PROC	; CBaseEntity::StartMessage, COMDAT
; _this$ = ecx

; 356  :           virtual void	StartMessage( CBasePlayer *pPlayer ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z ENDP	; CBaseEntity::StartMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?PortalSleep@CBaseEntity@@UAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_seconds$ = 8						; size = 4
?PortalSleep@CBaseEntity@@UAEXM@Z PROC			; CBaseEntity::PortalSleep, COMDAT
; _this$ = ecx

; 355  : 	virtual void	PortalSleep( float seconds ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?PortalSleep@CBaseEntity@@UAEXM@Z ENDP			; CBaseEntity::PortalSleep
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnTeleport@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnTeleport@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnTeleport, COMDAT
; _this$ = ecx

; 354  : 	virtual void	OnTeleport( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnTeleport@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnTeleport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnChangeLevel@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnChangeLevel@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnChangeLevel, COMDAT
; _this$ = ecx

; 353  : 	virtual void	OnChangeLevel( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeLevel@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnChangeLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Activate@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Activate@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::Activate, COMDAT
; _this$ = ecx

; 352  : 	virtual void	Activate( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Activate@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ObjectCaps@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ObjectCaps@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::ObjectCaps, COMDAT
; _this$ = ecx

; 351  : 	virtual int	ObjectCaps( void ) { return FCAP_ACROSS_TRANSITION; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectCaps@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::ObjectCaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?SetClassname@CBaseEntity@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszClassName$ = 8					; size = 4
?SetClassname@CBaseEntity@@QAEXPBD@Z PROC		; CBaseEntity::SetClassname, COMDAT
; _this$ = ecx

; 294  : 	void		SetClassname( const char *pszClassName ) { pev->classname = MAKE_STRING( pszClassName ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClassname@CBaseEntity@@QAEXPBD@Z ENDP		; CBaseEntity::SetClassname
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ??CEHANDLE@@QAEPAVCBaseEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??CEHANDLE@@QAEPAVCBaseEntity@@XZ PROC			; EHANDLE::operator->, COMDAT
; _this$ = ecx

; 90   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 	return (CBaseEntity *)GET_PRIVATE( Get( ) ); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@EHANDLE@@QAEPAUedict_s@@XZ		; EHANDLE::Get
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??CEHANDLE@@QAEPAVCBaseEntity@@XZ ENDP			; EHANDLE::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ??BEHANDLE@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
??BEHANDLE@@QAEHXZ PROC					; EHANDLE::operator int, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	return Get() != NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@EHANDLE@@QAEPAUedict_s@@XZ		; EHANDLE::Get
	test	eax, eax
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??BEHANDLE@@QAEHXZ ENDP					; EHANDLE::operator int
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ?Get@EHANDLE@@QAEPAUedict_s@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@EHANDLE@@QAEPAUedict_s@@XZ PROC			; EHANDLE::Get, COMDAT
; _this$ = ecx

; 40   : { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 	if( m_pent )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Get

; 42   : 	{
; 43   : #if 0
; 44   : 		// keep client entity always in actual state
; 45   : 		if( ENTINDEX( m_pent ) == 1 )
; 46   : 			m_serialnumber = m_pent->serialnumber;
; 47   : #endif
; 48   : 		if( m_pent->serialnumber == m_serialnumber ) 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN2@Get

; 49   : 			return m_pent; 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	jmp	SHORT $LN1@Get
$LN2@Get:

; 50   : 	}
; 51   : 
; 52   : 	return NULL; 

	xor	eax, eax
$LN1@Get:

; 53   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Get@EHANDLE@@QAEPAUedict_s@@XZ ENDP			; EHANDLE::Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FStrEq@@YAHPBD0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
_sz1$ = 8						; size = 4
_sz2$ = 12						; size = 4
?FStrEq@@YAHPBD0@Z PROC					; FStrEq, COMDAT

; 286  : 	{ return (Q_strcmp( sz1, sz2 ) == 0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	push	99999					; 0001869fH
	mov	eax, DWORD PTR _sz2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sz1$[ebp]
	push	ecx
	call	?Q_strncmp@@YAHPBD0H@Z			; Q_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@FStrEq
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@FStrEq
$LN3@FStrEq:
	mov	DWORD PTR tv69[ebp], 0
$LN4@FStrEq:
	mov	eax, DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FStrEq@@YAHPBD0@Z ENDP					; FStrEq
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?ENTINDEX@@YAHPAUedict_s@@@Z
_TEXT	SEGMENT
_pEdict$ = 8						; size = 4
?ENTINDEX@@YAHPAUedict_s@@@Z PROC			; ENTINDEX, COMDAT

; 186  : inline int	  ENTINDEX(edict_t *pEdict)			{ return (*g_engfuncs.pfnIndexOfEdict)(pEdict); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pEdict$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+284
	add	esp, 4
	pop	ebp
	ret	0
?ENTINDEX@@YAHPAUedict_s@@@Z ENDP			; ENTINDEX
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z PROC		; VARS, COMDAT

; 178  : { 

	push	ebp
	mov	ebp, esp

; 179  : 	if ( !pent )

	cmp	DWORD PTR _pent$[ebp], 0
	jne	SHORT $LN2@VARS

; 180  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@VARS
$LN2@VARS:

; 181  : 
; 182  : 	return &pent->v; 

	mov	eax, DWORD PTR _pent$[ebp]
	add	eax, 128				; 00000080H
$LN1@VARS:

; 183  : }

	pop	ebp
	ret	0
?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z ENDP		; VARS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z
_TEXT	SEGMENT
_pev$ = 8						; size = 4
?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z PROC		; ENT, COMDAT

; 151  : 	inline edict_t *ENT(const entvars_t *pev)	{ return DBG_EntOfVars(pev); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	call	?DBG_EntOfVars@@YAPAUedict_s@@PBUentvars_s@@@Z ; DBG_EntOfVars
	add	esp, 4
	pop	ebp
	ret	0
?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z ENDP		; ENT
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IEntityFactory@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IEntityFactory@@QAE@XZ PROC				; IEntityFactory::IEntityFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IEntityFactory@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IEntityFactory@@QAE@XZ ENDP				; IEntityFactory::IEntityFactory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 161  : 		m_pElements = Base();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Base
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ PROC	; CUtlMemory<char *,int>::ValidateGrowSize, COMDAT
; _this$ = ecx

; 148  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 149  : #ifdef _X360
; 150  : 		if ( m_nGrowSize && m_nGrowSize != EXTERNAL_BUFFER_MARKER )
; 151  : 		{
; 152  : 			// Max grow size at 128 bytes on XBOX
; 153  : 			const int MAX_GROW = 128;
; 154  : 			if ( m_nGrowSize * sizeof(T) > MAX_GROW )
; 155  : 			{
; 156  : 				m_nGrowSize = max( 1, MAX_GROW / sizeof(T) );
; 157  : 			}
; 158  : 		}
; 159  : #endif
; 160  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ ENDP	; CUtlMemory<char *,int>::ValidateGrowSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ PROC		; CUtlMemory<char *,int>::IsReadOnly, COMDAT
; _this$ = ecx

; 467  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 468  : 	return (m_nGrowSize == EXTERNAL_CONST_BUFFER_MARKER);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -2			; fffffffeH
	jne	SHORT $LN3@IsReadOnly
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@IsReadOnly
$LN3@IsReadOnly:
	mov	DWORD PTR tv66[ebp], 0
$LN4@IsReadOnly:
	mov	al, BYTE PTR tv66[ebp]

; 469  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ ENDP		; CUtlMemory<char *,int>::IsReadOnly
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ PROC	; CUtlMemory<char *,int>::IsExternallyAllocated, COMDAT
; _this$ = ecx

; 457  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 458  : 	return (m_nGrowSize < 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jge	SHORT $LN3@IsExternal
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@IsExternal
$LN3@IsExternal:
	mov	DWORD PTR tv66[ebp], 0
$LN4@IsExternal:
	mov	al, BYTE PTR tv66[ebp]

; 459  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ ENDP	; CUtlMemory<char *,int>::IsExternallyAllocated
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?Purge@?$CUtlMemory@PADH@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Purge@?$CUtlMemory@PADH@@QAEXXZ PROC			; CUtlMemory<char *,int>::Purge, COMDAT
; _this$ = ecx

; 645  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 646  : 	if ( !IsExternallyAllocated() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ ; CUtlMemory<char *,int>::IsExternallyAllocated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Purge

; 647  : 	{
; 648  : 		if (m_pMemory)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Purge

; 649  : 		{
; 650  : 			free( (void*)m_pMemory );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_free
	add	esp, 4

; 651  : 			m_pMemory = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN3@Purge:

; 652  : 		}
; 653  : 		m_nAllocationCount = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@Purge:

; 654  : 	}
; 655  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Purge@?$CUtlMemory@PADH@@QAEXXZ ENDP			; CUtlMemory<char *,int>::Purge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?Base@?$CUtlMemory@PADH@@QAEPAPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Base@?$CUtlMemory@PADH@@QAEPAPADXZ PROC		; CUtlMemory<char *,int>::Base, COMDAT
; _this$ = ecx

; 487  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 488  : 	assert( !IsReadOnly() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ	; CUtlMemory<char *,int>::IsReadOnly
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Base
	push	488					; 000001e8H
	push	OFFSET ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
	push	OFFSET ??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Base:

; 489  : 	return m_pMemory;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 490  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Base@?$CUtlMemory@PADH@@QAEPAPADXZ ENDP		; CUtlMemory<char *,int>::Base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_i$ = 8							; size = 4
?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z PROC		; CUtlMemory<char *,int>::IsIdxValid, COMDAT
; _this$ = ecx

; 520  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 	return ( ((int) i) >= 0 ) && ( ((int) i) < m_nAllocationCount );

	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN3@IsIdxValid
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@IsIdxValid
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsIdxValid
$LN3@IsIdxValid:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsIdxValid:
	mov	al, BYTE PTR tv67[ebp]

; 522  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z ENDP		; CUtlMemory<char *,int>::IsIdxValid
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??A?$CUtlMemory@PADH@@QAEAAPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??A?$CUtlMemory@PADH@@QAEAAPADH@Z PROC			; CUtlMemory<char *,int>::operator[], COMDAT
; _this$ = ecx

; 423  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 424  : 	assert( !IsReadOnly() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ	; CUtlMemory<char *,int>::IsReadOnly
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	push	424					; 000001a8H
	push	OFFSET ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
	push	OFFSET ??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 425  : 	assert( IsIdxValid(i) );

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z	; CUtlMemory<char *,int>::IsIdxValid
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@operator
	push	425					; 000001a9H
	push	OFFSET ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
	push	OFFSET ??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@operator:

; 426  : 	return m_pMemory[i];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]

; 427  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CUtlMemory@PADH@@QAEAAPADH@Z ENDP			; CUtlMemory<char *,int>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??1?$CUtlMemory@PADH@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CUtlMemory@PADH@@QAE@XZ PROC			; CUtlMemory<char *,int>::~CUtlMemory<char *,int>, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CUtlMemory@PADH@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	Purge();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@?$CUtlMemory@PADH@@QAEXXZ	; CUtlMemory<char *,int>::Purge

; 324  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CUtlMemory@PADH@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CUtlMemory@PADH@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CUtlMemory@PADH@@QAE@XZ ENDP			; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??0?$CUtlMemory@PADH@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nGrowSize$ = 8						; size = 4
_nInitAllocationCount$ = 12				; size = 4
??0?$CUtlMemory@PADH@@QAE@HH@Z PROC			; CUtlMemory<char *,int>::CUtlMemory<char *,int>, COMDAT
; _this$ = ecx

; 295  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 293  : CUtlMemory<T,I>::CUtlMemory( int nGrowSize, int nInitAllocationCount ) : m_pMemory(0), 

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 294  : 	m_nAllocationCount( nInitAllocationCount ), m_nGrowSize( nGrowSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _nInitAllocationCount$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nGrowSize$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 296  : 	ValidateGrowSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ ; CUtlMemory<char *,int>::ValidateGrowSize

; 297  : 	assert( nGrowSize >= 0 );

	cmp	DWORD PTR _nGrowSize$[ebp], 0
	jge	SHORT $LN4@CUtlMemory
	push	297					; 00000129H
	push	OFFSET $SG74900
	push	OFFSET $SG74901
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@CUtlMemory:

; 298  : 	if (m_nAllocationCount)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@CUtlMemory

; 299  : 	{
; 300  : 		m_pMemory = (T*)malloc( m_nAllocationCount * sizeof(T) );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@CUtlMemory:

; 301  : 	}
; 302  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$CUtlMemory@PADH@@QAE@HH@Z ENDP			; CUtlMemory<char *,int>::CUtlMemory<char *,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::Purge, COMDAT
; _this$ = ecx

; 742  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 743  : 	RemoveAll();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll

; 744  : 	m_Memory.Purge();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@?$CUtlMemory@PADH@@QAEXXZ	; CUtlMemory<char *,int>::Purge

; 745  : 	ResetDbgInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo

; 746  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::Purge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll, COMDAT
; _this$ = ecx

; 726  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 727  : 	for (int i = m_Size; --i >= 0; )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _i$1[ebp], ecx
$LN4@RemoveAll:
	mov	edx, DWORD PTR _i$1[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
	js	SHORT $LN3@RemoveAll

; 728  : 	{
; 729  : 		Destruct(&Element(i));

	mov	eax, DWORD PTR _i$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::Element
	push	eax
	call	??$Destruct@PAD@@YAXPAPAD@Z		; Destruct<char *>
	add	esp, 4

; 730  : 	}

	jmp	SHORT $LN4@RemoveAll
$LN3@RemoveAll:

; 731  : 
; 732  : 	m_Size = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 733  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::Count, COMDAT
; _this$ = ecx

; 344  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 345  : 	return m_Size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 346  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::Count
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::Base, COMDAT
; _this$ = ecx

; 60   : 	T* Base()								{ return m_Memory.Base(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Base@?$CUtlMemory@PADH@@QAEPAPADXZ	; CUtlMemory<char *,int>::Base
	mov	esp, ebp
	pop	ebp
	ret	0
?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::Base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::Element, COMDAT
; _this$ = ecx

; 294  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 	return m_Memory[ i ];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CUtlMemory@PADH@@QAEAAPADH@Z	; CUtlMemory<char *,int>::operator[]

; 296  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::Element
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[], COMDAT
; _this$ = ecx

; 282  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 	return m_Memory[ i ];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CUtlMemory@PADH@@QAEAAPADH@Z	; CUtlMemory<char *,int>::operator[]

; 284  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >, COMDAT
; _this$ = ecx

; 260  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 261  : 	Purge();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Purge

; 262  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CUtlMemory@PADH@@QAE@XZ		; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_growSize$ = 8						; size = 4
_initSize$ = 12						; size = 4
??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >, COMDAT
; _this$ = ecx

; 247  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 	m_Memory(growSize, initSize), m_Size(0)

	mov	eax, DWORD PTR _initSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _growSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CUtlMemory@PADH@@QAE@HH@Z		; CUtlMemory<char *,int>::CUtlMemory<char *,int>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 248  : 	ResetDbgInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo

; 249  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CUtlMemory@PADH@@QAE@XZ		; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
__ehhandler$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\common\datamap.h
;	COMDAT ??1CDatadescGeneratedNameHolder@@QAE@XZ
_TEXT	SEGMENT
$T2 = -24						; size = 4
_this$ = -20						; size = 4
_i$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatadescGeneratedNameHolder@@QAE@XZ PROC		; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder, COMDAT
; _this$ = ecx

; 197  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatadescGeneratedNameHolder@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 198  : 		for( int i = 0; i < m_Names.Count(); i++ )

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@CDatadescG
$LN2@CDatadescG:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@CDatadescG:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Count
	cmp	DWORD PTR _i$3[ebp], eax
	jge	SHORT $LN1@CDatadescG

; 199  : 		{
; 200  : 			delete m_Names[i];

	mov	ecx, DWORD PTR _i$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], edx
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 201  : 		}

	jmp	SHORT $LN2@CDatadescG
$LN1@CDatadescG:

; 202  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ ; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDatadescGeneratedNameHolder@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatadescGeneratedNameHolder@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatadescGeneratedNameHolder@@QAE@XZ ENDP		; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\common\datamap.h
;	COMDAT ??0CDatadescGeneratedNameHolder@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszBase$ = 8						; size = 4
??0CDatadescGeneratedNameHolder@@QAE@PBD@Z PROC		; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder, COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 191  : 	CDatadescGeneratedNameHolder( const char *pszBase ) : m_pszBase(pszBase)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszBase$[ebp]
	mov	DWORD PTR [eax], ecx

; 192  : 	{

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >

; 193  : 		m_nLenBase = strlen( m_pszBase ) + 2;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 194  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CDatadescGeneratedNameHolder@@QAE@PBD@Z ENDP		; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\enginecallback.h
;	COMDAT ?GET_PRIVATE@@YAPAXPAUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?GET_PRIVATE@@YAPAXPAUedict_s@@@Z PROC			; GET_PRIVATE, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp

; 102  : 	if ( pent )

	cmp	DWORD PTR _pent$[ebp], 0
	je	SHORT $LN2@GET_PRIVAT

; 103  : 		return pent->pvPrivateData;

	mov	eax, DWORD PTR _pent$[ebp]
	mov	eax, DWORD PTR [eax+124]
	jmp	SHORT $LN1@GET_PRIVAT
$LN2@GET_PRIVAT:

; 104  : 	return NULL;

	xor	eax, eax
$LN1@GET_PRIVAT:

; 105  : }

	pop	ebp
	ret	0
?GET_PRIVATE@@YAPAXPAUedict_s@@@Z ENDP			; GET_PRIVATE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\enginecallback.h
;	COMDAT ?MESSAGE_BEGIN@@YAXHHPBMPAUedict_s@@@Z
_TEXT	SEGMENT
_msg_dest$ = 8						; size = 4
_msg_type$ = 12						; size = 4
_pOrigin$ = 16						; size = 4
_ed$ = 20						; size = 4
?MESSAGE_BEGIN@@YAXHHPBMPAUedict_s@@@Z PROC		; MESSAGE_BEGIN, COMDAT

; 72   : inline void MESSAGE_BEGIN( int msg_dest, int msg_type, const float *pOrigin = NULL, edict_t *ed = NULL ) {

	push	ebp
	mov	ebp, esp

; 73   : 	(*g_engfuncs.pfnMessageBegin)(msg_dest, msg_type, pOrigin, ed);

	mov	eax, DWORD PTR _ed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pOrigin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg_type$[ebp]
	push	edx
	mov	eax, DWORD PTR _msg_dest$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+184
	add	esp, 16					; 00000010H

; 74   : }

	pop	ebp
	ret	0
?MESSAGE_BEGIN@@YAXHHPBMPAUedict_s@@@Z ENDP		; MESSAGE_BEGIN
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??DVector@@QBE?AV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_fl$ = 12						; size = 4
??DVector@@QBE?AV0@M@Z PROC				; Vector::operator*, COMDAT
; _this$ = ecx

; 150  : 	inline Vector operator*(float fl) const		{ return Vector(x*fl, y*fl, z*fl);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??DVector@@QBE?AV0@M@Z ENDP				; Vector::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??HVector@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HVector@@QBE?AV0@ABV0@@Z PROC				; Vector::operator+, COMDAT
; _this$ = ecx

; 146  : 	inline Vector operator+(const Vector& v) const	{ return Vector(x+v.x, y+v.y, z+v.z);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??HVector@@QBE?AV0@ABV0@@Z ENDP				; Vector::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??9Vector@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_v$ = 8							; size = 4
??9Vector@@QBEHABV0@@Z PROC				; Vector::operator!=, COMDAT
; _this$ = ecx

; 145  : 	inline int operator!=(const Vector& v) const	{ return !(*this==v);		   }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Vector@@QBEHABV0@@Z			; Vector::operator==
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9Vector@@QBEHABV0@@Z ENDP				; Vector::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??8Vector@@QBEHABV0@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??8Vector@@QBEHABV0@@Z PROC				; Vector::operator==, COMDAT
; _this$ = ecx

; 144  : 	inline int operator==(const Vector& v) const	{ return x==v.x && y==v.y && z==v.z;	   }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	ucomiss	xmm0, DWORD PTR [ecx]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	ucomiss	xmm0, DWORD PTR [eax+4]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	ucomiss	xmm0, DWORD PTR [edx+8]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv73[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??8Vector@@QBEHABV0@@Z ENDP				; Vector::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??0Vector@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
_Z$ = 16						; size = 4
??0Vector@@QAE@MMM@Z PROC				; Vector::Vector, COMDAT
; _this$ = ecx

; 132  : 	inline Vector(float X, float Y, float Z)	{ x = X; y = Y; z = Z;                     }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _X$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Z$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Vector@@QAE@MMM@Z ENDP				; Vector::Vector
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__G@YGXPAX0IIP6EPAX00@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___u$ = 12						; size = 4
___s$ = 16						; size = 4
___n$ = 20						; size = 4
___f$ = 24						; size = 4
??__G@YGXPAX0IIP6EPAX00@Z@Z PROC			; `vector copy constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN1@vector
	mov	edx, DWORD PTR ___u$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	mov	ecx, DWORD PTR ___u$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___u$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN1@vector:
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??__G@YGXPAX0IIP6EPAX00@Z@Z ENDP			; `vector copy constructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN1@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	edx, DWORD PTR ___t$[ebp]
	add	edx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], edx
	jmp	SHORT $LN2@vector
$LN1@vector:
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
