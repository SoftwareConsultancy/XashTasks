; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\USER\Downloads\XashXT_v0.81_rev.1_with_sources\XashXT_v0.81_rev.1_src\server\pathcorner.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?m_DataMap@CPathTrack@@2Udatamap_s@@A		; CPathTrack::m_DataMap
CONST	SEGMENT
$SG74742 DB	'path_corner', 00H
$SG74768 DB	'CPathTrack', 00H
	ORG $+1
$SG74816 DB	'm_length', 00H
	ORG $+3
$SG74817 DB	'm_pnext', 00H
$SG74818 DB	'm_paltpath', 00H
	ORG $+1
$SG74819 DB	'm_pprevious', 00H
$SG74820 DB	'm_altName', 00H
	ORG $+2
$SG74821 DB	'altpath', 00H
$SG74822 DB	'm_eOrientationType', 00H
	ORG $+1
$SG74823 DB	'type', 00H
	ORG $+3
$SG74824 DB	'm_iszFireFow', 00H
	ORG $+3
$SG74825 DB	'm_iszFireFow', 00H
	ORG $+3
$SG74826 DB	'm_iszFireRev', 00H
	ORG $+3
$SG74827 DB	'm_iszFireRev', 00H
	ORG $+3
$SG74828 DB	'CPathTrack', 00H
	ORG $+1
$SG74857 DB	'path_track', 00H
	ORG $+1
$SG74876 DB	'altpath', 00H
$SG74879 DB	'm_iszFireFow', 00H
	ORG $+3
$SG74882 DB	'm_iszFireRev', 00H
	ORG $+3
$SG74885 DB	'type', 00H
	ORG $+3
$SG74918 DB	'path_track (%s) refers to itself as a target!', 0aH, 00H
	ORG $+1
$SG74922 DB	'Dead end link %s', 0aH, 00H
	ORG $+2
$SG75019 DB	'Bad sequence of path_tracks from %s', 00H
$SG75039 DB	'path_track', 00H
	ORG $+1
$SG75155 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75156 DB	'n', 00H, 'G', 00H, 'r', 00H, 'o', 00H, 'w', 00H, 'S', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '>', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, 00H, 00H
	ORG $+2
$SG75199 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75325 DB	'0', 00H, 00H, 00H
$SG75200 DB	'(', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'N', 00H, 'U'
	DB	00H, 'L', 00H, 'L', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, '(', 00H, '&', 00H, 's', 00H, 'r', 00H, 'c', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, 'B', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'(', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, '(', 00H, '&', 00H, 's', 00H, 'r', 00H, 'c', 00H, ' ', 00H
	DB	'>', 00H, '=', 00H, ' ', 00H, '(', 00H, 'B', 00H, 'a', 00H, 's'
	DB	00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, '+', 00H, ' ', 00H
	DB	'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, '(', 00H, ')'
	DB	00H, ')', 00H, ' ', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG75322 DB	'n', 00H, 'u', 00H, 'm', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H
$SG75331 DB	'0', 00H, 00H, 00H
$SG75201 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75335 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG75202 DB	'(', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, '(', 00H, ')', 00H, ')', 00H, ' ', 00H, '|', 00H
	DB	'|', 00H, ' ', 00H, 'I', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l'
	DB	00H, 'i', 00H, 'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H
	DB	'x', 00H, '(', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ')'
	DB	00H, 00H, 00H
$SG75274 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'r', 00H
	DB	'a', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
$SG75337 DB	'm', 00H, '_', 00H, 'p', 00H, 'M', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H
$SG75275 DB	'I', 00H, 's', 00H, 'V', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, '('
	DB	00H, 'e', 00H, 'l', 00H, 'e', 00H, 'm', 00H, ')', 00H, ' ', 00H
	DB	'|', 00H, '|', 00H, ' ', 00H, '(', 00H, ' ', 00H, 'm', 00H, '_'
	DB	00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, ' ', 00H, ')', 00H, ' ', 00H, '|'
	DB	00H, '|', 00H, ' ', 00H, '(', 00H, ' ', 00H, 'n', 00H, 'u', 00H
	DB	'm', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' '
	DB	00H, ')', 00H, 00H, 00H
	ORG $+4
$SG75321 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75324 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75330 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75334 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG75336 DB	'c', 00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H
	DB	'r', 00H, 's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H
	DB	'o', 00H, 'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'0', 00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e'
	DB	00H, 'v', 00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r'
	DB	00H, 'c', 00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H
	DB	's', 00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0'
	DB	00H, '.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H
	DB	'v', 00H, '.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c'
	DB	00H, '\', 00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H
	DB	's', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\'
	DB	00H, 'u', 00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H
	DB	'o', 00H, 'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
?m_DataMap@CPathTrack@@2Udatamap_s@@A DD 00H		; CPathTrack::m_DataMap
	DD	00H
	DD	FLAT:$SG74768
	DD	00H
_DATA	ENDS
PUBLIC	??_H@YGXPAXIIP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	??__G@YGXPAX0IIP6EPAX00@Z@Z			; `vector copy constructor iterator'
PUBLIC	??0Vector@@QAE@XZ				; Vector::Vector
PUBLIC	??0Vector@@QAE@MMM@Z				; Vector::Vector
PUBLIC	??0Vector@@QAE@ABV0@@Z				; Vector::Vector
PUBLIC	??8Vector@@QBEHABV0@@Z				; Vector::operator==
PUBLIC	??9Vector@@QBEHABV0@@Z				; Vector::operator!=
PUBLIC	??HVector@@QBE?AV0@ABV0@@Z			; Vector::operator+
PUBLIC	??GVector@@QBE?AV0@ABV0@@Z			; Vector::operator-
PUBLIC	??DVector@@QBE?AV0@M@Z				; Vector::operator*
PUBLIC	?Length@Vector@@QBEMXZ				; Vector::Length
PUBLIC	?Normalize@Vector@@QBE?AV1@XZ			; Vector::Normalize
PUBLIC	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z		; GET_PRIVATE
PUBLIC	??0CDatadescGeneratedNameHolder@@QAE@PBD@Z	; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder
PUBLIC	??1CDatadescGeneratedNameHolder@@QAE@XZ		; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder
PUBLIC	??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >
PUBLIC	??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ	; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >
PUBLIC	??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[]
PUBLIC	?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::Element
PUBLIC	?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Base
PUBLIC	?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Count
PUBLIC	?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll
PUBLIC	?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Purge
PUBLIC	??0?$CUtlMemory@PADH@@QAE@HH@Z			; CUtlMemory<char *,int>::CUtlMemory<char *,int>
PUBLIC	??1?$CUtlMemory@PADH@@QAE@XZ			; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
PUBLIC	??A?$CUtlMemory@PADH@@QAEAAPADH@Z		; CUtlMemory<char *,int>::operator[]
PUBLIC	?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z		; CUtlMemory<char *,int>::IsIdxValid
PUBLIC	?Base@?$CUtlMemory@PADH@@QAEPAPADXZ		; CUtlMemory<char *,int>::Base
PUBLIC	?Purge@?$CUtlMemory@PADH@@QAEXXZ		; CUtlMemory<char *,int>::Purge
PUBLIC	?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ ; CUtlMemory<char *,int>::IsExternallyAllocated
PUBLIC	?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ		; CUtlMemory<char *,int>::IsReadOnly
PUBLIC	?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ	; CUtlMemory<char *,int>::ValidateGrowSize
PUBLIC	?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo
PUBLIC	??0IEntityFactory@@QAE@XZ			; IEntityFactory::IEntityFactory
PUBLIC	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z		; ENT
PUBLIC	?OFFSET@@YAHPBUedict_s@@@Z			; OFFSET
PUBLIC	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z		; VARS
PUBLIC	?FNullEnt@@YAHH@Z				; FNullEnt
PUBLIC	?FNullEnt@@YAHPBUedict_s@@@Z			; FNullEnt
PUBLIC	?FStringNull@@YAHH@Z				; FStringNull
PUBLIC	?FStrEq@@YAHPBD0@Z				; FStrEq
PUBLIC	?FClassnameIs@@YAHPAUedict_s@@PBD@Z		; FClassnameIs
PUBLIC	?Get@EHANDLE@@QAEPAUedict_s@@XZ			; EHANDLE::Get
PUBLIC	??BEHANDLE@@QAEHXZ				; EHANDLE::operator int
PUBLIC	??CEHANDLE@@QAEPAVCBaseEntity@@XZ		; EHANDLE::operator->
PUBLIC	?GetClassname@CBaseEntity@@QAEPBDXZ		; CBaseEntity::GetClassname
PUBLIC	?GetTargetname@CBaseEntity@@QAEPBDXZ		; CBaseEntity::GetTargetname
PUBLIC	?GetTarget@CBaseEntity@@QAEPBDXZ		; CBaseEntity::GetTarget
PUBLIC	?GetDebugName@CBaseEntity@@QAEPBDXZ		; CBaseEntity::GetDebugName
PUBLIC	?SetClassname@CBaseEntity@@QAEXPBD@Z		; CBaseEntity::SetClassname
PUBLIC	?Spawn@CBaseEntity@@UAEXXZ			; CBaseEntity::Spawn
PUBLIC	?Precache@CBaseEntity@@UAEXXZ			; CBaseEntity::Precache
PUBLIC	?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z ; CBaseEntity::KeyValue
PUBLIC	?ObjectCaps@CBaseEntity@@UAEHXZ			; CBaseEntity::ObjectCaps
PUBLIC	?Activate@CBaseEntity@@UAEXXZ			; CBaseEntity::Activate
PUBLIC	?OnChangeLevel@CBaseEntity@@UAEXXZ		; CBaseEntity::OnChangeLevel
PUBLIC	?OnTeleport@CBaseEntity@@UAEXXZ			; CBaseEntity::OnTeleport
PUBLIC	?PortalSleep@CBaseEntity@@UAEXM@Z		; CBaseEntity::PortalSleep
PUBLIC	?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z ; CBaseEntity::StartMessage
PUBLIC	?GetPosition@CBaseEntity@@UAEMXZ		; CBaseEntity::GetPosition
PUBLIC	?OnChangeParent@CBaseEntity@@UAEXXZ		; CBaseEntity::OnChangeParent
PUBLIC	?OnClearParent@CBaseEntity@@UAEXXZ		; CBaseEntity::OnClearParent
PUBLIC	?OnRemove@CBaseEntity@@UAEXXZ			; CBaseEntity::OnRemove
PUBLIC	?Classify@CBaseEntity@@UAEHXZ			; CBaseEntity::Classify
PUBLIC	?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z	; CBaseEntity::DeathNotice
PUBLIC	?IsRigidBody@CBaseEntity@@UAEHXZ		; CBaseEntity::IsRigidBody
PUBLIC	?GetState@CBaseEntity@@UAE?AW4STATE@@XZ		; CBaseEntity::GetState
PUBLIC	?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z	; CBaseEntity::GetState
PUBLIC	?BloodColor@CBaseEntity@@UAEHXZ			; CBaseEntity::BloodColor
PUBLIC	?IsTriggered@CBaseEntity@@UAEHPAV1@@Z		; CBaseEntity::IsTriggered
PUBLIC	?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ ; CBaseEntity::MyMonsterPointer
PUBLIC	?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ ; CBaseEntity::MySquadMonsterPointer
PUBLIC	?GetToggleState@CBaseEntity@@UAEHXZ		; CBaseEntity::GetToggleState
PUBLIC	?AddPoints@CBaseEntity@@UAEXHH@Z		; CBaseEntity::AddPoints
PUBLIC	?AddPointsToTeam@CBaseEntity@@UAEXHH@Z		; CBaseEntity::AddPointsToTeam
PUBLIC	?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ; CBaseEntity::AddPlayerItem
PUBLIC	?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ; CBaseEntity::RemovePlayerItem
PUBLIC	?GiveAmmo@CBaseEntity@@UAEHHPADH@Z		; CBaseEntity::GiveAmmo
PUBLIC	?GetDelay@CBaseEntity@@UAEMXZ			; CBaseEntity::GetDelay
PUBLIC	?IsMoving@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMoving
PUBLIC	?OverrideReset@CBaseEntity@@UAEXXZ		; CBaseEntity::OverrideReset
PUBLIC	?TransferReset@CBaseEntity@@UAEXXZ		; CBaseEntity::TransferReset
PUBLIC	?SetToggleState@CBaseEntity@@UAEXH@Z		; CBaseEntity::SetToggleState
PUBLIC	?StartSneaking@CBaseEntity@@UAEXXZ		; CBaseEntity::StartSneaking
PUBLIC	?StopSneaking@CBaseEntity@@UAEXXZ		; CBaseEntity::StopSneaking
PUBLIC	?OnControls@CBaseEntity@@UAEHPAV1@@Z		; CBaseEntity::OnControls
PUBLIC	?IsSneaking@CBaseEntity@@UAEHXZ			; CBaseEntity::IsSneaking
PUBLIC	?IsAlive@CBaseEntity@@UAEHXZ			; CBaseEntity::IsAlive
PUBLIC	?IsBSPModel@CBaseEntity@@UAEHXZ			; CBaseEntity::IsBSPModel
PUBLIC	?IsCustomModel@CBaseEntity@@UAEHXZ		; CBaseEntity::IsCustomModel
PUBLIC	?ReflectGauss@CBaseEntity@@UAEHXZ		; CBaseEntity::ReflectGauss
PUBLIC	?HasTarget@CBaseEntity@@UAEHH@Z			; CBaseEntity::HasTarget
PUBLIC	?IsPlayer@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPlayer
PUBLIC	?IsNetClient@CBaseEntity@@UAEHXZ		; CBaseEntity::IsNetClient
PUBLIC	?IsMonster@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMonster
PUBLIC	?IsPushable@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPushable
PUBLIC	?IsProjectile@CBaseEntity@@UAEHXZ		; CBaseEntity::IsProjectile
PUBLIC	?IsFuncScreen@CBaseEntity@@UAEHXZ		; CBaseEntity::IsFuncScreen
PUBLIC	?IsPortal@CBaseEntity@@UAEHXZ			; CBaseEntity::IsPortal
PUBLIC	?IsTank@CBaseEntity@@UAEHXZ			; CBaseEntity::IsTank
PUBLIC	?IsMover@CBaseEntity@@UAEHXZ			; CBaseEntity::IsMover
PUBLIC	?IsBreakable@CBaseEntity@@UAEHXZ		; CBaseEntity::IsBreakable
PUBLIC	?TeamID@CBaseEntity@@UAEPBDXZ			; CBaseEntity::TeamID
PUBLIC	?Think@CBaseEntity@@UAEXXZ			; CBaseEntity::Think
PUBLIC	?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z	; CBaseEntity::Use
PUBLIC	?Touch@CBaseEntity@@UAEXPAV1@@Z			; CBaseEntity::Touch
PUBLIC	?Blocked@CBaseEntity@@UAEXPAV1@@Z		; CBaseEntity::Blocked
PUBLIC	?MoveDone@CBaseEntity@@UAEXXZ			; CBaseEntity::MoveDone
PUBLIC	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z		; CBaseEntity::operator new
PUBLIC	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z		; CBaseEntity::operator delete
PUBLIC	?Respawn@CBaseEntity@@UAEPAV1@XZ		; CBaseEntity::Respawn
PUBLIC	?UpdateOwner@CBaseEntity@@UAEXXZ		; CBaseEntity::UpdateOwner
PUBLIC	?FBecomeProne@CBaseEntity@@UAEHXZ		; CBaseEntity::FBecomeProne
PUBLIC	?edict@CBaseEntity@@QAEPAUedict_s@@XZ		; CBaseEntity::edict
PUBLIC	?Center@CBaseEntity@@UAE?AVVector@@XZ		; CBaseEntity::Center
PUBLIC	?EyePosition@CBaseEntity@@UAE?AVVector@@XZ	; CBaseEntity::EyePosition
PUBLIC	?EarPosition@CBaseEntity@@UAE?AVVector@@XZ	; CBaseEntity::EarPosition
PUBLIC	?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z	; CBaseEntity::BodyTarget
PUBLIC	?IsPointSized@CBaseEntity@@UBEHXZ		; CBaseEntity::IsPointSized
PUBLIC	?Illumination@CBaseEntity@@UAEHXZ		; CBaseEntity::Illumination
PUBLIC	??0CBaseEntity@@QAE@XZ				; CBaseEntity::CBaseEntity
PUBLIC	?ObjectCaps@CPointEntity@@UAEHXZ		; CPointEntity::ObjectCaps
PUBLIC	??0CPointEntity@@QAE@XZ				; CPointEntity::CPointEntity
PUBLIC	?GetState@CBaseDelay@@UAE?AW4STATE@@XZ		; CBaseDelay::GetState
PUBLIC	??0CBaseDelay@@QAE@XZ				; CBaseDelay::CBaseDelay
PUBLIC	??0CPathTrack@@QAE@XZ				; CPathTrack::CPathTrack
PUBLIC	?Spawn@CPathTrack@@UAEXXZ			; CPathTrack::Spawn
PUBLIC	?Activate@CPathTrack@@UAEXXZ			; CPathTrack::Activate
PUBLIC	?KeyValue@CPathTrack@@UAEXPAUKeyValueData_s@@@Z	; CPathTrack::KeyValue
PUBLIC	?GetState@CPathTrack@@UAE?AW4STATE@@XZ		; CPathTrack::GetState
PUBLIC	?SetPrevious@CPathTrack@@QAEXPAV1@@Z		; CPathTrack::SetPrevious
PUBLIC	?Link@CPathTrack@@QAEXXZ			; CPathTrack::Link
PUBLIC	?Use@CPathTrack@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z ; CPathTrack::Use
PUBLIC	?ValidPath@CPathTrack@@QAEPAV1@PAV1@H@Z		; CPathTrack::ValidPath
PUBLIC	?Project@CPathTrack@@QAEXPAV1@0AAVVector@@M@Z	; CPathTrack::Project
PUBLIC	?GetOrientation@CPathTrack@@QAE?AVVector@@_N@Z	; CPathTrack::GetOrientation
PUBLIC	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z		; CPathTrack::GetNextInDir
PUBLIC	?Instance@CPathTrack@@SAPAV1@PAUedict_s@@@Z	; CPathTrack::Instance
PUBLIC	?LookAhead@CPathTrack@@QAEPAV1@AAVVector@@MHPAPAV1@@Z ; CPathTrack::LookAhead
PUBLIC	?Nearest@CPathTrack@@QAEPAV1@ABVVector@@@Z	; CPathTrack::Nearest
PUBLIC	?GetNext@CPathTrack@@QAEPAV1@XZ			; CPathTrack::GetNext
PUBLIC	?GetPrevious@CPathTrack@@QAEPAV1@XZ		; CPathTrack::GetPrevious
PUBLIC	?GetBaseMap@CPathTrack@@SAPAUdatamap_s@@XZ	; CPathTrack::GetBaseMap
PUBLIC	?GetDataDescMap@CPathTrack@@UAEPAUdatamap_s@@XZ	; CPathTrack::GetDataDescMap
PUBLIC	?Spawn@CPathCorner@@UAEXXZ			; CPathCorner::Spawn
PUBLIC	?ObjectCaps@CPathCorner@@UAEHXZ			; CPathCorner::ObjectCaps
PUBLIC	?GetDelay@CPathCorner@@UAEMXZ			; CPathCorner::GetDelay
PUBLIC	??0CPathCorner@@QAE@XZ				; CPathCorner::CPathCorner
PUBLIC	??0?$CEntityFactory@VCPathCorner@@@@QAE@PBD@Z	; CEntityFactory<CPathCorner>::CEntityFactory<CPathCorner>
PUBLIC	?Create@?$CEntityFactory@VCPathCorner@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z ; CEntityFactory<CPathCorner>::Create
PUBLIC	?Destroy@?$CEntityFactory@VCPathCorner@@@@UAEXPAVCBaseEntity@@@Z ; CEntityFactory<CPathCorner>::Destroy
PUBLIC	?GetEntitySize@?$CEntityFactory@VCPathCorner@@@@UAEIXZ ; CEntityFactory<CPathCorner>::GetEntitySize
PUBLIC	??$DataMapAccess@VCPointEntity@@@@YAXPAVCPointEntity@@PAPAUdatamap_s@@@Z ; DataMapAccess<CPointEntity>
PUBLIC	??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z ; DataMapInit<CPathTrack>
PUBLIC	??0?$CEntityFactory@VCPathTrack@@@@QAE@PBD@Z	; CEntityFactory<CPathTrack>::CEntityFactory<CPathTrack>
PUBLIC	?Create@?$CEntityFactory@VCPathTrack@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z ; CEntityFactory<CPathTrack>::Create
PUBLIC	?Destroy@?$CEntityFactory@VCPathTrack@@@@UAEXPAVCBaseEntity@@@Z ; CEntityFactory<CPathTrack>::Destroy
PUBLIC	?GetEntitySize@?$CEntityFactory@VCPathTrack@@@@UAEIXZ ; CEntityFactory<CPathTrack>::GetEntitySize
PUBLIC	??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z ; GetClassPtr<CPathTrack>
PUBLIC	??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z ; GetClassPtr<CPathCorner>
PUBLIC	??$Destruct@PAD@@YAXPAPAD@Z			; Destruct<char *>
PUBLIC	??_7IEntityFactory@@6B@				; IEntityFactory::`vftable'
PUBLIC	??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@ ; `string'
PUBLIC	??_7CBaseEntity@@6B@				; CBaseEntity::`vftable'
PUBLIC	??_C@_04MLLLIHIP@null@				; `string'
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	??_C@_08JJJAOBDI@movewith@			; `string'
PUBLIC	??_C@_0M@EAELDHJO@parentflags@			; `string'
PUBLIC	??_C@_05IAKJCFIM@style@				; `string'
PUBLIC	??_C@_0L@IKCANML@reflection@			; `string'
PUBLIC	??_C@_0N@JILDNHAP@vlight_cache@			; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_7CPointEntity@@6B@				; CPointEntity::`vftable'
PUBLIC	??_7CBaseDelay@@6B@				; CBaseDelay::`vftable'
PUBLIC	??_7CPathTrack@@6B@				; CPathTrack::`vftable'
PUBLIC	??_7CPathCorner@@6B@				; CPathCorner::`vftable'
PUBLIC	??_C@_0CB@PKGMINCF@path_corner?5without?5a?5targetnam@ ; `string'
PUBLIC	??_C@_0GF@CMELHPPL@c?3?2users?2user?2downloads?2xashxt_@ ; `string'
PUBLIC	??_C@_0CA@HKJKIBBD@?$CBFStringNull?$CI?5pev?9?$DOtargetname?5?$CJ@ ; `string'
PUBLIC	??_7?$CEntityFactory@VCPathCorner@@@@6B@	; CEntityFactory<CPathCorner>::`vftable'
PUBLIC	?g_DataMapHolder@CPathTrack_DataDescInit@@3PAUdatamap_s@@A ; CPathTrack_DataDescInit::g_DataMapHolder
PUBLIC	??_7?$CEntityFactory@VCPathTrack@@@@6B@		; CEntityFactory<CPathTrack>::`vftable'
PUBLIC	??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@ ; `string'
PUBLIC	??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@ ; `string'
PUBLIC	??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@ ; `string'
PUBLIC	??_R4CBaseEntity@@6B@				; CBaseEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseEntity@@@8				; CBaseEntity `RTTI Type Descriptor'
PUBLIC	??_R3CBaseEntity@@8				; CBaseEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseEntity@@8				; CBaseEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseEntity@@8			; CBaseEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4IEntityFactory@@6B@			; IEntityFactory::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIEntityFactory@@@8			; IEntityFactory `RTTI Type Descriptor'
PUBLIC	??_R3IEntityFactory@@8				; IEntityFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IEntityFactory@@8				; IEntityFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IEntityFactory@@8			; IEntityFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CPointEntity@@6B@				; CPointEntity::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPointEntity@@@8			; CPointEntity `RTTI Type Descriptor'
PUBLIC	??_R3CPointEntity@@8				; CPointEntity::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPointEntity@@8				; CPointEntity::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPointEntity@@8			; CPointEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CBaseDelay@@6B@				; CBaseDelay::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBaseDelay@@@8				; CBaseDelay `RTTI Type Descriptor'
PUBLIC	??_R3CBaseDelay@@8				; CBaseDelay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBaseDelay@@8				; CBaseDelay::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBaseDelay@@8			; CBaseDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CPathTrack@@6B@				; CPathTrack::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPathTrack@@@8				; CPathTrack `RTTI Type Descriptor'
PUBLIC	??_R3CPathTrack@@8				; CPathTrack::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPathTrack@@8				; CPathTrack::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPathTrack@@8			; CPathTrack::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CPathCorner@@6B@				; CPathCorner::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPathCorner@@@8				; CPathCorner `RTTI Type Descriptor'
PUBLIC	??_R3CPathCorner@@8				; CPathCorner::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPathCorner@@8				; CPathCorner::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPathCorner@@8			; CPathCorner::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CEntityFactory@VCPathCorner@@@@6B@	; CEntityFactory<CPathCorner>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CEntityFactory@VCPathCorner@@@@@8	; CEntityFactory<CPathCorner> `RTTI Type Descriptor'
PUBLIC	??_R3?$CEntityFactory@VCPathCorner@@@@8		; CEntityFactory<CPathCorner>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CEntityFactory@VCPathCorner@@@@8		; CEntityFactory<CPathCorner>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CEntityFactory@VCPathCorner@@@@8 ; CEntityFactory<CPathCorner>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$CEntityFactory@VCPathTrack@@@@6B@	; CEntityFactory<CPathTrack>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CEntityFactory@VCPathTrack@@@@@8	; CEntityFactory<CPathTrack> `RTTI Type Descriptor'
PUBLIC	??_R3?$CEntityFactory@VCPathTrack@@@@8		; CEntityFactory<CPathTrack>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CEntityFactory@VCPathTrack@@@@8		; CEntityFactory<CPathTrack>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CEntityFactory@VCPathTrack@@@@8	; CEntityFactory<CPathTrack>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@41000000
PUBLIC	__real@43340000
PUBLIC	__real@c1000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	_atoi:PROC
EXTRN	_sqrt:PROC
EXTRN	??0matrix4x4@@QAE@XZ:PROC			; matrix4x4::matrix4x4
EXTRN	?Q_atoi@@YAHPBD@Z:PROC				; Q_atoi
EXTRN	?Q_strncmp@@YAHPBD0H@Z:PROC			; Q_strncmp
EXTRN	__wassert:PROC
EXTRN	?UTIL_Remove@@YAXPAVCBaseEntity@@@Z:PROC	; UTIL_Remove
EXTRN	?EntityFactoryDictionary@@YAPAVIEntityFactoryDictionary@@XZ:PROC ; EntityFactoryDictionary
EXTRN	?DBG_EntOfVars@@YAPAUedict_s@@PBUentvars_s@@@Z:PROC ; DBG_EntOfVars
EXTRN	?UTIL_SetSize@@YAXPAUentvars_s@@ABVVector@@1@Z:PROC ; UTIL_SetSize
EXTRN	?UTIL_VecToAngles@@YA?AVVector@@ABV1@@Z:PROC	; UTIL_VecToAngles
EXTRN	?UTIL_FindEntityByTargetname@@YAPAVCBaseEntity@@PAV1@PBD@Z:PROC ; UTIL_FindEntityByTargetname
EXTRN	?DBG_AssertFunction@@YAXHPBD0H0@Z:PROC		; DBG_AssertFunction
EXTRN	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z:PROC	; UTIL_GetModelType
EXTRN	??0CMeshDesc@@QAE@XZ:PROC			; CMeshDesc::CMeshDesc
EXTRN	?GetDataDescMap@CBaseEntity@@UAEPAUdatamap_s@@XZ:PROC ; CBaseEntity::GetDataDescMap
EXTRN	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetAbsOrigin
EXTRN	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetLocalOrigin
EXTRN	?GetLocalAngles@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetLocalAngles
EXTRN	?GetAbsVelocity@CBaseEntity@@QBEABVVector@@XZ:PROC ; CBaseEntity::GetAbsVelocity
EXTRN	?Save@CBaseEntity@@UAEHAAVCSave@@@Z:PROC	; CBaseEntity::Save
EXTRN	?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z:PROC	; CBaseEntity::Restore
EXTRN	?SetObjectCollisionBox@CBaseEntity@@UAEXXZ:PROC	; CBaseEntity::SetObjectCollisionBox
EXTRN	?SetNextThink@CBaseEntity@@UAEXM@Z:PROC		; CBaseEntity::SetNextThink
EXTRN	?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z:PROC ; CBaseEntity::TraceAttack
EXTRN	?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z:PROC ; CBaseEntity::TakeDamage
EXTRN	?TakeHealth@CBaseEntity@@UAEHMH@Z:PROC		; CBaseEntity::TakeHealth
EXTRN	?TakeArmor@CBaseEntity@@UAEHMH@Z:PROC		; CBaseEntity::TakeArmor
EXTRN	?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z:PROC	; CBaseEntity::Killed
EXTRN	?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z:PROC ; CBaseEntity::TraceBleed
EXTRN	?DamageDecal@CBaseEntity@@UAEHH@Z:PROC		; CBaseEntity::DamageDecal
EXTRN	?IsInWorld@CBaseEntity@@UAEHH@Z:PROC		; CBaseEntity::IsInWorld
EXTRN	?GetNextTarget@CBaseEntity@@UAEPAV1@XZ:PROC	; CBaseEntity::GetNextTarget
EXTRN	?ShouldToggle@CBaseEntity@@QAEHW4USE_TYPE@@H@Z:PROC ; CBaseEntity::ShouldToggle
EXTRN	?FVisible@CBaseEntity@@UAEHPAV1@@Z:PROC		; CBaseEntity::FVisible
EXTRN	?FVisible@CBaseEntity@@UAEHABVVector@@@Z:PROC	; CBaseEntity::FVisible
EXTRN	?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z:PROC	; CBaseEntity::ShouldCollide
EXTRN	?Spawn@CPointEntity@@UAEXXZ:PROC		; CPointEntity::Spawn
EXTRN	?KeyValue@CBaseDelay@@UAEXPAUKeyValueData_s@@@Z:PROC ; CBaseDelay::KeyValue
EXTRN	?GetDataDescMap@CBaseDelay@@UAEPAUdatamap_s@@XZ:PROC ; CBaseDelay::GetDataDescMap
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?g_vecZero@@3VVector@@B:BYTE			; g_vecZero
EXTRN	?g_engfuncs@@3Uenginefuncs_s@@A:BYTE		; g_engfuncs
EXTRN	?m_DataMap@CBaseEntity@@2Udatamap_s@@A:BYTE	; CBaseEntity::m_DataMap
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
?path_corner@@3V?$CEntityFactory@VCPathCorner@@@@A DD 01H DUP (?) ; path_corner
?g_DataMapHolder@CPathTrack_DataDescInit@@3PAUdatamap_s@@A DD 01H DUP (?) ; CPathTrack_DataDescInit::g_DataMapHolder
_BSS	ENDS
;	COMDAT ?nameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4VCDatadescGeneratedNameHolder@@A
_BSS	SEGMENT
?nameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4VCDatadescGeneratedNameHolder@@A DB 01cH DUP (?) ; `DataMapInit<CPathTrack>'::`2'::nameHolder
_BSS	ENDS
;	COMDAT ?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA
_BSS	SEGMENT
?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',VCPathTrack::taMapInit>
_BSS	ENDS
_BSS	SEGMENT
?path_track@@3V?$CEntityFactory@VCPathTrack@@@@A DD 01H DUP (?) ; path_track
_BSS	ENDS
CRT$XCU	SEGMENT
?path_corner$initializer$@@3P6AXXZA DD FLAT:??__Epath_corner@@YAXXZ ; path_corner$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c1000000
CONST	SEGMENT
__real@c1000000 DD 0c1000000r			; -8
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CEntityFactory@VCPathTrack@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CEntityFactory@VCPathTrack@@@@8 DD FLAT:??_R0?AV?$CEntityFactory@VCPathTrack@@@@@8 ; CEntityFactory<CPathTrack>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CEntityFactory@VCPathTrack@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CEntityFactory@VCPathTrack@@@@8
rdata$r	SEGMENT
??_R2?$CEntityFactory@VCPathTrack@@@@8 DD FLAT:??_R1A@?0A@EA@?$CEntityFactory@VCPathTrack@@@@8 ; CEntityFactory<CPathTrack>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CEntityFactory@VCPathTrack@@@@8
rdata$r	SEGMENT
??_R3?$CEntityFactory@VCPathTrack@@@@8 DD 00H		; CEntityFactory<CPathTrack>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CEntityFactory@VCPathTrack@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CEntityFactory@VCPathTrack@@@@@8
data$r	SEGMENT
??_R0?AV?$CEntityFactory@VCPathTrack@@@@@8 DD FLAT:??_7type_info@@6B@ ; CEntityFactory<CPathTrack> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CEntityFactory@VCPathTrack@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CEntityFactory@VCPathTrack@@@@6B@
rdata$r	SEGMENT
??_R4?$CEntityFactory@VCPathTrack@@@@6B@ DD 00H		; CEntityFactory<CPathTrack>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CEntityFactory@VCPathTrack@@@@@8
	DD	FLAT:??_R3?$CEntityFactory@VCPathTrack@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CEntityFactory@VCPathCorner@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CEntityFactory@VCPathCorner@@@@8 DD FLAT:??_R0?AV?$CEntityFactory@VCPathCorner@@@@@8 ; CEntityFactory<CPathCorner>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CEntityFactory@VCPathCorner@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CEntityFactory@VCPathCorner@@@@8
rdata$r	SEGMENT
??_R2?$CEntityFactory@VCPathCorner@@@@8 DD FLAT:??_R1A@?0A@EA@?$CEntityFactory@VCPathCorner@@@@8 ; CEntityFactory<CPathCorner>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CEntityFactory@VCPathCorner@@@@8
rdata$r	SEGMENT
??_R3?$CEntityFactory@VCPathCorner@@@@8 DD 00H		; CEntityFactory<CPathCorner>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CEntityFactory@VCPathCorner@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CEntityFactory@VCPathCorner@@@@@8
data$r	SEGMENT
??_R0?AV?$CEntityFactory@VCPathCorner@@@@@8 DD FLAT:??_7type_info@@6B@ ; CEntityFactory<CPathCorner> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CEntityFactory@VCPathCorner@@@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$CEntityFactory@VCPathCorner@@@@6B@
rdata$r	SEGMENT
??_R4?$CEntityFactory@VCPathCorner@@@@6B@ DD 00H	; CEntityFactory<CPathCorner>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CEntityFactory@VCPathCorner@@@@@8
	DD	FLAT:??_R3?$CEntityFactory@VCPathCorner@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPathCorner@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPathCorner@@8 DD FLAT:??_R0?AVCPathCorner@@@8 ; CPathCorner::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPathCorner@@8
rdata$r	ENDS
;	COMDAT ??_R2CPathCorner@@8
rdata$r	SEGMENT
??_R2CPathCorner@@8 DD FLAT:??_R1A@?0A@EA@CPathCorner@@8 ; CPathCorner::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseDelay@@8
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CPathCorner@@8
rdata$r	SEGMENT
??_R3CPathCorner@@8 DD 00H				; CPathCorner::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CPathCorner@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPathCorner@@@8
data$r	SEGMENT
??_R0?AVCPathCorner@@@8 DD FLAT:??_7type_info@@6B@	; CPathCorner `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPathCorner@@', 00H
data$r	ENDS
;	COMDAT ??_R4CPathCorner@@6B@
rdata$r	SEGMENT
??_R4CPathCorner@@6B@ DD 00H				; CPathCorner::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPathCorner@@@8
	DD	FLAT:??_R3CPathCorner@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPathTrack@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPathTrack@@8 DD FLAT:??_R0?AVCPathTrack@@@8 ; CPathTrack::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPathTrack@@8
rdata$r	ENDS
;	COMDAT ??_R2CPathTrack@@8
rdata$r	SEGMENT
??_R2CPathTrack@@8 DD FLAT:??_R1A@?0A@EA@CPathTrack@@8	; CPathTrack::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CPointEntity@@8
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CPathTrack@@8
rdata$r	SEGMENT
??_R3CPathTrack@@8 DD 00H				; CPathTrack::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CPathTrack@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPathTrack@@@8
data$r	SEGMENT
??_R0?AVCPathTrack@@@8 DD FLAT:??_7type_info@@6B@	; CPathTrack `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPathTrack@@', 00H
data$r	ENDS
;	COMDAT ??_R4CPathTrack@@6B@
rdata$r	SEGMENT
??_R4CPathTrack@@6B@ DD 00H				; CPathTrack::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPathTrack@@@8
	DD	FLAT:??_R3CPathTrack@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseDelay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseDelay@@8 DD FLAT:??_R0?AVCBaseDelay@@@8 ; CBaseDelay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseDelay@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseDelay@@8
rdata$r	SEGMENT
??_R2CBaseDelay@@8 DD FLAT:??_R1A@?0A@EA@CBaseDelay@@8	; CBaseDelay::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CBaseDelay@@8
rdata$r	SEGMENT
??_R3CBaseDelay@@8 DD 00H				; CBaseDelay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CBaseDelay@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseDelay@@@8
data$r	SEGMENT
??_R0?AVCBaseDelay@@@8 DD FLAT:??_7type_info@@6B@	; CBaseDelay `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseDelay@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBaseDelay@@6B@
rdata$r	SEGMENT
??_R4CBaseDelay@@6B@ DD 00H				; CBaseDelay::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseDelay@@@8
	DD	FLAT:??_R3CBaseDelay@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPointEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPointEntity@@8 DD FLAT:??_R0?AVCPointEntity@@@8 ; CPointEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPointEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2CPointEntity@@8
rdata$r	SEGMENT
??_R2CPointEntity@@8 DD FLAT:??_R1A@?0A@EA@CPointEntity@@8 ; CPointEntity::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R3CPointEntity@@8
rdata$r	SEGMENT
??_R3CPointEntity@@8 DD 00H				; CPointEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2CPointEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPointEntity@@@8
data$r	SEGMENT
??_R0?AVCPointEntity@@@8 DD FLAT:??_7type_info@@6B@	; CPointEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPointEntity@@', 00H
data$r	ENDS
;	COMDAT ??_R4CPointEntity@@6B@
rdata$r	SEGMENT
??_R4CPointEntity@@6B@ DD 00H				; CPointEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCPointEntity@@@8
	DD	FLAT:??_R3CPointEntity@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IEntityFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IEntityFactory@@8 DD FLAT:??_R0?AVIEntityFactory@@@8 ; IEntityFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R2IEntityFactory@@8
rdata$r	SEGMENT
??_R2IEntityFactory@@8 DD FLAT:??_R1A@?0A@EA@IEntityFactory@@8 ; IEntityFactory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IEntityFactory@@8
rdata$r	SEGMENT
??_R3IEntityFactory@@8 DD 00H				; IEntityFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIEntityFactory@@@8
data$r	SEGMENT
??_R0?AVIEntityFactory@@@8 DD FLAT:??_7type_info@@6B@	; IEntityFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIEntityFactory@@', 00H
data$r	ENDS
;	COMDAT ??_R4IEntityFactory@@6B@
rdata$r	SEGMENT
??_R4IEntityFactory@@6B@ DD 00H				; IEntityFactory::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIEntityFactory@@@8
	DD	FLAT:??_R3IEntityFactory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBaseEntity@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBaseEntity@@8 DD FLAT:??_R0?AVCBaseEntity@@@8 ; CBaseEntity::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R2CBaseEntity@@8
rdata$r	SEGMENT
??_R2CBaseEntity@@8 DD FLAT:??_R1A@?0A@EA@CBaseEntity@@8 ; CBaseEntity::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3CBaseEntity@@8
rdata$r	SEGMENT
??_R3CBaseEntity@@8 DD 00H				; CBaseEntity::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBaseEntity@@@8
data$r	SEGMENT
??_R0?AVCBaseEntity@@@8 DD FLAT:??_7type_info@@6B@	; CBaseEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCBaseEntity@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBaseEntity@@6B@
rdata$r	SEGMENT
??_R4CBaseEntity@@6B@ DD 00H				; CBaseEntity::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCBaseEntity@@@8
	DD	FLAT:??_R3CBaseEntity@@8
rdata$r	ENDS
;	COMDAT ??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@
CONST	SEGMENT
??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@ DB 'I'
	DB	00H, 's', 00H, 'I', 00H, 'd', 00H, 'x', 00H, 'V', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'd', 00H, '(', 00H, 'i', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@
CONST	SEGMENT
??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@ DB '!'
	DB	00H, 'I', 00H, 's', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	'O', 00H, 'n', 00H, 'l', 00H, 'y', 00H, '(', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
CONST	SEGMENT
??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, '\'
	DB	00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'l', 00H, 'o', 00H
	DB	'a', 00H, 'd', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0', 00H
	DB	'.', 00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'v'
	DB	00H, '.', 00H, '1', 00H, '_', 00H, 'w', 00H, 'i', 00H, 't', 00H
	DB	'h', 00H, '_', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'x', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, 'x', 00H, 't', 00H, '_', 00H, 'v', 00H, '0', 00H, '.'
	DB	00H, '8', 00H, '1', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'v', 00H
	DB	'.', 00H, '1', 00H, '_', 00H, 's', 00H, 'r', 00H, 'c', 00H, '\'
	DB	00H, 'g', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '_', 00H, 's', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'd', 00H, '\', 00H, 'u'
	DB	00H, 't', 00H, 'l', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H
	DB	'r', 00H, 'y', 00H, '.', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$CEntityFactory@VCPathTrack@@@@6B@
CONST	SEGMENT
??_7?$CEntityFactory@VCPathTrack@@@@6B@ DD FLAT:??_R4?$CEntityFactory@VCPathTrack@@@@6B@ ; CEntityFactory<CPathTrack>::`vftable'
	DD	FLAT:?Create@?$CEntityFactory@VCPathTrack@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z
	DD	FLAT:?Destroy@?$CEntityFactory@VCPathTrack@@@@UAEXPAVCBaseEntity@@@Z
	DD	FLAT:?GetEntitySize@?$CEntityFactory@VCPathTrack@@@@UAEIXZ
CONST	ENDS
;	COMDAT ?dataDesc@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4PAUtypedescription_s@@A
_DATA	SEGMENT
?dataDesc@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4PAUtypedescription_s@@A DD 012H ; `DataMapInit<CPathTrack>'::`2'::dataDesc
	DD	00H
	DD	00H
	DW	00H
	DW	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$SG74816
	DD	0674H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:$SG74817
	DD	067cH
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:$SG74818
	DD	0684H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:$SG74819
	DD	0680H
	DW	01H
	DW	02H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:$SG74820
	DD	0678H
	DW	01H
	DW	06H
	DD	FLAT:$SG74821
	DD	00H
	DD	0aH
	DD	FLAT:$SG74822
	DD	0688H
	DW	01H
	DW	06H
	DD	FLAT:$SG74823
	DD	00H
	DD	01H
	DD	FLAT:$SG74824
	DD	068cH
	DW	01H
	DW	06H
	DD	FLAT:$SG74825
	DD	00H
	DD	01H
	DD	FLAT:$SG74826
	DD	0690H
	DW	01H
	DW	06H
	DD	FLAT:$SG74827
	DD	00H
_DATA	ENDS
;	COMDAT ??_7?$CEntityFactory@VCPathCorner@@@@6B@
CONST	SEGMENT
??_7?$CEntityFactory@VCPathCorner@@@@6B@ DD FLAT:??_R4?$CEntityFactory@VCPathCorner@@@@6B@ ; CEntityFactory<CPathCorner>::`vftable'
	DD	FLAT:?Create@?$CEntityFactory@VCPathCorner@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z
	DD	FLAT:?Destroy@?$CEntityFactory@VCPathCorner@@@@UAEXPAVCBaseEntity@@@Z
	DD	FLAT:?GetEntitySize@?$CEntityFactory@VCPathCorner@@@@UAEIXZ
CONST	ENDS
;	COMDAT ??_C@_0CA@HKJKIBBD@?$CBFStringNull?$CI?5pev?9?$DOtargetname?5?$CJ@
CONST	SEGMENT
??_C@_0CA@HKJKIBBD@?$CBFStringNull?$CI?5pev?9?$DOtargetname?5?$CJ@ DB '!F'
	DB	'StringNull( pev->targetname )', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GF@CMELHPPL@c?3?2users?2user?2downloads?2xashxt_@
CONST	SEGMENT
??_C@_0GF@CMELHPPL@c?3?2users?2user?2downloads?2xashxt_@ DB 'c:\users\use'
	DB	'r\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.'
	DB	'1_src\server\pathcorner.cpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@PKGMINCF@path_corner?5without?5a?5targetnam@
CONST	SEGMENT
??_C@_0CB@PKGMINCF@path_corner?5without?5a?5targetnam@ DB 'path_corner wi'
	DB	'thout a targetname', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CPathCorner@@6B@
CONST	SEGMENT
??_7CPathCorner@@6B@ DD FLAT:??_R4CPathCorner@@6B@	; CPathCorner::`vftable'
	DD	FLAT:?GetDataDescMap@CBaseDelay@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CPathCorner@@UAEXXZ
	DD	FLAT:?Precache@CBaseEntity@@UAEXXZ
	DD	FLAT:?KeyValue@CBaseDelay@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CPathCorner@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseDelay@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CPathCorner@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7CPathTrack@@6B@
CONST	SEGMENT
??_7CPathTrack@@6B@ DD FLAT:??_R4CPathTrack@@6B@	; CPathTrack::`vftable'
	DD	FLAT:?GetDataDescMap@CPathTrack@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CPathTrack@@UAEXXZ
	DD	FLAT:?Precache@CBaseEntity@@UAEXXZ
	DD	FLAT:?KeyValue@CPathTrack@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CPointEntity@@UAEHXZ
	DD	FLAT:?Activate@CPathTrack@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CPathTrack@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CPathTrack@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7CBaseDelay@@6B@
CONST	SEGMENT
??_7CBaseDelay@@6B@ DD FLAT:??_R4CBaseDelay@@6B@	; CBaseDelay::`vftable'
	DD	FLAT:?GetDataDescMap@CBaseDelay@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CBaseEntity@@UAEXXZ
	DD	FLAT:?Precache@CBaseEntity@@UAEXXZ
	DD	FLAT:?KeyValue@CBaseDelay@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CBaseEntity@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseDelay@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_7CPointEntity@@6B@
CONST	SEGMENT
??_7CPointEntity@@6B@ DD FLAT:??_R4CPointEntity@@6B@	; CPointEntity::`vftable'
	DD	FLAT:?GetDataDescMap@CBaseEntity@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CPointEntity@@UAEXXZ
	DD	FLAT:?Precache@CBaseEntity@@UAEXXZ
	DD	FLAT:?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CPointEntity@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JILDNHAP@vlight_cache@
CONST	SEGMENT
??_C@_0N@JILDNHAP@vlight_cache@ DB 'vlight_cache', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IKCANML@reflection@
CONST	SEGMENT
??_C@_0L@IKCANML@reflection@ DB 'reflection', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IAKJCFIM@style@
CONST	SEGMENT
??_C@_05IAKJCFIM@style@ DB 'style', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EAELDHJO@parentflags@
CONST	SEGMENT
??_C@_0M@EAELDHJO@parentflags@ DB 'parentflags', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JJJAOBDI@movewith@
CONST	SEGMENT
??_C@_08JJJAOBDI@movewith@ DB 'movewith', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLLIHIP@null@
CONST	SEGMENT
??_C@_04MLLLIHIP@null@ DB 'null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CBaseEntity@@6B@
CONST	SEGMENT
??_7CBaseEntity@@6B@ DD FLAT:??_R4CBaseEntity@@6B@	; CBaseEntity::`vftable'
	DD	FLAT:?GetDataDescMap@CBaseEntity@@UAEPAUdatamap_s@@XZ
	DD	FLAT:?Spawn@CBaseEntity@@UAEXXZ
	DD	FLAT:?Precache@CBaseEntity@@UAEXXZ
	DD	FLAT:?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z
	DD	FLAT:?Save@CBaseEntity@@UAEHAAVCSave@@@Z
	DD	FLAT:?Restore@CBaseEntity@@UAEHAAVCRestore@@@Z
	DD	FLAT:?ObjectCaps@CBaseEntity@@UAEHXZ
	DD	FLAT:?Activate@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnChangeLevel@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnTeleport@CBaseEntity@@UAEXXZ
	DD	FLAT:?PortalSleep@CBaseEntity@@UAEXM@Z
	DD	FLAT:?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
	DD	FLAT:?GetPosition@CBaseEntity@@UAEMXZ
	DD	FLAT:?OnChangeParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnClearParent@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnRemove@CBaseEntity@@UAEXXZ
	DD	FLAT:?SetObjectCollisionBox@CBaseEntity@@UAEXXZ
	DD	FLAT:?Classify@CBaseEntity@@UAEHXZ
	DD	FLAT:?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
	DD	FLAT:?IsRigidBody@CBaseEntity@@UAEHXZ
	DD	FLAT:?SetNextThink@CBaseEntity@@UAEXM@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
	DD	FLAT:?GetState@CBaseEntity@@UAE?AW4STATE@@XZ
	DD	FLAT:?TraceAttack@CBaseEntity@@UAEXPAUentvars_s@@MVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?TakeDamage@CBaseEntity@@UAEHPAUentvars_s@@0MH@Z
	DD	FLAT:?TakeHealth@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?TakeArmor@CBaseEntity@@UAEHMH@Z
	DD	FLAT:?Killed@CBaseEntity@@UAEXPAUentvars_s@@H@Z
	DD	FLAT:?BloodColor@CBaseEntity@@UAEHXZ
	DD	FLAT:?TraceBleed@CBaseEntity@@UAEXMVVector@@PAUgametrace_s@@H@Z
	DD	FLAT:?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
	DD	FLAT:?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
	DD	FLAT:?GetToggleState@CBaseEntity@@UAEHXZ
	DD	FLAT:?AddPoints@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
	DD	FLAT:?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
	DD	FLAT:?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
	DD	FLAT:?GetDelay@CBaseEntity@@UAEMXZ
	DD	FLAT:?IsMoving@CBaseEntity@@UAEHXZ
	DD	FLAT:?OverrideReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?TransferReset@CBaseEntity@@UAEXXZ
	DD	FLAT:?DamageDecal@CBaseEntity@@UAEHH@Z
	DD	FLAT:?SetToggleState@CBaseEntity@@UAEXH@Z
	DD	FLAT:?StartSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?StopSneaking@CBaseEntity@@UAEXXZ
	DD	FLAT:?OnControls@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?IsSneaking@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsAlive@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBSPModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsCustomModel@CBaseEntity@@UAEHXZ
	DD	FLAT:?ReflectGauss@CBaseEntity@@UAEHXZ
	DD	FLAT:?HasTarget@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsInWorld@CBaseEntity@@UAEHH@Z
	DD	FLAT:?IsPlayer@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsNetClient@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMonster@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPushable@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsProjectile@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsFuncScreen@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsPortal@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsTank@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsMover@CBaseEntity@@UAEHXZ
	DD	FLAT:?IsBreakable@CBaseEntity@@UAEHXZ
	DD	FLAT:?TeamID@CBaseEntity@@UAEPBDXZ
	DD	FLAT:?GetNextTarget@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?Think@CBaseEntity@@UAEXXZ
	DD	FLAT:?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
	DD	FLAT:?Touch@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?Blocked@CBaseEntity@@UAEXPAV1@@Z
	DD	FLAT:?MoveDone@CBaseEntity@@UAEXXZ
	DD	FLAT:?Respawn@CBaseEntity@@UAEPAV1@XZ
	DD	FLAT:?UpdateOwner@CBaseEntity@@UAEXXZ
	DD	FLAT:?FBecomeProne@CBaseEntity@@UAEHXZ
	DD	FLAT:?Center@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
	DD	FLAT:?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
	DD	FLAT:?IsPointSized@CBaseEntity@@UBEHXZ
	DD	FLAT:?Illumination@CBaseEntity@@UAEHXZ
	DD	FLAT:?FVisible@CBaseEntity@@UAEHABVVector@@@Z
	DD	FLAT:?FVisible@CBaseEntity@@UAEHPAV1@@Z
	DD	FLAT:?ShouldCollide@CBaseEntity@@UAEHPAV1@@Z
CONST	ENDS
;	COMDAT ??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@
CONST	SEGMENT
??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@ DB 'Bad ent in OFFSET('
	DB	')', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7IEntityFactory@@6B@
CONST	SEGMENT
??_7IEntityFactory@@6B@ DD FLAT:??_R4IEntityFactory@@6B@ ; IEntityFactory::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z$0
__ehfuncinfo$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z$0
__ehfuncinfo$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z$0
__ehfuncinfo$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CUtlMemory@PADH@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z$0
__ehfuncinfo$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1CDatadescGeneratedNameHolder@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
?g_DataMapHolder$initializer$@CPathTrack_DataDescInit@@3P6AXXZA DD FLAT:??__Eg_DataMapHolder@CPathTrack_DataDescInit@@YAXXZ ; CPathTrack_DataDescInit::g_DataMapHolder$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?path_track$initializer$@@3P6AXXZA DD FLAT:??__Epath_track@@YAXXZ ; path_track$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??$Destruct@PAD@@YAXPAPAD@Z
_TEXT	SEGMENT
_pMemory$ = 8						; size = 4
??$Destruct@PAD@@YAXPAPAD@Z PROC			; Destruct<char *>, COMDAT

; 49   : {

	push	ebp
	mov	ebp, esp

; 50   : 	pMemory->~T();
; 51   : 
; 52   : #ifdef _DEBUG
; 53   : 	memset( pMemory, 0xDD, sizeof(T) );

	push	4
	push	221					; 000000ddH
	mov	eax, DWORD PTR _pMemory$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 54   : #endif
; 55   : }

	pop	ebp
	ret	0
??$Destruct@PAD@@YAXPAPAD@Z ENDP			; Destruct<char *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv85 = -24						; size = 4
$T3 = -20						; size = 4
_pev$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_newEnt$ = 8						; size = 4
_className$ = 12					; size = 4
??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z PROC ; GetClassPtr<CPathCorner>, COMDAT

; 1076 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1077 : 	entvars_t *pev = (entvars_t *)newEnt;

	mov	eax, DWORD PTR _newEnt$[ebp]
	mov	DWORD PTR _pev$[ebp], eax

; 1078 : 
; 1079 : 	// allocate entity if necessary
; 1080 : 	if (pev == NULL)

	cmp	DWORD PTR _pev$[ebp], 0
	jne	SHORT $LN2@GetClassPt

; 1081 : 		pev = VARS(CREATE_ENTITY());

	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+84
	push	eax
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	mov	DWORD PTR _pev$[ebp], eax
$LN2@GetClassPt:

; 1082 : 
; 1083 : 	// get the private data
; 1084 : 	newEnt = (T *)GET_PRIVATE(ENT(pev));

	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _newEnt$[ebp], eax

; 1085 : 
; 1086 : 	if (newEnt == NULL) 

	cmp	DWORD PTR _newEnt$[ebp], 0
	jne	SHORT $LN3@GetClassPt

; 1087 : 	{
; 1088 : 		// allocate private data 
; 1089 : 		newEnt = new(pev) T;

	mov	edx, DWORD PTR _pev$[ebp]
	push	edx
	push	1680					; 00000690H
	call	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z	; CBaseEntity::operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@GetClassPt
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CPathCorner@@QAE@XZ
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN6@GetClassPt
$LN5@GetClassPt:
	mov	DWORD PTR tv85[ebp], 0
$LN6@GetClassPt:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newEnt$[ebp], ecx

; 1090 : 		newEnt->pev = pev;

	mov	edx, DWORD PTR _newEnt$[ebp]
	mov	eax, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@GetClassPt:

; 1091 : 	}
; 1092 : 	newEnt->SetClassname( className );

	mov	ecx, DWORD PTR _className$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newEnt$[ebp]
	call	?SetClassname@CBaseEntity@@QAEXPBD@Z	; CBaseEntity::SetClassname

; 1093 : 
; 1094 : 	return newEnt;

	mov	eax, DWORD PTR _newEnt$[ebp]

; 1095 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z$0:
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z	; CBaseEntity::operator delete
	add	esp, 8
	ret	0
__ehhandler$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z ENDP ; GetClassPtr<CPathCorner>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z
_TEXT	SEGMENT
$T2 = -28						; size = 4
tv85 = -24						; size = 4
$T3 = -20						; size = 4
_pev$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_newEnt$ = 8						; size = 4
_className$ = 12					; size = 4
??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z PROC ; GetClassPtr<CPathTrack>, COMDAT

; 1076 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1077 : 	entvars_t *pev = (entvars_t *)newEnt;

	mov	eax, DWORD PTR _newEnt$[ebp]
	mov	DWORD PTR _pev$[ebp], eax

; 1078 : 
; 1079 : 	// allocate entity if necessary
; 1080 : 	if (pev == NULL)

	cmp	DWORD PTR _pev$[ebp], 0
	jne	SHORT $LN2@GetClassPt

; 1081 : 		pev = VARS(CREATE_ENTITY());

	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+84
	push	eax
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	mov	DWORD PTR _pev$[ebp], eax
$LN2@GetClassPt:

; 1082 : 
; 1083 : 	// get the private data
; 1084 : 	newEnt = (T *)GET_PRIVATE(ENT(pev));

	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	mov	DWORD PTR _newEnt$[ebp], eax

; 1085 : 
; 1086 : 	if (newEnt == NULL) 

	cmp	DWORD PTR _newEnt$[ebp], 0
	jne	SHORT $LN3@GetClassPt

; 1087 : 	{
; 1088 : 		// allocate private data 
; 1089 : 		newEnt = new(pev) T;

	mov	edx, DWORD PTR _pev$[ebp]
	push	edx
	push	1684					; 00000694H
	call	??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z	; CBaseEntity::operator new
	add	esp, 8
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN5@GetClassPt
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0CPathTrack@@QAE@XZ			; CPathTrack::CPathTrack
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN6@GetClassPt
$LN5@GetClassPt:
	mov	DWORD PTR tv85[ebp], 0
$LN6@GetClassPt:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newEnt$[ebp], ecx

; 1090 : 		newEnt->pev = pev;

	mov	edx, DWORD PTR _newEnt$[ebp]
	mov	eax, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN3@GetClassPt:

; 1091 : 	}
; 1092 : 	newEnt->SetClassname( className );

	mov	ecx, DWORD PTR _className$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _newEnt$[ebp]
	call	?SetClassname@CBaseEntity@@QAEXPBD@Z	; CBaseEntity::SetClassname

; 1093 : 
; 1094 : 	return newEnt;

	mov	eax, DWORD PTR _newEnt$[ebp]

; 1095 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z$0:
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z	; CBaseEntity::operator delete
	add	esp, 8
	ret	0
__ehhandler$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z ENDP ; GetClassPtr<CPathTrack>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
;	COMDAT ??__Epath_track@@YAXXZ
text$di	SEGMENT
??__Epath_track@@YAXXZ PROC				; `dynamic initializer for 'path_track'', COMDAT

; 50   : LINK_ENTITY_TO_CLASS( path_track, CPathTrack );

	push	ebp
	mov	ebp, esp
	push	OFFSET $SG74857
	mov	ecx, OFFSET ?path_track@@3V?$CEntityFactory@VCPathTrack@@@@A
	call	??0?$CEntityFactory@VCPathTrack@@@@QAE@PBD@Z ; CEntityFactory<CPathTrack>::CEntityFactory<CPathTrack>
	pop	ebp
	ret	0
??__Epath_track@@YAXXZ ENDP				; `dynamic initializer for 'path_track''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?GetEntitySize@?$CEntityFactory@VCPathTrack@@@@UAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEntitySize@?$CEntityFactory@VCPathTrack@@@@UAEIXZ PROC ; CEntityFactory<CPathTrack>::GetEntitySize, COMDAT
; _this$ = ecx

; 103  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 104  : 		return sizeof(T);

	mov	eax, 1684				; 00000694H

; 105  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetEntitySize@?$CEntityFactory@VCPathTrack@@@@UAEIXZ ENDP ; CEntityFactory<CPathTrack>::GetEntitySize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?Destroy@?$CEntityFactory@VCPathTrack@@@@UAEXPAVCBaseEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pEntity$ = 8						; size = 4
?Destroy@?$CEntityFactory@VCPathTrack@@@@UAEXPAVCBaseEntity@@@Z PROC ; CEntityFactory<CPathTrack>::Destroy, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 		UTIL_Remove( pEntity );

	mov	eax, DWORD PTR _pEntity$[ebp]
	push	eax
	call	?UTIL_Remove@@YAXPAVCBaseEntity@@@Z	; UTIL_Remove
	add	esp, 4

; 100  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Destroy@?$CEntityFactory@VCPathTrack@@@@UAEXPAVCBaseEntity@@@Z ENDP ; CEntityFactory<CPathTrack>::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?Create@?$CEntityFactory@VCPathTrack@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pEnt$ = -4						; size = 4
_pClassName$ = 8					; size = 4
_pev$ = 12						; size = 4
?Create@?$CEntityFactory@VCPathTrack@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z PROC ; CEntityFactory<CPathTrack>::Create, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		T* pEnt = GetClassPtr((T*)pev, pClassName);

	mov	eax, DWORD PTR _pClassName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	??$GetClassPtr@VCPathTrack@@@@YAPAVCPathTrack@@PAV0@PBD@Z ; GetClassPtr<CPathTrack>
	add	esp, 8
	mov	DWORD PTR _pEnt$[ebp], eax

; 94   : 		return pEnt;

	mov	eax, DWORD PTR _pEnt$[ebp]

; 95   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?Create@?$CEntityFactory@VCPathTrack@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z ENDP ; CEntityFactory<CPathTrack>::Create
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ??0?$CEntityFactory@VCPathTrack@@@@QAE@PBD@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
_pClassName$ = 8					; size = 4
??0?$CEntityFactory@VCPathTrack@@@@QAE@PBD@Z PROC	; CEntityFactory<CPathTrack>::CEntityFactory<CPathTrack>, COMDAT
; _this$ = ecx

; 86   : 	CEntityFactory( const char *pClassName )

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	{

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IEntityFactory@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CEntityFactory@VCPathTrack@@@@6B@

; 88   : 		EntityFactoryDictionary()->InstallFactory( this, pClassName );

	call	?EntityFactoryDictionary@@YAPAVIEntityFactoryDictionary@@XZ ; EntityFactoryDictionary
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR _pClassName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax

; 89   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CEntityFactory@VCPathTrack@@@@QAE@PBD@Z ENDP	; CEntityFactory<CPathTrack>::CEntityFactory<CPathTrack>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FnameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@YAXXZ
text$yd	SEGMENT
??__FnameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@YAXXZ PROC ; `DataMapInit<CPathTrack>'::`2'::`dynamic atexit destructor for 'nameHolder'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?nameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4VCDatadescGeneratedNameHolder@@A
	call	??1CDatadescGeneratedNameHolder@@QAE@XZ	; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder
	pop	ebp
	ret	0
??__FnameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@YAXXZ ENDP ; `DataMapInit<CPathTrack>'::`2'::`dynamic atexit destructor for 'nameHolder''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
;	COMDAT ??__Eg_DataMapHolder@CPathTrack_DataDescInit@@YAXXZ
text$di	SEGMENT
??__Eg_DataMapHolder@CPathTrack_DataDescInit@@YAXXZ PROC ; CPathTrack_DataDescInit::`dynamic initializer for 'g_DataMapHolder'', COMDAT

; 36   : BEGIN_DATADESC( CPathTrack )

	push	ebp
	mov	ebp, esp
	push	0
	call	??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z ; DataMapInit<CPathTrack>
	add	esp, 4
	mov	DWORD PTR ?g_DataMapHolder@CPathTrack_DataDescInit@@3PAUdatamap_s@@A, eax ; CPathTrack_DataDescInit::g_DataMapHolder
	pop	ebp
	ret	0
??__Eg_DataMapHolder@CPathTrack_DataDescInit@@YAXXZ ENDP ; CPathTrack_DataDescInit::`dynamic initializer for 'g_DataMapHolder''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z PROC ; DataMapInit<CPathTrack>

; 36   : BEGIN_DATADESC( CPathTrack )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@DataMapIni
	push	OFFSET ?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA, -1
	jne	SHORT $LN2@DataMapIni
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET $SG74828
	mov	ecx, OFFSET ?nameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4VCDatadescGeneratedNameHolder@@A
	call	??0CDatadescGeneratedNameHolder@@QAE@PBD@Z ; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder
	push	OFFSET ??__FnameHolder@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@YAXXZ ; `DataMapInit<CPathTrack>'::`2'::`dynamic atexit destructor for 'nameHolder''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA
	call	__Init_thread_footer
	add	esp, 4
$LN2@DataMapIni:
	call	?GetBaseMap@CPathTrack@@SAPAUdatamap_s@@XZ ; CPathTrack::GetBaseMap
	mov	DWORD PTR ?m_DataMap@CPathTrack@@2Udatamap_s@@A+12, eax

; 37   : 	DEFINE_FIELD( m_length, FIELD_FLOAT ),
; 38   : 	DEFINE_FIELD( m_pnext, FIELD_CLASSPTR ),
; 39   : 	DEFINE_FIELD( m_paltpath, FIELD_CLASSPTR ),
; 40   : 	DEFINE_FIELD( m_pprevious, FIELD_CLASSPTR ),
; 41   : 	DEFINE_KEYFIELD( m_altName, FIELD_STRING, "altpath" ),
; 42   : 	DEFINE_KEYFIELD( m_eOrientationType, FIELD_INTEGER, "type" ),
; 43   : 	DEFINE_KEYFIELD( m_iszFireFow, FIELD_STRING, "m_iszFireFow" ),
; 44   : 	DEFINE_KEYFIELD( m_iszFireRev, FIELD_STRING, "m_iszFireRev" ),
; 45   : #ifdef PATH_SPARKLE_DEBUG
; 46   : 	DEFINE_FUNCTION( Sparkle ),
; 47   : #endif
; 48   : END_DATADESC()

	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN3@DataMapIni
	mov	DWORD PTR ?m_DataMap@CPathTrack@@2Udatamap_s@@A+4, 8
	mov	edx, 24					; 00000018H
	shl	edx, 0
	add	edx, OFFSET ?dataDesc@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4PAUtypedescription_s@@A
	mov	DWORD PTR ?m_DataMap@CPathTrack@@2Udatamap_s@@A, edx
	jmp	SHORT $LN4@DataMapIni
$LN3@DataMapIni:
	mov	DWORD PTR ?m_DataMap@CPathTrack@@2Udatamap_s@@A+4, 1
	mov	DWORD PTR ?m_DataMap@CPathTrack@@2Udatamap_s@@A, OFFSET ?dataDesc@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4PAUtypedescription_s@@A
$LN4@DataMapIni:
	mov	eax, OFFSET ?m_DataMap@CPathTrack@@2Udatamap_s@@A ; CPathTrack::m_DataMap
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z$0:
	push	OFFSET ?$TSS0@?1???$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
__ehhandler$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$DataMapInit@VCPathTrack@@@@YAPAUdatamap_s@@PAVCPathTrack@@@Z ENDP ; DataMapInit<CPathTrack>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\common\datamap.h
;	COMDAT ??$DataMapAccess@VCPointEntity@@@@YAXPAVCPointEntity@@PAPAUdatamap_s@@@Z
_TEXT	SEGMENT
_ignored$ = 8						; size = 4
_p$ = 12						; size = 4
??$DataMapAccess@VCPointEntity@@@@YAXPAVCPointEntity@@PAPAUdatamap_s@@@Z PROC ; DataMapAccess<CPointEntity>, COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp

; 183  : 	*p = &T::m_DataMap;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], OFFSET ?m_DataMap@CBaseEntity@@2Udatamap_s@@A ; CBaseEntity::m_DataMap

; 184  : }

	pop	ebp
	ret	0
??$DataMapAccess@VCPointEntity@@@@YAXPAVCPointEntity@@PAPAUdatamap_s@@@Z ENDP ; DataMapAccess<CPointEntity>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
;	COMDAT ??__Epath_corner@@YAXXZ
text$di	SEGMENT
??__Epath_corner@@YAXXZ PROC				; `dynamic initializer for 'path_corner'', COMDAT

; 34   : LINK_ENTITY_TO_CLASS( path_corner, CPathCorner );

	push	ebp
	mov	ebp, esp
	push	OFFSET $SG74742
	mov	ecx, OFFSET ?path_corner@@3V?$CEntityFactory@VCPathCorner@@@@A
	call	??0?$CEntityFactory@VCPathCorner@@@@QAE@PBD@Z ; CEntityFactory<CPathCorner>::CEntityFactory<CPathCorner>
	pop	ebp
	ret	0
??__Epath_corner@@YAXXZ ENDP				; `dynamic initializer for 'path_corner''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?GetEntitySize@?$CEntityFactory@VCPathCorner@@@@UAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetEntitySize@?$CEntityFactory@VCPathCorner@@@@UAEIXZ PROC ; CEntityFactory<CPathCorner>::GetEntitySize, COMDAT
; _this$ = ecx

; 103  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 104  : 		return sizeof(T);

	mov	eax, 1680				; 00000690H

; 105  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetEntitySize@?$CEntityFactory@VCPathCorner@@@@UAEIXZ ENDP ; CEntityFactory<CPathCorner>::GetEntitySize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?Destroy@?$CEntityFactory@VCPathCorner@@@@UAEXPAVCBaseEntity@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pEntity$ = 8						; size = 4
?Destroy@?$CEntityFactory@VCPathCorner@@@@UAEXPAVCBaseEntity@@@Z PROC ; CEntityFactory<CPathCorner>::Destroy, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 99   : 		UTIL_Remove( pEntity );

	mov	eax, DWORD PTR _pEntity$[ebp]
	push	eax
	call	?UTIL_Remove@@YAXPAVCBaseEntity@@@Z	; UTIL_Remove
	add	esp, 4

; 100  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Destroy@?$CEntityFactory@VCPathCorner@@@@UAEXPAVCBaseEntity@@@Z ENDP ; CEntityFactory<CPathCorner>::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?Create@?$CEntityFactory@VCPathCorner@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pEnt$ = -4						; size = 4
_pClassName$ = 8					; size = 4
_pev$ = 12						; size = 4
?Create@?$CEntityFactory@VCPathCorner@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z PROC ; CEntityFactory<CPathCorner>::Create, COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 93   : 		T* pEnt = GetClassPtr((T*)pev, pClassName);

	mov	eax, DWORD PTR _pClassName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	??$GetClassPtr@VCPathCorner@@@@YAPAVCPathCorner@@PAV0@PBD@Z ; GetClassPtr<CPathCorner>
	add	esp, 8
	mov	DWORD PTR _pEnt$[ebp], eax

; 94   : 		return pEnt;

	mov	eax, DWORD PTR _pEnt$[ebp]

; 95   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
?Create@?$CEntityFactory@VCPathCorner@@@@UAEPAVCBaseEntity@@PBDPAUentvars_s@@@Z ENDP ; CEntityFactory<CPathCorner>::Create
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ??0?$CEntityFactory@VCPathCorner@@@@QAE@PBD@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
_pClassName$ = 8					; size = 4
??0?$CEntityFactory@VCPathCorner@@@@QAE@PBD@Z PROC	; CEntityFactory<CPathCorner>::CEntityFactory<CPathCorner>, COMDAT
; _this$ = ecx

; 86   : 	CEntityFactory( const char *pClassName )

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	{

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IEntityFactory@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$CEntityFactory@VCPathCorner@@@@6B@

; 88   : 		EntityFactoryDictionary()->InstallFactory( this, pClassName );

	call	?EntityFactoryDictionary@@YAPAVIEntityFactoryDictionary@@XZ ; EntityFactoryDictionary
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR _pClassName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax

; 89   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$CEntityFactory@VCPathCorner@@@@QAE@PBD@Z ENDP	; CEntityFactory<CPathCorner>::CEntityFactory<CPathCorner>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CPathCorner@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPathCorner@@QAE@XZ PROC				; CPathCorner::CPathCorner, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseDelay@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CPathCorner@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPathCorner@@QAE@XZ ENDP				; CPathCorner::CPathCorner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
;	COMDAT ?GetDelay@CPathCorner@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDelay@CPathCorner@@UAEMXZ PROC			; CPathCorner::GetDelay, COMDAT
; _this$ = ecx

; 31   : 	float GetDelay( void ) { return m_flWait; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+1652]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDelay@CPathCorner@@UAEMXZ ENDP			; CPathCorner::GetDelay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
;	COMDAT ?ObjectCaps@CPathCorner@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ObjectCaps@CPathCorner@@UAEHXZ PROC			; CPathCorner::ObjectCaps, COMDAT
; _this$ = ecx

; 30   : 	virtual int ObjectCaps( void ) { return BaseClass :: ObjectCaps() & ~FCAP_ACROSS_TRANSITION; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ObjectCaps@CBaseEntity@@UAEHXZ		; CBaseEntity::ObjectCaps
	and	eax, -3					; fffffffdH
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectCaps@CPathCorner@@UAEHXZ ENDP			; CPathCorner::ObjectCaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
;	COMDAT ?Spawn@CPathCorner@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv77 = -4						; size = 4
?Spawn@CPathCorner@@UAEXXZ PROC				; CPathCorner::Spawn, COMDAT
; _this$ = ecx

; 29   : 	void Spawn( void ) { ASSERTSZ( !FStringNull( pev->targetname ), "path_corner without a targetname" ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+460]
	push	edx
	call	?FStringNull@@YAHH@Z			; FStringNull
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@Spawn
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@Spawn
$LN3@Spawn:
	mov	DWORD PTR tv77[ebp], 0
$LN4@Spawn:
	push	OFFSET ??_C@_0CB@PKGMINCF@path_corner?5without?5a?5targetnam@
	push	29					; 0000001dH
	push	OFFSET ??_C@_0GF@CMELHPPL@c?3?2users?2user?2downloads?2xashxt_@
	push	OFFSET ??_C@_0CA@HKJKIBBD@?$CBFStringNull?$CI?5pev?9?$DOtargetname?5?$CJ@
	mov	eax, DWORD PTR tv77[ebp]
	push	eax
	call	?DBG_AssertFunction@@YAXHPBD0H0@Z	; DBG_AssertFunction
	add	esp, 20					; 00000014H
	mov	esp, ebp
	pop	ebp
	ret	0
?Spawn@CPathCorner@@UAEXXZ ENDP				; CPathCorner::Spawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDataDescMap@CPathTrack@@UAEPAUdatamap_s@@XZ PROC	; CPathTrack::GetDataDescMap
; _this$ = ecx

; 36   : BEGIN_DATADESC( CPathTrack )

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ?m_DataMap@CPathTrack@@2Udatamap_s@@A ; CPathTrack::m_DataMap
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDataDescMap@CPathTrack@@UAEPAUdatamap_s@@XZ ENDP	; CPathTrack::GetDataDescMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_pResult$ = -4						; size = 4
?GetBaseMap@CPathTrack@@SAPAUdatamap_s@@XZ PROC		; CPathTrack::GetBaseMap

; 36   : BEGIN_DATADESC( CPathTrack )

	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR _pResult$[ebp]
	push	eax
	push	0
	call	??$DataMapAccess@VCPointEntity@@@@YAXPAVCPointEntity@@PAPAUdatamap_s@@@Z ; DataMapAccess<CPointEntity>
	add	esp, 8
	mov	eax, DWORD PTR _pResult$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBaseMap@CPathTrack@@SAPAUdatamap_s@@XZ ENDP		; CPathTrack::GetBaseMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPrevious@CPathTrack@@QAEPAV1@XZ PROC		; CPathTrack::GetPrevious
; _this$ = ecx

; 225  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 226  : 	if( m_paltpath && FBitSet( pev->spawnflags, SF_PATH_ALTERNATE ) && FBitSet( pev->spawnflags, SF_PATH_ALTREVERSE ))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	SHORT $LN2@GetPreviou
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 32768				; 00008000H
	je	SHORT $LN2@GetPreviou
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 4
	je	SHORT $LN2@GetPreviou

; 227  : 		return m_paltpath;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+1668]
	jmp	SHORT $LN1@GetPreviou
$LN2@GetPreviou:

; 228  : 	
; 229  : 	return m_pprevious;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1664]
$LN1@GetPreviou:

; 230  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetPrevious@CPathTrack@@QAEPAV1@XZ ENDP		; CPathTrack::GetPrevious
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetNext@CPathTrack@@QAEPAV1@XZ PROC			; CPathTrack::GetNext
; _this$ = ecx

; 217  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	if( m_paltpath && FBitSet( pev->spawnflags, SF_PATH_ALTERNATE ) && !FBitSet( pev->spawnflags, SF_PATH_ALTREVERSE ))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	SHORT $LN2@GetNext
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 32768				; 00008000H
	je	SHORT $LN2@GetNext
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 4
	jne	SHORT $LN2@GetNext

; 219  : 		return m_paltpath;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+1668]
	jmp	SHORT $LN1@GetNext
$LN2@GetNext:

; 220  : 	
; 221  : 	return m_pnext;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1660]
$LN1@GetNext:

; 222  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetNext@CPathTrack@@QAEPAV1@XZ ENDP			; CPathTrack::GetNext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
$T1 = -60						; size = 12
$T2 = -48						; size = 12
_delta$ = -36						; size = 12
_pnearest$ = -24					; size = 4
_minDist$ = -20						; size = 4
_dist$ = -16						; size = 4
_deadCount$ = -12					; size = 4
_this$ = -8						; size = 4
_ppath$ = -4						; size = 4
_origin$ = 8						; size = 4
?Nearest@CPathTrack@@QAEPAV1@ABVVector@@@Z PROC		; CPathTrack::Nearest
; _this$ = ecx

; 327  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx

; 328  : 	int		deadCount;
; 329  : 	float		minDist, dist;
; 330  : 	Vector		delta;

	lea	ecx, DWORD PTR _delta$[ebp]
	call	??0Vector@@QAE@XZ			; Vector::Vector

; 331  : 	CPathTrack	*ppath, *pnearest;
; 332  : 
; 333  : 	delta = origin - GetLocalOrigin();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _origin$[ebp]
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _delta$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _delta$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _delta$[ebp+8], eax

; 334  : 	delta.z = 0;

	xorps	xmm0, xmm0
	movss	DWORD PTR _delta$[ebp+8], xmm0

; 335  : 	minDist = delta.Length();

	lea	ecx, DWORD PTR _delta$[ebp]
	call	?Length@Vector@@QBEMXZ			; Vector::Length
	fstp	DWORD PTR _minDist$[ebp]

; 336  : 	pnearest = this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pnearest$[ebp], ecx

; 337  : 	ppath = GetNext();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNext@CPathTrack@@QAEPAV1@XZ		; CPathTrack::GetNext
	mov	DWORD PTR _ppath$[ebp], eax

; 338  : 
; 339  : 	// Hey, I could use the old 2 racing pointers solution to this, but I'm lazy :)
; 340  : 	deadCount = 0;

	mov	DWORD PTR _deadCount$[ebp], 0
$LN2@Nearest:

; 341  : 
; 342  : 	while( ppath && ppath != this )

	cmp	DWORD PTR _ppath$[ebp], 0
	je	$LN3@Nearest
	mov	edx, DWORD PTR _ppath$[ebp]
	cmp	edx, DWORD PTR _this$[ebp]
	je	$LN3@Nearest

; 343  : 	{
; 344  : 		deadCount++;

	mov	eax, DWORD PTR _deadCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _deadCount$[ebp], eax

; 345  : 
; 346  : 		if( deadCount > 9999 )

	cmp	DWORD PTR _deadCount$[ebp], 9999	; 0000270fH
	jle	SHORT $LN4@Nearest

; 347  : 		{
; 348  : 			ALERT( at_error, "Bad sequence of path_tracks from %s", GetDebugName());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDebugName@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetDebugName
	push	eax
	push	OFFSET $SG75019
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 12					; 0000000cH

; 349  : 			return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@Nearest
$LN4@Nearest:

; 350  : 		}
; 351  : 
; 352  : 		delta = origin - ppath->GetLocalOrigin();

	mov	ecx, DWORD PTR _ppath$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _origin$[ebp]
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _delta$[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _delta$[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _delta$[ebp+8], edx

; 353  : 		delta.z = 0;

	xorps	xmm0, xmm0
	movss	DWORD PTR _delta$[ebp+8], xmm0

; 354  : 		dist = delta.Length();

	lea	ecx, DWORD PTR _delta$[ebp]
	call	?Length@Vector@@QBEMXZ			; Vector::Length
	fstp	DWORD PTR _dist$[ebp]

; 355  : 
; 356  : 		if( dist < minDist )

	movss	xmm0, DWORD PTR _minDist$[ebp]
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jbe	SHORT $LN5@Nearest

; 357  : 		{
; 358  : 			minDist = dist;

	movss	xmm0, DWORD PTR _dist$[ebp]
	movss	DWORD PTR _minDist$[ebp], xmm0

; 359  : 			pnearest = ppath;

	mov	eax, DWORD PTR _ppath$[ebp]
	mov	DWORD PTR _pnearest$[ebp], eax
$LN5@Nearest:

; 360  : 		}
; 361  : 
; 362  : 		ppath = ppath->GetNext();

	mov	ecx, DWORD PTR _ppath$[ebp]
	call	?GetNext@CPathTrack@@QAEPAV1@XZ		; CPathTrack::GetNext
	mov	DWORD PTR _ppath$[ebp], eax

; 363  : 	}

	jmp	$LN2@Nearest
$LN3@Nearest:

; 364  : 
; 365  : 	return pnearest;

	mov	eax, DWORD PTR _pnearest$[ebp]
$LN1@Nearest:

; 366  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Nearest@CPathTrack@@QAEPAV1@ABVVector@@@Z ENDP		; CPathTrack::Nearest
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
$T1 = -68						; size = 12
$T2 = -56						; size = 12
_dir$3 = -44						; size = 12
_currentPos$ = -32					; size = 12
_originalDist$ = -20					; size = 4
_length$4 = -16						; size = 4
_this$ = -12						; size = 4
_pcurrent$ = -8						; size = 4
tv86 = -2						; size = 1
_bForward$ = -1						; size = 1
_origin$ = 8						; size = 4
_dist$ = 12						; size = 4
_move$ = 16						; size = 4
_pNextNext$ = 20					; size = 4
?LookAhead@CPathTrack@@QAEPAV1@AAVVector@@MHPAPAV1@@Z PROC ; CPathTrack::LookAhead
; _this$ = ecx

; 249  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	mov	DWORD PTR _this$[ebp], ecx

; 250  : 	CPathTrack *pcurrent = this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pcurrent$[ebp], eax

; 251  : 	float originalDist = dist;

	movss	xmm0, DWORD PTR _dist$[ebp]
	movss	DWORD PTR _originalDist$[ebp], xmm0

; 252  : 	Vector currentPos = origin;

	mov	ecx, DWORD PTR _origin$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _currentPos$[ebp]
	call	??0Vector@@QAE@ABV0@@Z			; Vector::Vector

; 253  : 
; 254  : 	bool bForward = true;

	mov	BYTE PTR _bForward$[ebp], 1

; 255  : 	if ( dist < 0 )

	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jbe	SHORT $LN4@LookAhead

; 256  : 	{
; 257  : 		// Travelling backwards along the path.
; 258  : 		dist = -dist;

	movss	xmm0, DWORD PTR _dist$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR _dist$[ebp], xmm0

; 259  : 		bForward = false;

	mov	BYTE PTR _bForward$[ebp], 0
$LN4@LookAhead:

; 260  : 	}
; 261  : 
; 262  : 	// Move along the path, until we've gone 'dist' units or run out of path.
; 263  : 	while ( dist > 0 )

	movss	xmm0, DWORD PTR _dist$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	$LN3@LookAhead

; 264  : 	{
; 265  : 		// If there is no next path track, or it's disabled, we're done.
; 266  : 		if ( !ValidPath( pcurrent->GetNextInDir( bForward ), move ) )

	mov	edx, DWORD PTR _move$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bForward$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ValidPath@CPathTrack@@QAEPAV1@PAV1@H@Z	; CPathTrack::ValidPath
	test	eax, eax
	jne	SHORT $LN5@LookAhead

; 267  : 		{
; 268  : 			if ( !move )

	cmp	DWORD PTR _move$[ebp], 0
	jne	SHORT $LN6@LookAhead

; 269  : 			{
; 270  : 				Project( pcurrent->GetNextInDir( !bForward ), pcurrent, origin, dist );

	movzx	ecx, BYTE PTR _bForward$[ebp]
	test	ecx, ecx
	jne	SHORT $LN14@LookAhead
	mov	BYTE PTR tv86[ebp], 1
	jmp	SHORT $LN15@LookAhead
$LN14@LookAhead:
	mov	BYTE PTR tv86[ebp], 0
$LN15@LookAhead:
	push	ecx
	movss	xmm0, DWORD PTR _dist$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _origin$[ebp]
	push	edx
	mov	eax, DWORD PTR _pcurrent$[ebp]
	push	eax
	movzx	ecx, BYTE PTR tv86[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Project@CPathTrack@@QAEXPAV1@0AAVVector@@M@Z ; CPathTrack::Project
$LN6@LookAhead:

; 271  : 			}
; 272  : 
; 273  : 			return NULL;

	xor	eax, eax
	jmp	$LN1@LookAhead
$LN5@LookAhead:

; 274  : 		}
; 275  : 
; 276  : 		// The next path track is valid. How far are we from it?
; 277  : 		Vector dir = pcurrent->GetNextInDir( bForward )->GetLocalOrigin() - currentPos;

	lea	edx, DWORD PTR _currentPos$[ebp]
	push	edx
	lea	eax, DWORD PTR _dir$3[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bForward$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	ecx, eax
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	mov	ecx, eax
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-

; 278  : 		float length = dir.Length();

	lea	ecx, DWORD PTR _dir$3[ebp]
	call	?Length@Vector@@QBEMXZ			; Vector::Length
	fstp	DWORD PTR _length$4[ebp]

; 279  : 
; 280  : 		// If we are at the next node and there isn't one beyond it, return the next node.
; 281  : 		if ( !length  && !ValidPath( pcurrent->GetNextInDir( bForward )->GetNextInDir( bForward ), move ) )

	movss	xmm0, DWORD PTR _length$4[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN7@LookAhead
	mov	edx, DWORD PTR _move$[ebp]
	push	edx
	movzx	eax, BYTE PTR _bForward$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bForward$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	ecx, eax
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ValidPath@CPathTrack@@QAEPAV1@PAV1@H@Z	; CPathTrack::ValidPath
	test	eax, eax
	jne	SHORT $LN7@LookAhead

; 282  : 		{
; 283  : 			if ( pNextNext )

	cmp	DWORD PTR _pNextNext$[ebp], 0
	je	SHORT $LN8@LookAhead

; 284  : 			{
; 285  : 				*pNextNext = NULL;

	mov	edx, DWORD PTR _pNextNext$[ebp]
	mov	DWORD PTR [edx], 0
$LN8@LookAhead:

; 286  : 			}
; 287  : 
; 288  : 			if ( dist == originalDist )

	movss	xmm0, DWORD PTR _dist$[ebp]
	ucomiss	xmm0, DWORD PTR _originalDist$[ebp]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@LookAhead

; 289  : 			{
; 290  : 				// Didn't move at all, must be in a dead end.
; 291  : 				return NULL;

	xor	eax, eax
	jmp	$LN1@LookAhead
$LN9@LookAhead:

; 292  : 			}
; 293  : 
; 294  : 			return pcurrent->GetNextInDir( bForward );

	movzx	eax, BYTE PTR _bForward$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	jmp	$LN1@LookAhead
$LN7@LookAhead:

; 295  : 		}
; 296  : 
; 297  : 		// If we don't hit the next path track within the distance remaining, we're done.
; 298  : 		if ( length > dist )

	movss	xmm0, DWORD PTR _length$4[ebp]
	comiss	xmm0, DWORD PTR _dist$[ebp]
	jbe	SHORT $LN10@LookAhead

; 299  : 		{
; 300  : 			origin = currentPos + ( dir * ( dist / length ) );

	movss	xmm0, DWORD PTR _dist$[ebp]
	divss	xmm0, DWORD PTR _length$4[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dir$3[ebp]
	call	??DVector@@QBE?AV0@M@Z			; Vector::operator*
	push	eax
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	lea	ecx, DWORD PTR _currentPos$[ebp]
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	ecx, DWORD PTR _origin$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 301  : 			if ( pNextNext )

	cmp	DWORD PTR _pNextNext$[ebp], 0
	je	SHORT $LN11@LookAhead

; 302  : 			{
; 303  : 				*pNextNext = pcurrent->GetNextInDir( bForward );

	movzx	ecx, BYTE PTR _bForward$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	edx, DWORD PTR _pNextNext$[ebp]
	mov	DWORD PTR [edx], eax
$LN11@LookAhead:

; 304  : 			}
; 305  : 
; 306  : 			return pcurrent;

	mov	eax, DWORD PTR _pcurrent$[ebp]
	jmp	SHORT $LN1@LookAhead
$LN10@LookAhead:

; 307  : 		}
; 308  : 
; 309  : 		// We hit the next path track, advance to it.
; 310  : 		dist -= length;

	movss	xmm0, DWORD PTR _dist$[ebp]
	subss	xmm0, DWORD PTR _length$4[ebp]
	movss	DWORD PTR _dist$[ebp], xmm0

; 311  : 		currentPos = pcurrent->GetNextInDir( bForward )->GetLocalOrigin();

	movzx	eax, BYTE PTR _bForward$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	ecx, eax
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _currentPos$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _currentPos$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _currentPos$[ebp+8], eax

; 312  : 		pcurrent = pcurrent->GetNextInDir( bForward );

	movzx	ecx, BYTE PTR _bForward$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	DWORD PTR _pcurrent$[ebp], eax

; 313  : 		origin = currentPos;

	mov	edx, DWORD PTR _origin$[ebp]
	mov	eax, DWORD PTR _currentPos$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _currentPos$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _currentPos$[ebp+8]
	mov	DWORD PTR [edx+8], eax

; 314  : 	}

	jmp	$LN4@LookAhead
$LN3@LookAhead:

; 315  : 
; 316  : 	// We consumed all of the distance, and exactly landed on a path track.
; 317  : 	if ( pNextNext )

	cmp	DWORD PTR _pNextNext$[ebp], 0
	je	SHORT $LN12@LookAhead

; 318  : 	{
; 319  : 		*pNextNext = pcurrent->GetNextInDir( bForward );

	movzx	ecx, BYTE PTR _bForward$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pcurrent$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	edx, DWORD PTR _pNextNext$[ebp]
	mov	DWORD PTR [edx], eax
$LN12@LookAhead:

; 320  : 	}
; 321  : 
; 322  : 	return pcurrent;

	mov	eax, DWORD PTR _pcurrent$[ebp]
$LN1@LookAhead:

; 323  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?LookAhead@CPathTrack@@QAEPAV1@AAVVector@@MHPAPAV1@@Z ENDP ; CPathTrack::LookAhead
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?Instance@CPathTrack@@SAPAV1@PAUedict_s@@@Z PROC	; CPathTrack::Instance

; 394  : { 

	push	ebp
	mov	ebp, esp

; 395  : 	if( FClassnameIs( pent, "path_track" ))

	push	OFFSET $SG75039
	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?FClassnameIs@@YAHPAUedict_s@@PBD@Z	; FClassnameIs
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@Instance

; 396  : 		return (CPathTrack *)GET_PRIVATE( pent );

	mov	ecx, DWORD PTR _pent$[ebp]
	push	ecx
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4
	jmp	SHORT $LN1@Instance
$LN2@Instance:

; 397  : 
; 398  : 	return NULL;

	xor	eax, eax
$LN1@Instance:

; 399  : }

	pop	ebp
	ret	0
?Instance@CPathTrack@@SAPAV1@PAUedict_s@@@Z ENDP	; CPathTrack::Instance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_bForward$ = 8						; size = 1
?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z PROC		; CPathTrack::GetNextInDir
; _this$ = ecx

; 240  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 241  : 	if ( bForward )

	movzx	eax, BYTE PTR _bForward$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetNextInD

; 242  : 		return GetNext();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNext@CPathTrack@@QAEPAV1@XZ		; CPathTrack::GetNext
	jmp	SHORT $LN1@GetNextInD
$LN2@GetNextInD:

; 243  : 
; 244  : 	return GetPrevious();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPrevious@CPathTrack@@QAEPAV1@XZ	; CPathTrack::GetPrevious
$LN1@GetNextInD:

; 245  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z ENDP		; CPathTrack::GetNextInDir
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_vecDir$ = -40						; size = 12
_angDir$ = -28						; size = 12
_pPrev$ = -16						; size = 4
_pNext$ = -12						; size = 4
_this$ = -8						; size = 4
tv82 = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
_bForwardDir$ = 12					; size = 1
?GetOrientation@CPathTrack@@QAE?AVVector@@_N@Z PROC	; CPathTrack::GetOrientation
; _this$ = ecx

; 369  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	DWORD PTR _this$[ebp], ecx

; 370  : 	if( m_eOrientationType == TrackOrientation_FacePathAngles )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1672], 2
	jne	SHORT $LN2@GetOrienta

; 371  : 	{
; 372  : 		return GetLocalAngles();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetLocalAngles@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalAngles
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@ABV0@@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@GetOrienta
$LN2@GetOrienta:

; 373  : 	}
; 374  : 
; 375  : 	CPathTrack *pPrev = this;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pPrev$[ebp], ecx

; 376  : 	CPathTrack *pNext = GetNextInDir( bForwardDir );

	movzx	edx, BYTE PTR _bForwardDir$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	DWORD PTR _pNext$[ebp], eax

; 377  : 
; 378  : 	if( !pNext )

	cmp	DWORD PTR _pNext$[ebp], 0
	jne	SHORT $LN3@GetOrienta

; 379  : 	{	
; 380  : 		pPrev = GetNextInDir( !bForwardDir );

	movzx	eax, BYTE PTR _bForwardDir$[ebp]
	test	eax, eax
	jne	SHORT $LN5@GetOrienta
	mov	BYTE PTR tv82[ebp], 1
	jmp	SHORT $LN6@GetOrienta
$LN5@GetOrienta:
	mov	BYTE PTR tv82[ebp], 0
$LN6@GetOrienta:
	movzx	ecx, BYTE PTR tv82[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetNextInDir@CPathTrack@@QAEPAV1@_N@Z	; CPathTrack::GetNextInDir
	mov	DWORD PTR _pPrev$[ebp], eax

; 381  : 		pNext = this;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR _pNext$[ebp], edx
$LN3@GetOrienta:

; 382  : 	}
; 383  : 
; 384  : 	Vector vecDir = pNext->GetLocalOrigin() - pPrev->GetLocalOrigin();

	mov	ecx, DWORD PTR _pPrev$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	push	eax
	lea	eax, DWORD PTR _vecDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNext$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	mov	ecx, eax
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-

; 385  : 
; 386  : 	Vector angDir = UTIL_VecToAngles( vecDir );

	lea	ecx, DWORD PTR _vecDir$[ebp]
	push	ecx
	lea	edx, DWORD PTR _angDir$[ebp]
	push	edx
	call	?UTIL_VecToAngles@@YA?AVVector@@ABV1@@Z	; UTIL_VecToAngles
	add	esp, 8

; 387  : 	// The train actually points west
; 388  : 	angDir.y += 180;

	movss	xmm0, DWORD PTR _angDir$[ebp+4]
	addss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR _angDir$[ebp+4], xmm0

; 389  : 
; 390  : 	return angDir;

	lea	eax, DWORD PTR _angDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@ABV0@@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@GetOrienta:

; 391  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?GetOrientation@CPathTrack@@QAE?AVVector@@_N@Z ENDP	; CPathTrack::GetOrientation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
$T1 = -52						; size = 12
$T2 = -40						; size = 12
$T3 = -28						; size = 12
_dir$4 = -16						; size = 12
_this$ = -4						; size = 4
_pstart$ = 8						; size = 4
_pend$ = 12						; size = 4
_origin$ = 16						; size = 4
_dist$ = 20						; size = 4
?Project@CPathTrack@@QAEXPAV1@0AAVVector@@M@Z PROC	; CPathTrack::Project
; _this$ = ecx

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	DWORD PTR _this$[ebp], ecx

; 208  : 	if( pstart && pend )

	cmp	DWORD PTR _pstart$[ebp], 0
	je	SHORT $LN2@Project
	cmp	DWORD PTR _pend$[ebp], 0
	je	SHORT $LN2@Project

; 209  : 	{
; 210  : 		Vector dir = (pend->GetLocalOrigin() - pstart->GetLocalOrigin());

	mov	ecx, DWORD PTR _pstart$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	push	eax
	lea	eax, DWORD PTR _dir$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _pend$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	mov	ecx, eax
	call	??GVector@@QBE?AV0@ABV0@@Z		; Vector::operator-

; 211  : 		dir = dir.Normalize();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dir$4[ebp]
	call	?Normalize@Vector@@QBE?AV1@XZ		; Vector::Normalize
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR _dir$4[ebp], edx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _dir$4[ebp+4], ecx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR _dir$4[ebp+8], edx

; 212  : 		origin = pend->GetLocalOrigin() + dir * dist;

	push	ecx
	movss	xmm0, DWORD PTR _dist$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR _dir$4[ebp]
	call	??DVector@@QBE?AV0@M@Z			; Vector::operator*
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pend$[ebp]
	call	?GetLocalOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetLocalOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	edx, DWORD PTR _origin$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], eax
$LN2@Project:

; 213  : 	}
; 214  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Project@CPathTrack@@QAEXPAV1@0AAVVector@@M@Z ENDP	; CPathTrack::Project
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ppath$ = 8						; size = 4
_testFlag$ = 12						; size = 4
?ValidPath@CPathTrack@@QAEPAV1@PAV1@H@Z PROC		; CPathTrack::ValidPath
; _this$ = ecx

; 196  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 197  : 	if( !ppath )

	cmp	DWORD PTR _ppath$[ebp], 0
	jne	SHORT $LN2@ValidPath

; 198  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@ValidPath
$LN2@ValidPath:

; 199  : 
; 200  : 	if( testFlag && FBitSet( ppath->pev->spawnflags, SF_PATH_DISABLED ))

	cmp	DWORD PTR _testFlag$[ebp], 0
	je	SHORT $LN3@ValidPath
	mov	eax, DWORD PTR _ppath$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+416]
	and	edx, 1
	je	SHORT $LN3@ValidPath

; 201  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@ValidPath
$LN3@ValidPath:

; 202  : 
; 203  : 	return ppath;

	mov	eax, DWORD PTR _ppath$[ebp]
$LN1@ValidPath:

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	8
?ValidPath@CPathTrack@@QAEPAV1@PAV1@H@Z ENDP		; CPathTrack::ValidPath
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
tv151 = -16						; size = 4
tv74 = -12						; size = 4
_on$ = -8						; size = 4
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
_pCaller$ = 12						; size = 4
_useType$ = 16						; size = 4
_value$ = 20						; size = 4
?Use@CPathTrack@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z PROC ; CPathTrack::Use
; _this$ = ecx

; 103  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 104  : 	int on;
; 105  : 
; 106  : 	// Use toggles between two paths
; 107  : 	if( m_paltpath )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	$LN2@Use

; 108  : 	{
; 109  : 		on = !FBitSet( pev->spawnflags, SF_PATH_ALTERNATE );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 32768				; 00008000H
	jne	SHORT $LN11@Use
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN12@Use
$LN11@Use:
	mov	DWORD PTR tv74[ebp], 0
$LN12@Use:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _on$[ebp], ecx

; 110  : 		if( ShouldToggle( useType, on ))

	mov	edx, DWORD PTR _on$[ebp]
	push	edx
	mov	eax, DWORD PTR _useType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShouldToggle@CBaseEntity@@QAEHW4USE_TYPE@@H@Z ; CBaseEntity::ShouldToggle
	test	eax, eax
	je	SHORT $LN4@Use

; 111  : 		{
; 112  : 			if( on ) SetBits( pev->spawnflags, SF_PATH_ALTERNATE );

	cmp	DWORD PTR _on$[ebp], 0
	je	SHORT $LN5@Use
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	or	eax, 32768				; 00008000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+416], eax
	jmp	SHORT $LN4@Use
$LN5@Use:

; 113  : 			else ClearBits( pev->spawnflags, SF_PATH_ALTERNATE );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+416]
	and	edx, -32769				; ffff7fffH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+416], edx
$LN4@Use:

; 114  : 		}
; 115  : 	}
; 116  : 	else	

	jmp	SHORT $LN1@Use
$LN2@Use:

; 117  : 	{
; 118  : 		// Use toggles between enabled/disabled
; 119  : 		on = !FBitSet( pev->spawnflags, SF_PATH_DISABLED );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+416]
	and	ecx, 1
	jne	SHORT $LN13@Use
	mov	DWORD PTR tv151[ebp], 1
	jmp	SHORT $LN14@Use
$LN13@Use:
	mov	DWORD PTR tv151[ebp], 0
$LN14@Use:
	mov	edx, DWORD PTR tv151[ebp]
	mov	DWORD PTR _on$[ebp], edx

; 120  : 
; 121  : 		if( ShouldToggle( useType, on ))

	mov	eax, DWORD PTR _on$[ebp]
	push	eax
	mov	ecx, DWORD PTR _useType$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ShouldToggle@CBaseEntity@@QAEHW4USE_TYPE@@H@Z ; CBaseEntity::ShouldToggle
	test	eax, eax
	je	SHORT $LN1@Use

; 122  : 		{
; 123  : 			if( on ) SetBits( pev->spawnflags, SF_PATH_DISABLED );

	cmp	DWORD PTR _on$[ebp], 0
	je	SHORT $LN8@Use
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+416]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+416], ecx
	jmp	SHORT $LN1@Use
$LN8@Use:

; 124  : 			else ClearBits( pev->spawnflags, SF_PATH_DISABLED );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, -2					; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+416], eax
$LN1@Use:

; 125  : 		}
; 126  : 	}
; 127  : }

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Use@CPathTrack@@UAEXPAVCBaseEntity@@0W4USE_TYPE@@M@Z ENDP ; CPathTrack::Use
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_pTarget$ = -8						; size = 4
_this$ = -4						; size = 4
?Link@CPathTrack@@QAEXXZ PROC				; CPathTrack::Link
; _this$ = ecx

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 131  : 	CBaseEntity *pTarget;
; 132  : 
; 133  : 	if( !FStringNull( pev->target ))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+456]
	push	edx
	call	?FStringNull@@YAHH@Z			; FStringNull
	add	esp, 4
	test	eax, eax
	jne	$LN2@Link

; 134  : 	{
; 135  : 		pTarget = UTIL_FindEntityByTargetname( NULL, GetTarget( ));

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTarget@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetTarget
	push	eax
	push	0
	call	?UTIL_FindEntityByTargetname@@YAPAVCBaseEntity@@PAV1@PBD@Z ; UTIL_FindEntityByTargetname
	add	esp, 8
	mov	DWORD PTR _pTarget$[ebp], eax

; 136  : 
; 137  : 		if( pTarget == this )

	mov	eax, DWORD PTR _pTarget$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN3@Link

; 138  : 		{
; 139  : 			ALERT( at_error, "path_track (%s) refers to itself as a target!\n", GetDebugName());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDebugName@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetDebugName
	push	eax
	push	OFFSET $SG74918
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@Link
$LN3@Link:

; 140  : 		}
; 141  : 		else if( pTarget )

	cmp	DWORD PTR _pTarget$[ebp], 0
	je	SHORT $LN5@Link

; 142  : 		{
; 143  : 			m_pnext = CPathTrack :: Instance( pTarget->edict() );

	mov	ecx, DWORD PTR _pTarget$[ebp]
	call	?edict@CBaseEntity@@QAEPAUedict_s@@XZ	; CBaseEntity::edict
	push	eax
	call	?Instance@CPathTrack@@SAPAV1@PAUedict_s@@@Z ; CPathTrack::Instance
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1660], eax

; 144  : 
; 145  : 			// if no next pointer, this is the end of a path
; 146  : 			if( m_pnext )

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1660], 0
	je	SHORT $LN7@Link

; 147  : 				m_pnext->SetPrevious( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+1660]
	call	?SetPrevious@CPathTrack@@QAEXPAV1@@Z	; CPathTrack::SetPrevious
$LN7@Link:

; 148  : 		}
; 149  : 		else

	jmp	SHORT $LN2@Link
$LN5@Link:

; 150  : 		{
; 151  : 			ALERT( at_warning, "Dead end link %s\n", GetTarget());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTarget@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetTarget
	push	eax
	push	OFFSET $SG74922
	push	3
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 12					; 0000000cH
$LN2@Link:

; 152  : 		}
; 153  : 	}
; 154  : 
; 155  : 	// Find "alternate" path
; 156  : 	if( m_altName )

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+1656], 0
	je	SHORT $LN1@Link

; 157  : 	{
; 158  : 		pTarget = UTIL_FindEntityByTargetname( NULL, STRING( m_altName ));

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1656]
	push	ecx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	push	0
	call	?UTIL_FindEntityByTargetname@@YAPAVCBaseEntity@@PAV1@PBD@Z ; UTIL_FindEntityByTargetname
	add	esp, 8
	mov	DWORD PTR _pTarget$[ebp], eax

; 159  : 
; 160  : 		if( pTarget )

	cmp	DWORD PTR _pTarget$[ebp], 0
	je	SHORT $LN1@Link

; 161  : 		{
; 162  : 			m_paltpath = CPathTrack :: Instance( pTarget->edict() );

	mov	ecx, DWORD PTR _pTarget$[ebp]
	call	?edict@CBaseEntity@@QAEPAUedict_s@@XZ	; CBaseEntity::edict
	push	eax
	call	?Instance@CPathTrack@@SAPAV1@PAUedict_s@@@Z ; CPathTrack::Instance
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1668], eax

; 163  : 
; 164  : 			// if no next pointer, this is the end of a path
; 165  : 			if( m_paltpath )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	SHORT $LN1@Link

; 166  : 				m_paltpath->SetPrevious( this );

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+1668]
	call	?SetPrevious@CPathTrack@@QAEXPAV1@@Z	; CPathTrack::SetPrevious
$LN1@Link:

; 167  : 		}
; 168  : 	}
; 169  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Link@CPathTrack@@QAEXXZ ENDP				; CPathTrack::Link
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pprev$ = 8						; size = 4
?SetPrevious@CPathTrack@@QAEXPAV1@@Z PROC		; CPathTrack::SetPrevious
; _this$ = ecx

; 233  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 234  : 	// Only set previous if this isn't my alternate path
; 235  : 	if( pprev && !FStrEq( pprev->GetTargetname(), STRING( m_altName )))

	cmp	DWORD PTR _pprev$[ebp], 0
	je	SHORT $LN1@SetPreviou
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1656]
	push	ecx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pprev$[ebp]
	call	?GetTargetname@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetTargetname
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@SetPreviou

; 236  : 		m_pprevious = pprev;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _pprev$[ebp]
	mov	DWORD PTR [edx+1664], eax
$LN1@SetPreviou:

; 237  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?SetPrevious@CPathTrack@@QAEXPAV1@@Z ENDP		; CPathTrack::SetPrevious
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CPathTrack@@UAE?AW4STATE@@XZ PROC		; CPathTrack::GetState
; _this$ = ecx

; 86   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 87   : 	// Use toggles between two paths
; 88   : 	if( m_paltpath )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1668], 0
	je	SHORT $LN2@GetState

; 89   : 	{
; 90   : 		if( FBitSet( pev->spawnflags, SF_PATH_ALTERNATE ))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 32768				; 00008000H
	je	SHORT $LN4@GetState

; 91   : 			return STATE_ON;

	mov	eax, 1
	jmp	SHORT $LN1@GetState
$LN4@GetState:

; 92   : 	}
; 93   : 	else	

	jmp	SHORT $LN3@GetState
$LN2@GetState:

; 94   : 	{
; 95   : 		if( FBitSet( pev->spawnflags, SF_PATH_DISABLED ))

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+416]
	and	eax, 1
	je	SHORT $LN3@GetState

; 96   : 			return STATE_ON; // yes, there is no error, disabled path is STATE_ON

	mov	eax, 1
	jmp	SHORT $LN1@GetState
$LN3@GetState:

; 97   : 	}
; 98   : 
; 99   : 	return STATE_OFF;

	xor	eax, eax
$LN1@GetState:

; 100  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@CPathTrack@@UAE?AW4STATE@@XZ ENDP		; CPathTrack::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pkvd$ = 8						; size = 4
?KeyValue@CPathTrack@@UAEXPAUKeyValueData_s@@@Z PROC	; CPathTrack::KeyValue
; _this$ = ecx

; 61   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 62   : 	if( FStrEq( pkvd->szKeyName, "altpath" ))

	push	OFFSET $SG74876
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@KeyValue

; 63   : 	{
; 64   : 		m_altName = ALLOC_STRING( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1656], eax

; 65   : 		pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN2@KeyValue:

; 66   : 	}
; 67   : 	else if( FStrEq( pkvd->szKeyName, "m_iszFireFow" ))

	push	OFFSET $SG74879
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@KeyValue

; 68   : 	{
; 69   : 		m_iszFireFow = ALLOC_STRING( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1676], eax

; 70   : 		pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN4@KeyValue:

; 71   : 	}
; 72   : 	else if( FStrEq( pkvd->szKeyName, "m_iszFireRev" ))

	push	OFFSET $SG74882
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@KeyValue

; 73   : 	{
; 74   : 		m_iszFireRev = ALLOC_STRING( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1680], eax

; 75   : 		pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	SHORT $LN1@KeyValue
$LN6@KeyValue:

; 76   : 	}
; 77   : 	else if( FStrEq( pkvd->szKeyName, "type" ))

	push	OFFSET $SG74885
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@KeyValue

; 78   : 	{
; 79   : 		m_eOrientationType = Q_atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1672], eax

; 80   : 		pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	SHORT $LN1@KeyValue
$LN8@KeyValue:

; 81   : 	}
; 82   : 	else BaseClass::KeyValue( pkvd );

	mov	eax, DWORD PTR _pkvd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z ; CBaseEntity::KeyValue
$LN1@KeyValue:

; 83   : }

	mov	esp, ebp
	pop	ebp
	ret	4
?KeyValue@CPathTrack@@UAEXPAUKeyValueData_s@@@Z ENDP	; CPathTrack::KeyValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Activate@CPathTrack@@UAEXXZ PROC			; CPathTrack::Activate
; _this$ = ecx

; 187  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 188  : 	BaseClass::Activate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Activate@CBaseEntity@@UAEXXZ		; CBaseEntity::Activate

; 189  : 
; 190  : 	// link to next, and back-link
; 191  : 	if( !FStringNull( pev->targetname ))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+460]
	push	edx
	call	?FStringNull@@YAHH@Z			; FStringNull
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@Activate

; 192  : 		Link();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Link@CPathTrack@@QAEXXZ		; CPathTrack::Link
$LN1@Activate:

; 193  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Activate@CPathTrack@@UAEXXZ ENDP			; CPathTrack::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
$T1 = -28						; size = 12
$T2 = -16						; size = 12
_this$ = -4						; size = 4
?Spawn@CPathTrack@@UAEXXZ PROC				; CPathTrack::Spawn
; _this$ = ecx

; 172  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx

; 173  : 	pev->solid = SOLID_TRIGGER;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+268], 1

; 174  : 	UTIL_SetSize( pev, Vector( -8, -8, -8 ), Vector( 8, 8, 8 ));

	push	ecx
	movss	xmm0, DWORD PTR __real@41000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@41000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR __real@c1000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c1000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@c1000000
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?UTIL_SetSize@@YAXPAUentvars_s@@ABVVector@@1@Z ; UTIL_SetSize
	add	esp, 12					; 0000000cH

; 175  : 
; 176  : 	m_pnext = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1660], 0

; 177  : 	m_pprevious = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1664], 0

; 178  : 
; 179  : // DEBUGGING CODE
; 180  : #ifdef PATH_SPARKLE_DEBUG
; 181  : 	SetThink( Sparkle );
; 182  : 	pev->nextthink = gpGlobals->time + 0.5;
; 183  : #endif
; 184  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Spawn@CPathTrack@@UAEXXZ ENDP				; CPathTrack::Spawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\pathcorner.cpp
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPathTrack@@QAE@XZ PROC				; CPathTrack::CPathTrack
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CPointEntity@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CPathTrack@@6B@

; 54   : 	m_eOrientationType = TrackOrientation_FacePath;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1672], 1

; 55   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPathTrack@@QAE@XZ ENDP				; CPathTrack::CPathTrack
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CBaseDelay@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBaseDelay@@QAE@XZ PROC				; CBaseDelay::CBaseDelay, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEntity@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseDelay@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseDelay@@QAE@XZ ENDP				; CBaseDelay::CBaseDelay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseDelay@@UAE?AW4STATE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CBaseDelay@@UAE?AW4STATE@@XZ PROC		; CBaseDelay::GetState, COMDAT
; _this$ = ecx

; 867  : 	virtual STATE GetState( void ) { return m_iState; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1676]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@CBaseDelay@@UAE?AW4STATE@@XZ ENDP		; CBaseDelay::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CPointEntity@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CPointEntity@@QAE@XZ PROC				; CPointEntity::CPointEntity, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CBaseEntity@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CPointEntity@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPointEntity@@QAE@XZ ENDP				; CPointEntity::CPointEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ObjectCaps@CPointEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ObjectCaps@CPointEntity@@UAEHXZ PROC			; CPointEntity::ObjectCaps, COMDAT
; _this$ = ecx

; 823  : 	virtual int ObjectCaps( void ) { return CBaseEntity :: ObjectCaps() & ~FCAP_ACROSS_TRANSITION; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ObjectCaps@CBaseEntity@@UAEHXZ		; CBaseEntity::ObjectCaps
	and	eax, -3					; fffffffdH
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectCaps@CPointEntity@@UAEHXZ ENDP			; CPointEntity::ObjectCaps
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CBaseEntity@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CBaseEntity@@QAE@XZ PROC				; CBaseEntity::CBaseEntity, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CBaseEntity@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 112				; 00000070H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 136				; 00000088H
	call	??0Vector@@QAE@XZ			; Vector::Vector
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??0matrix4x4@@QAE@XZ			; matrix4x4::matrix4x4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 248				; 000000f8H
	call	??0CMeshDesc@@QAE@XZ			; CMeshDesc::CMeshDesc
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CBaseEntity@@QAE@XZ ENDP				; CBaseEntity::CBaseEntity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Illumination@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Illumination@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::Illumination, COMDAT
; _this$ = ecx

; 706  : 	virtual int Illumination( ) { return GETENTITYILLUM( ENT( pev ) ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+60
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?Illumination@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::Illumination
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPointSized@CBaseEntity@@UBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv70 = -1						; size = 1
?IsPointSized@CBaseEntity@@UBEHXZ PROC			; CBaseEntity::IsPointSized, COMDAT
; _this$ = ecx

; 704  : 	virtual BOOL IsPointSized() const { return (pev->size == g_vecZero) ? true : false; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?g_vecZero@@3VVector@@B		; g_vecZero
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 244				; 000000f4H
	call	??8Vector@@QBEHABV0@@Z			; Vector::operator==
	test	eax, eax
	je	SHORT $LN3@IsPointSiz
	mov	BYTE PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsPointSiz
$LN3@IsPointSiz:
	mov	BYTE PTR tv70[ebp], 0
$LN4@IsPointSiz:
	movzx	eax, BYTE PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPointSized@CBaseEntity@@UBEHXZ ENDP			; CBaseEntity::IsPointSized
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_posSrc$ = 12						; size = 4
?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z PROC	; CBaseEntity::BodyTarget, COMDAT
; _this$ = ecx

; 703  : 	virtual Vector BodyTarget( const Vector &posSrc ) { return Center( ); };		// position to shoot at

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+300]
	call	eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
?BodyTarget@CBaseEntity@@UAE?AVVector@@ABV2@@Z ENDP	; CBaseEntity::BodyTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?EarPosition@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EarPosition@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::EarPosition, COMDAT
; _this$ = ecx

; 702  : 	virtual Vector EarPosition( ) { return GetAbsOrigin() + pev->view_ofs; };			// position of ears

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EarPosition@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::EarPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?EyePosition@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?EyePosition@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::EyePosition, COMDAT
; _this$ = ecx

; 701  : 	virtual Vector EyePosition( ) { return GetAbsOrigin() + pev->view_ofs; };			// position of eyes

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 372				; 00000174H
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsOrigin@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsOrigin
	mov	ecx, eax
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?EyePosition@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::EyePosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Center@CBaseEntity@@UAE?AVVector@@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Center@CBaseEntity@@UAE?AVVector@@XZ PROC		; CBaseEntity::Center, COMDAT
; _this$ = ecx

; 700  : 	virtual Vector Center( ) { return (pev->absmax + pev->absmin) * 0.5; }; // center point of entity

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 196				; 000000c4H
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	add	ecx, 208				; 000000d0H
	call	??HVector@@QBE?AV0@ABV0@@Z		; Vector::operator+
	mov	ecx, eax
	call	??DVector@@QBE?AV0@M@Z			; Vector::operator*
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Center@CBaseEntity@@UAE?AVVector@@XZ ENDP		; CBaseEntity::Center
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?edict@CBaseEntity@@QAEPAUedict_s@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?edict@CBaseEntity@@QAEPAUedict_s@@XZ PROC		; CBaseEntity::edict, COMDAT
; _this$ = ecx

; 696  : 	edict_t *edict() { return ENT( pev ); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?edict@CBaseEntity@@QAEPAUedict_s@@XZ ENDP		; CBaseEntity::edict
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?FBecomeProne@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?FBecomeProne@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::FBecomeProne, COMDAT
; _this$ = ecx

; 695  : 	virtual BOOL FBecomeProne( void ) {return FALSE;};

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?FBecomeProne@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::FBecomeProne
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?UpdateOwner@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?UpdateOwner@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::UpdateOwner, COMDAT
; _this$ = ecx

; 691  : 	virtual	void UpdateOwner( void ) { return; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateOwner@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::UpdateOwner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Respawn@CBaseEntity@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Respawn@CBaseEntity@@UAEPAV1@XZ PROC			; CBaseEntity::Respawn, COMDAT
; _this$ = ecx

; 499  : 	virtual CBaseEntity *Respawn( void ) { return NULL; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Respawn@CBaseEntity@@UAEPAV1@XZ ENDP			; CBaseEntity::Respawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z
_TEXT	SEGMENT
_pMem$ = 8						; size = 4
_pev$ = 12						; size = 4
??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z PROC		; CBaseEntity::operator delete, COMDAT

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		pev->flags |= FL_KILLME;

	mov	eax, DWORD PTR _pev$[ebp]
	mov	ecx, DWORD PTR [eax+420]
	or	ecx, 1073741824				; 40000000H
	mov	edx, DWORD PTR _pev$[ebp]
	mov	DWORD PTR [edx+420], ecx

; 484  : 	};

	pop	ebp
	ret	0
??3CBaseEntity@@SAXPAXPAUentvars_s@@@Z ENDP		; CBaseEntity::operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z
_TEXT	SEGMENT
_stAllocateBlock$ = 8					; size = 4
_pev$ = 12						; size = 4
??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z PROC		; CBaseEntity::operator new, COMDAT

; 475  : 	{

	push	ebp
	mov	ebp, esp

; 476  : 		return (void *)ALLOC_PRIVATE(ENT(pev), stAllocateBlock);

	mov	eax, DWORD PTR _stAllocateBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pev$[ebp]
	push	ecx
	call	?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z	; ENT
	add	esp, 4
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+252
	add	esp, 8

; 477  : 	};

	pop	ebp
	ret	0
??2CBaseEntity@@SAPAXIPAUentvars_s@@@Z ENDP		; CBaseEntity::operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MoveDone@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MoveDone@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::MoveDone, COMDAT
; _this$ = ecx

; 471  : 	virtual void MoveDone( void ) { if( m_pfnMoveDone )(this->*m_pfnMoveDone)(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1648], 0
	je	SHORT $LN1@MoveDone
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1648]
	call	eax
$LN1@MoveDone:
	mov	esp, ebp
	pop	ebp
	ret	0
?MoveDone@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::MoveDone
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Blocked@CBaseEntity@@UAEXPAV1@@Z
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?Blocked@CBaseEntity@@UAEXPAV1@@Z PROC			; CBaseEntity::Blocked, COMDAT
; _this$ = ecx

; 462  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 		if( m_pfnBlocked )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1644], 0
	je	SHORT $LN2@Blocked

; 464  : 			(this->*m_pfnBlocked)( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1644]
	call	eax
$LN2@Blocked:

; 465  : 
; 466  : 		// forward the blocked event to our parent, if any.
; 467  : 		if( m_hParent != NULL )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??BEHANDLE@@QAEHXZ			; EHANDLE::operator int
	test	eax, eax
	je	SHORT $LN1@Blocked

; 468  : 			m_hParent->Blocked( pOther );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??CEHANDLE@@QAEPAVCBaseEntity@@XZ	; EHANDLE::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+280]
	call	edx
$LN1@Blocked:

; 469  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Blocked@CBaseEntity@@UAEXPAV1@@Z ENDP			; CBaseEntity::Blocked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Touch@CBaseEntity@@UAEXPAV1@@Z
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
_pOther$ = 8						; size = 4
?Touch@CBaseEntity@@UAEXPAV1@@Z PROC			; CBaseEntity::Touch, COMDAT
; _this$ = ecx

; 452  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 453  : 		if( m_pfnTouch )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1636], 0
	je	SHORT $LN2@Touch

; 454  : 			(this->*m_pfnTouch)( pOther );

	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1636]
	call	eax
$LN2@Touch:

; 455  : 
; 456  : 		// forward the blocked event to our parent, if any.
; 457  : 		if( m_hParent != NULL )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??BEHANDLE@@QAEHXZ			; EHANDLE::operator int
	test	eax, eax
	je	SHORT $LN1@Touch

; 458  : 			m_hParent->Touch( pOther );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 148				; 00000094H
	call	??CEHANDLE@@QAEPAVCBaseEntity@@XZ	; EHANDLE::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR _pOther$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+276]
	call	edx
$LN1@Touch:

; 459  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Touch@CBaseEntity@@UAEXPAV1@@Z ENDP			; CBaseEntity::Touch
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
_pCaller$ = 12						; size = 4
_useType$ = 16						; size = 4
_value$ = 20						; size = 4
?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z PROC	; CBaseEntity::Use, COMDAT
; _this$ = ecx

; 447  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 448  : 		if (m_pfnUse) (this->*m_pfnUse)( pActivator, pCaller, useType, value );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1640], 0
	je	SHORT $LN2@Use
	push	ecx
	movss	xmm0, DWORD PTR _value$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _useType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCaller$[ebp]
	push	edx
	mov	eax, DWORD PTR _pActivator$[ebp]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1640]
	call	eax
$LN2@Use:

; 449  : 	}

	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Use@CBaseEntity@@UAEXPAV1@0W4USE_TYPE@@M@Z ENDP	; CBaseEntity::Use
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Think@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Think@CBaseEntity@@UAEXXZ PROC				; CBaseEntity::Think, COMDAT
; _this$ = ecx

; 444  : 	virtual void Think( void ) { if (m_pfnThink) (this->*m_pfnThink)(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1632], 0
	je	SHORT $LN1@Think
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1632]
	call	eax
$LN1@Think:
	mov	esp, ebp
	pop	ebp
	ret	0
?Think@CBaseEntity@@UAEXXZ ENDP				; CBaseEntity::Think
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?TeamID@CBaseEntity@@UAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TeamID@CBaseEntity@@UAEPBDXZ PROC			; CBaseEntity::TeamID, COMDAT
; _this$ = ecx

; 433  : 	virtual const char	*TeamID( void ) { return ""; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET ??_C@_00CNPNBAHC@@
	mov	esp, ebp
	pop	ebp
	ret	0
?TeamID@CBaseEntity@@UAEPBDXZ ENDP			; CBaseEntity::TeamID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsBreakable@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsBreakable@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsBreakable, COMDAT
; _this$ = ecx

; 432  : 	virtual BOOL	IsBreakable( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBreakable@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsBreakable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMover@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMover@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMover, COMDAT
; _this$ = ecx

; 431  : 	virtual BOOL	IsMover( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMover@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMover
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsTank@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTank@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsTank, COMDAT
; _this$ = ecx

; 430  : 	virtual BOOL	IsTank( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTank@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsTank
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPortal@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPortal@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPortal, COMDAT
; _this$ = ecx

; 429  : 	virtual BOOL	IsPortal( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPortal@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPortal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsFuncScreen@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsFuncScreen@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsFuncScreen, COMDAT
; _this$ = ecx

; 428  : 	virtual BOOL	IsFuncScreen( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsFuncScreen@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsFuncScreen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsProjectile@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsProjectile@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsProjectile, COMDAT
; _this$ = ecx

; 427  : 	virtual BOOL	IsProjectile( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsProjectile@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsProjectile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPushable@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPushable@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPushable, COMDAT
; _this$ = ecx

; 426  : 	virtual BOOL	IsPushable( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPushable@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPushable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMonster@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
?IsMonster@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMonster, COMDAT
; _this$ = ecx

; 425  : 	virtual BOOL	IsMonster( void ) { return (pev->flags & FL_MONSTER ? TRUE : FALSE); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+420]
	and	edx, 32					; 00000020H
	je	SHORT $LN3@IsMonster
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@IsMonster
$LN3@IsMonster:
	mov	DWORD PTR tv68[ebp], 0
$LN4@IsMonster:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMonster@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMonster
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsNetClient@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsNetClient@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsNetClient, COMDAT
; _this$ = ecx

; 424  : 	virtual BOOL	IsNetClient( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsNetClient@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsNetClient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsPlayer@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsPlayer@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsPlayer, COMDAT
; _this$ = ecx

; 423  : 	virtual BOOL	IsPlayer( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsPlayer@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsPlayer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?HasTarget@CBaseEntity@@UAEHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_targetname$ = 8					; size = 4
?HasTarget@CBaseEntity@@UAEHH@Z PROC			; CBaseEntity::HasTarget, COMDAT
; _this$ = ecx

; 421  : 	virtual BOOL	HasTarget( string_t targetname ) { return FStrEq(STRING(targetname), STRING(pev->targetname) ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+460]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _targetname$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	mov	esp, ebp
	pop	ebp
	ret	4
?HasTarget@CBaseEntity@@UAEHH@Z ENDP			; CBaseEntity::HasTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ReflectGauss@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
?ReflectGauss@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::ReflectGauss, COMDAT
; _this$ = ecx

; 420  : 	virtual BOOL	ReflectGauss( void ) { return (( IsBSPModel() || IsCustomModel()) && !pev->takedamage ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+200]
	call	eax
	test	eax, eax
	jne	SHORT $LN3@ReflectGau
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+204]
	call	eax
	test	eax, eax
	je	SHORT $LN4@ReflectGau
$LN3@ReflectGau:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movss	xmm0, DWORD PTR [edx+364]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@ReflectGau
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN5@ReflectGau
$LN4@ReflectGau:
	mov	DWORD PTR tv77[ebp], 0
$LN5@ReflectGau:
	mov	eax, DWORD PTR tv77[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ReflectGauss@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::ReflectGauss
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsCustomModel@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsCustomModel@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsCustomModel, COMDAT
; _this$ = ecx

; 419  : 	virtual BOOL	IsCustomModel( void ) { return pev->solid == SOLID_CUSTOM; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+268], 5
	jne	SHORT $LN3@IsCustomMo
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsCustomMo
$LN3@IsCustomMo:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsCustomMo:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCustomModel@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsCustomModel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsBSPModel@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv69 = -4						; size = 4
?IsBSPModel@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsBSPModel, COMDAT
; _this$ = ecx

; 418  : 	virtual BOOL	IsBSPModel( void ) { return UTIL_GetModelType( pev->modelindex ) == mod_brush; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+180]
	push	edx
	call	?UTIL_GetModelType@@YA?AW4modtype_t@@H@Z ; UTIL_GetModelType
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@IsBSPModel
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@IsBSPModel
$LN3@IsBSPModel:
	mov	DWORD PTR tv69[ebp], 0
$LN4@IsBSPModel:
	mov	eax, DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsBSPModel@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsBSPModel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsAlive@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?IsAlive@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsAlive, COMDAT
; _this$ = ecx

; 417  : 	virtual BOOL	IsAlive( void ) { return (pev->deadflag == DEAD_NO) && pev->health > 0; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	DWORD PTR [ecx+368], 0
	jne	SHORT $LN3@IsAlive
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	movss	xmm0, DWORD PTR [eax+352]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@IsAlive
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@IsAlive
$LN3@IsAlive:
	mov	DWORD PTR tv70[ebp], 0
$LN4@IsAlive:
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsAlive@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsAlive
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsSneaking@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsSneaking@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsSneaking, COMDAT
; _this$ = ecx

; 416  : 	virtual BOOL	IsSneaking( void ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsSneaking@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnControls@CBaseEntity@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pTest$ = 8						; size = 4
?OnControls@CBaseEntity@@UAEHPAV1@@Z PROC		; CBaseEntity::OnControls, COMDAT
; _this$ = ecx

; 415  : 	virtual BOOL	OnControls( CBaseEntity *pTest ) { return FALSE; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?OnControls@CBaseEntity@@UAEHPAV1@@Z ENDP		; CBaseEntity::OnControls
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StopSneaking@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StopSneaking@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::StopSneaking, COMDAT
; _this$ = ecx

; 414  : 	virtual void	StopSneaking( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?StopSneaking@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::StopSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StartSneaking@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartSneaking@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::StartSneaking, COMDAT
; _this$ = ecx

; 413  : 	virtual void	StartSneaking( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?StartSneaking@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::StartSneaking
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?SetToggleState@CBaseEntity@@UAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_state$ = 8						; size = 4
?SetToggleState@CBaseEntity@@UAEXH@Z PROC		; CBaseEntity::SetToggleState, COMDAT
; _this$ = ecx

; 412  : 	virtual void	SetToggleState( int state ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetToggleState@CBaseEntity@@UAEXH@Z ENDP		; CBaseEntity::SetToggleState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?TransferReset@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TransferReset@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::TransferReset, COMDAT
; _this$ = ecx

; 409  : 	virtual void	TransferReset( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?TransferReset@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::TransferReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OverrideReset@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OverrideReset@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OverrideReset, COMDAT
; _this$ = ecx

; 408  : 	virtual void	OverrideReset( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OverrideReset@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OverrideReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsMoving@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsMoving@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsMoving, COMDAT
; _this$ = ecx

; 407  : 	virtual int	IsMoving( void ) { return GetAbsVelocity() != g_vecZero; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ?g_vecZero@@3VVector@@B		; g_vecZero
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetAbsVelocity@CBaseEntity@@QBEABVVector@@XZ ; CBaseEntity::GetAbsVelocity
	mov	ecx, eax
	call	??9Vector@@QBEHABV0@@Z			; Vector::operator!=
	mov	esp, ebp
	pop	ebp
	ret	0
?IsMoving@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsMoving
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetDelay@CBaseEntity@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDelay@CBaseEntity@@UAEMXZ PROC			; CBaseEntity::GetDelay, COMDAT
; _this$ = ecx

; 406  : 	virtual float	GetDelay( void ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDelay@CBaseEntity@@UAEMXZ ENDP			; CBaseEntity::GetDelay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GiveAmmo@CBaseEntity@@UAEHHPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_iAmount$ = 8						; size = 4
_szName$ = 12						; size = 4
_iMax$ = 16						; size = 4
?GiveAmmo@CBaseEntity@@UAEHHPADH@Z PROC			; CBaseEntity::GiveAmmo, COMDAT
; _this$ = ecx

; 405  : 	virtual int 	GiveAmmo( int iAmount, char *szName, int iMax ) { return -1; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GiveAmmo@CBaseEntity@@UAEHHPADH@Z ENDP			; CBaseEntity::GiveAmmo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pItem$ = 8						; size = 4
?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z PROC ; CBaseEntity::RemovePlayerItem, COMDAT
; _this$ = ecx

; 404  : 	virtual BOOL	RemovePlayerItem( CBasePlayerItem *pItem ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?RemovePlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ENDP ; CBaseEntity::RemovePlayerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pItem$ = 8						; size = 4
?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z PROC ; CBaseEntity::AddPlayerItem, COMDAT
; _this$ = ecx

; 403  : 	virtual BOOL	AddPlayerItem( CBasePlayerItem *pItem ) { return 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?AddPlayerItem@CBaseEntity@@UAEHPAVCBasePlayerItem@@@Z ENDP ; CBaseEntity::AddPlayerItem
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPointsToTeam@CBaseEntity@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_score$ = 8						; size = 4
_bAllowNegativeScore$ = 12				; size = 4
?AddPointsToTeam@CBaseEntity@@UAEXHH@Z PROC		; CBaseEntity::AddPointsToTeam, COMDAT
; _this$ = ecx

; 402  : 	virtual void	AddPointsToTeam( int score, BOOL bAllowNegativeScore ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?AddPointsToTeam@CBaseEntity@@UAEXHH@Z ENDP		; CBaseEntity::AddPointsToTeam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?AddPoints@CBaseEntity@@UAEXHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_score$ = 8						; size = 4
_bAllowNegativeScore$ = 12				; size = 4
?AddPoints@CBaseEntity@@UAEXHH@Z PROC			; CBaseEntity::AddPoints, COMDAT
; _this$ = ecx

; 401  : 	virtual void	AddPoints( int score, BOOL bAllowNegativeScore ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	8
?AddPoints@CBaseEntity@@UAEXHH@Z ENDP			; CBaseEntity::AddPoints
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetToggleState@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetToggleState@CBaseEntity@@UAEHXZ PROC		; CBaseEntity::GetToggleState, COMDAT
; _this$ = ecx

; 400  : 	virtual int	GetToggleState( void ) { return TS_AT_TOP; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetToggleState@CBaseEntity@@UAEHXZ ENDP		; CBaseEntity::GetToggleState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ PROC ; CBaseEntity::MySquadMonsterPointer, COMDAT
; _this$ = ecx

; 399  : 	virtual CSquadMonster *MySquadMonsterPointer( void ) { return NULL;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?MySquadMonsterPointer@CBaseEntity@@UAEPAVCSquadMonster@@XZ ENDP ; CBaseEntity::MySquadMonsterPointer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ PROC ; CBaseEntity::MyMonsterPointer, COMDAT
; _this$ = ecx

; 398  : 	virtual CBaseMonster *MyMonsterPointer( void ) { return NULL;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?MyMonsterPointer@CBaseEntity@@UAEPAVCBaseMonster@@XZ ENDP ; CBaseEntity::MyMonsterPointer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsTriggered@CBaseEntity@@UAEHPAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pActivator$ = 8					; size = 4
?IsTriggered@CBaseEntity@@UAEHPAV1@@Z PROC		; CBaseEntity::IsTriggered, COMDAT
; _this$ = ecx

; 397  : 	virtual BOOL	IsTriggered( CBaseEntity *pActivator ) {return TRUE;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	4
?IsTriggered@CBaseEntity@@UAEHPAV1@@Z ENDP		; CBaseEntity::IsTriggered
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?BloodColor@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BloodColor@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::BloodColor, COMDAT
; _this$ = ecx

; 395  : 	virtual int	BloodColor( void ) { return DONT_BLEED; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	or	eax, -1
	mov	esp, ebp
	pop	ebp
	ret	0
?BloodColor@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::BloodColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pEnt$ = 8						; size = 4
?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z PROC	; CBaseEntity::GetState, COMDAT
; _this$ = ecx

; 388  : 	virtual STATE GetState ( CBaseEntity* pEnt ) { return GetState(); };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetState@CBaseEntity@@UAE?AW4STATE@@PAV1@@Z ENDP	; CBaseEntity::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetState@CBaseEntity@@UAE?AW4STATE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetState@CBaseEntity@@UAE?AW4STATE@@XZ PROC		; CBaseEntity::GetState, COMDAT
; _this$ = ecx

; 385  : 	virtual STATE GetState ( void ) { return STATE_OFF; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?GetState@CBaseEntity@@UAE?AW4STATE@@XZ ENDP		; CBaseEntity::GetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?IsRigidBody@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
?IsRigidBody@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::IsRigidBody, COMDAT
; _this$ = ecx

; 374  : 	virtual BOOL IsRigidBody( void ) { return (m_iActorType == ACTOR_DYNAMIC); } 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1604]
	cmp	ecx, 1
	jne	SHORT $LN3@IsRigidBod
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsRigidBod
$LN3@IsRigidBod:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsRigidBod:
	mov	eax, DWORD PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRigidBody@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::IsRigidBody
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pevChild$ = 8						; size = 4
?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z PROC	; CBaseEntity::DeathNotice, COMDAT
; _this$ = ecx

; 373  : 	virtual void DeathNotice ( entvars_t *pevChild ) { } // monster maker children use this to tell the monster maker that they have died.

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?DeathNotice@CBaseEntity@@UAEXPAUentvars_s@@@Z ENDP	; CBaseEntity::DeathNotice
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Classify@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Classify@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::Classify, COMDAT
; _this$ = ecx

; 372  : 	virtual int Classify ( void ) { return CLASS_NONE; };

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
?Classify@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::Classify
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnRemove@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnRemove@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnRemove, COMDAT
; _this$ = ecx

; 360  : 	virtual void	OnRemove( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnRemove@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnRemove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnClearParent@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnClearParent@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnClearParent, COMDAT
; _this$ = ecx

; 359  : 	virtual void	OnClearParent( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnClearParent@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnClearParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnChangeParent@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnChangeParent@CBaseEntity@@UAEXXZ PROC		; CBaseEntity::OnChangeParent, COMDAT
; _this$ = ecx

; 358  : 	virtual void	OnChangeParent( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeParent@CBaseEntity@@UAEXXZ ENDP		; CBaseEntity::OnChangeParent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetPosition@CBaseEntity@@UAEMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetPosition@CBaseEntity@@UAEMXZ PROC			; CBaseEntity::GetPosition, COMDAT
; _this$ = ecx

; 357  : 	virtual float	GetPosition( void ) { return 0.0f; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	fldz
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPosition@CBaseEntity@@UAEMXZ ENDP			; CBaseEntity::GetPosition
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pPlayer$ = 8						; size = 4
?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z PROC	; CBaseEntity::StartMessage, COMDAT
; _this$ = ecx

; 356  :           virtual void	StartMessage( CBasePlayer *pPlayer ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?StartMessage@CBaseEntity@@UAEXPAVCBasePlayer@@@Z ENDP	; CBaseEntity::StartMessage
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?PortalSleep@CBaseEntity@@UAEXM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_seconds$ = 8						; size = 4
?PortalSleep@CBaseEntity@@UAEXM@Z PROC			; CBaseEntity::PortalSleep, COMDAT
; _this$ = ecx

; 355  : 	virtual void	PortalSleep( float seconds ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?PortalSleep@CBaseEntity@@UAEXM@Z ENDP			; CBaseEntity::PortalSleep
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnTeleport@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnTeleport@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnTeleport, COMDAT
; _this$ = ecx

; 354  : 	virtual void	OnTeleport( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnTeleport@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnTeleport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?OnChangeLevel@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?OnChangeLevel@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::OnChangeLevel, COMDAT
; _this$ = ecx

; 353  : 	virtual void	OnChangeLevel( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?OnChangeLevel@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::OnChangeLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Activate@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Activate@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::Activate, COMDAT
; _this$ = ecx

; 352  : 	virtual void	Activate( void ) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Activate@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::Activate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?ObjectCaps@CBaseEntity@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ObjectCaps@CBaseEntity@@UAEHXZ PROC			; CBaseEntity::ObjectCaps, COMDAT
; _this$ = ecx

; 351  : 	virtual int	ObjectCaps( void ) { return FCAP_ACROSS_TRANSITION; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 2
	mov	esp, ebp
	pop	ebp
	ret	0
?ObjectCaps@CBaseEntity@@UAEHXZ ENDP			; CBaseEntity::ObjectCaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z
_TEXT	SEGMENT
tv139 = -8						; size = 4
_this$ = -4						; size = 4
_pkvd$ = 8						; size = 4
?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z PROC	; CBaseEntity::KeyValue, COMDAT
; _this$ = ecx

; 315  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 316  : 		// get support for spirit field too
; 317  : 		if( FStrEq( pkvd->szKeyName, "parent" ) || FStrEq( pkvd->szKeyName, "movewith" ))

	push	OFFSET ??_C@_06MLKDMCBD@parent@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@KeyValue
	push	OFFSET ??_C@_08JJJAOBDI@movewith@
	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@KeyValue
$LN6@KeyValue:

; 318  : 		{
; 319  : 			m_iParent = ALLOC_STRING(pkvd->szValue);

	mov	ecx, DWORD PTR _pkvd$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+172], eax

; 320  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN4@KeyValue:

; 321  : 		}
; 322  : 		else if( FStrEq( pkvd->szKeyName, "parentflags" ))

	push	OFFSET ??_C@_0M@EAELDHJO@parentflags@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@KeyValue

; 323  : 		{
; 324  : 			m_iParentFlags = Q_atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+176], eax

; 325  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN7@KeyValue:

; 326  : 		}
; 327  : 		else if( FStrEq( pkvd->szKeyName, "style" ))

	push	OFFSET ??_C@_05IAKJCFIM@style@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@KeyValue

; 328  : 		{
; 329  : 			m_iStyle = Q_atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+64], eax

; 330  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	$LN1@KeyValue
$LN9@KeyValue:

; 331  : 		}
; 332  : 		else if( FStrEq( pkvd->szKeyName, "reflection" ))

	push	OFFSET ??_C@_0L@IKCANML@reflection@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@KeyValue

; 333  : 		{
; 334  : 			switch( Q_atoi( pkvd->szValue ))

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	?Q_atoi@@YAHPBD@Z			; Q_atoi
	add	esp, 4
	mov	DWORD PTR tv139[ebp], eax
	cmp	DWORD PTR tv139[ebp], 1
	je	SHORT $LN13@KeyValue
	cmp	DWORD PTR tv139[ebp], 2
	je	SHORT $LN14@KeyValue
	jmp	SHORT $LN2@KeyValue
$LN13@KeyValue:

; 335  : 			{
; 336  : 			case 1: pev->effects |= EF_NOREFLECT; break;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx+280]
	or	eax, 16777216				; 01000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+280], eax
	jmp	SHORT $LN2@KeyValue
$LN14@KeyValue:

; 337  : 			case 2: pev->effects |= EF_REFLECTONLY; break;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+280]
	or	edx, 33554432				; 02000000H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+280], edx
$LN2@KeyValue:

; 338  : 			}
; 339  : 			pkvd->fHandled = TRUE;

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [edx+12], 1
	jmp	SHORT $LN1@KeyValue
$LN11@KeyValue:

; 340  : 		}
; 341  : 		else if( FStrEq(pkvd->szKeyName, "vlight_cache"))

	push	OFFSET ??_C@_0N@JILDNHAP@vlight_cache@
	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@KeyValue

; 342  : 		{
; 343  : 			pev->iuser3 = atoi( pkvd->szValue );

	mov	edx, DWORD PTR _pkvd$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+588], eax

; 344  : 			pkvd->fHandled = TRUE;

	mov	eax, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [eax+12], 1
	jmp	SHORT $LN1@KeyValue
$LN15@KeyValue:

; 345  : 		}
; 346  : 		else pkvd->fHandled = FALSE;

	mov	ecx, DWORD PTR _pkvd$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN1@KeyValue:

; 347  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?KeyValue@CBaseEntity@@UAEXPAUKeyValueData_s@@@Z ENDP	; CBaseEntity::KeyValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Precache@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Precache@CBaseEntity@@UAEXXZ PROC			; CBaseEntity::Precache, COMDAT
; _this$ = ecx

; 313  : 	virtual void	Precache( void ) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Precache@CBaseEntity@@UAEXXZ ENDP			; CBaseEntity::Precache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?Spawn@CBaseEntity@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Spawn@CBaseEntity@@UAEXXZ PROC				; CBaseEntity::Spawn, COMDAT
; _this$ = ecx

; 312  : 	virtual void	Spawn( void ) { }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Spawn@CBaseEntity@@UAEXXZ ENDP				; CBaseEntity::Spawn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?SetClassname@CBaseEntity@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszClassName$ = 8					; size = 4
?SetClassname@CBaseEntity@@QAEXPBD@Z PROC		; CBaseEntity::SetClassname, COMDAT
; _this$ = ecx

; 294  : 	void		SetClassname( const char *pszClassName ) { pev->classname = MAKE_STRING( pszClassName ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+268
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
	mov	esp, ebp
	pop	ebp
	ret	4
?SetClassname@CBaseEntity@@QAEXPBD@Z ENDP		; CBaseEntity::SetClassname
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetDebugName@CBaseEntity@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetDebugName@CBaseEntity@@QAEPBDXZ PROC		; CBaseEntity::GetDebugName, COMDAT
; _this$ = ecx

; 285  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 286  : 		if( this == NULL || pev == NULL )

	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN3@GetDebugNa
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN2@GetDebugNa
$LN3@GetDebugNa:

; 287  : 			return "null";

	mov	eax, OFFSET ??_C@_04MLLLIHIP@null@
	jmp	SHORT $LN1@GetDebugNa
$LN2@GetDebugNa:

; 288  : 
; 289  : 		if( pev->targetname != NULL_STRING ) 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+460], 0
	je	SHORT $LN4@GetDebugNa

; 290  : 			return GetTargetname();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetTargetname@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetTargetname
	jmp	SHORT $LN1@GetDebugNa
$LN4@GetDebugNa:

; 291  : 		return GetClassname();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetClassname@CBaseEntity@@QAEPBDXZ	; CBaseEntity::GetClassname
$LN1@GetDebugNa:

; 292  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?GetDebugName@CBaseEntity@@QAEPBDXZ ENDP		; CBaseEntity::GetDebugName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetTarget@CBaseEntity@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTarget@CBaseEntity@@QAEPBDXZ PROC			; CBaseEntity::GetTarget, COMDAT
; _this$ = ecx

; 278  : 	const char*	GetTarget() { return STRING( pev->target ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+456]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTarget@CBaseEntity@@QAEPBDXZ ENDP			; CBaseEntity::GetTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetTargetname@CBaseEntity@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetTargetname@CBaseEntity@@QAEPBDXZ PROC		; CBaseEntity::GetTargetname, COMDAT
; _this$ = ecx

; 277  : 	const char*	GetTargetname() { return STRING( pev->targetname ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+460]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTargetname@CBaseEntity@@QAEPBDXZ ENDP		; CBaseEntity::GetTargetname
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\cbase.h
;	COMDAT ?GetClassname@CBaseEntity@@QAEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetClassname@CBaseEntity@@QAEPBDXZ PROC		; CBaseEntity::GetClassname, COMDAT
; _this$ = ecx

; 275  : 	const char*	GetClassname() { return STRING( pev->classname ); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	mov	esp, ebp
	pop	ebp
	ret	0
?GetClassname@CBaseEntity@@QAEPBDXZ ENDP		; CBaseEntity::GetClassname
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ??CEHANDLE@@QAEPAVCBaseEntity@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??CEHANDLE@@QAEPAVCBaseEntity@@XZ PROC			; EHANDLE::operator->, COMDAT
; _this$ = ecx

; 90   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 91   : 	return (CBaseEntity *)GET_PRIVATE( Get( ) ); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@EHANDLE@@QAEPAUedict_s@@XZ		; EHANDLE::Get
	push	eax
	call	?GET_PRIVATE@@YAPAXPAUedict_s@@@Z	; GET_PRIVATE
	add	esp, 4

; 92   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??CEHANDLE@@QAEPAVCBaseEntity@@XZ ENDP			; EHANDLE::operator->
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ??BEHANDLE@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
??BEHANDLE@@QAEHXZ PROC					; EHANDLE::operator int, COMDAT
; _this$ = ecx

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 86   : 	return Get() != NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Get@EHANDLE@@QAEPAUedict_s@@XZ		; EHANDLE::Get
	test	eax, eax
	je	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv67[ebp]

; 87   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??BEHANDLE@@QAEHXZ ENDP					; EHANDLE::operator int
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\ehandle.h
;	COMDAT ?Get@EHANDLE@@QAEPAUedict_s@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Get@EHANDLE@@QAEPAUedict_s@@XZ PROC			; EHANDLE::Get, COMDAT
; _this$ = ecx

; 40   : { 

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 41   : 	if( m_pent )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Get

; 42   : 	{
; 43   : #if 0
; 44   : 		// keep client entity always in actual state
; 45   : 		if( ENTINDEX( m_pent ) == 1 )
; 46   : 			m_serialnumber = m_pent->serialnumber;
; 47   : #endif
; 48   : 		if( m_pent->serialnumber == m_serialnumber ) 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN2@Get

; 49   : 			return m_pent; 

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	jmp	SHORT $LN1@Get
$LN2@Get:

; 50   : 	}
; 51   : 
; 52   : 	return NULL; 

	xor	eax, eax
$LN1@Get:

; 53   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Get@EHANDLE@@QAEPAUedict_s@@XZ ENDP			; EHANDLE::Get
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FClassnameIs@@YAHPAUedict_s@@PBD@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
_szClassname$ = 12					; size = 4
?FClassnameIs@@YAHPAUedict_s@@PBD@Z PROC		; FClassnameIs, COMDAT

; 288  : {

	push	ebp
	mov	ebp, esp

; 289  : 	if( FNullEnt( pent )) return FALSE;

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?FNullEnt@@YAHPBUedict_s@@@Z		; FNullEnt
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@FClassname
	xor	eax, eax
	jmp	SHORT $LN1@FClassname
$LN2@FClassname:

; 290  : 	return FStrEq( STRING( VARS( pent )->classname ), szClassname );

	mov	ecx, DWORD PTR _szClassname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pent$[ebp]
	push	edx
	call	?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z	; VARS
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+264
	add	esp, 4
	push	eax
	call	?FStrEq@@YAHPBD0@Z			; FStrEq
	add	esp, 8
$LN1@FClassname:

; 291  : }

	pop	ebp
	ret	0
?FClassnameIs@@YAHPAUedict_s@@PBD@Z ENDP		; FClassnameIs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FStrEq@@YAHPBD0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
_sz1$ = 8						; size = 4
_sz2$ = 12						; size = 4
?FStrEq@@YAHPBD0@Z PROC					; FStrEq, COMDAT

; 286  : 	{ return (Q_strcmp( sz1, sz2 ) == 0); }

	push	ebp
	mov	ebp, esp
	push	ecx
	push	99999					; 0001869fH
	mov	eax, DWORD PTR _sz2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sz1$[ebp]
	push	ecx
	call	?Q_strncmp@@YAHPBD0H@Z			; Q_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@FStrEq
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@FStrEq
$LN3@FStrEq:
	mov	DWORD PTR tv69[ebp], 0
$LN4@FStrEq:
	mov	eax, DWORD PTR tv69[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FStrEq@@YAHPBD0@Z ENDP					; FStrEq
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FStringNull@@YAHH@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_iString$ = 8						; size = 4
?FStringNull@@YAHH@Z PROC				; FStringNull, COMDAT

; 201  : inline BOOL FStringNull(int iString)			{ return iString == iStringNull; }

	push	ebp
	mov	ebp, esp
	push	ecx
	cmp	DWORD PTR _iString$[ebp], 0
	jne	SHORT $LN3@FStringNul
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@FStringNul
$LN3@FStringNul:
	mov	DWORD PTR tv65[ebp], 0
$LN4@FStringNul:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FStringNull@@YAHH@Z ENDP				; FStringNull
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FNullEnt@@YAHPBUedict_s@@@Z
_TEXT	SEGMENT
tv70 = -4						; size = 4
_pent$ = 8						; size = 4
?FNullEnt@@YAHPBUedict_s@@@Z PROC			; FNullEnt, COMDAT

; 195  : inline BOOL FNullEnt(const edict_t* pent)	{ return pent == NULL || FNullEnt(OFFSET(pent)); }

	push	ebp
	mov	ebp, esp
	push	ecx
	cmp	DWORD PTR _pent$[ebp], 0
	je	SHORT $LN3@FNullEnt
	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	?OFFSET@@YAHPBUedict_s@@@Z		; OFFSET
	add	esp, 4
	push	eax
	call	?FNullEnt@@YAHH@Z			; FNullEnt
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@FNullEnt
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@FNullEnt
$LN3@FNullEnt:
	mov	DWORD PTR tv70[ebp], 1
$LN4@FNullEnt:
	mov	eax, DWORD PTR tv70[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FNullEnt@@YAHPBUedict_s@@@Z ENDP			; FNullEnt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?FNullEnt@@YAHH@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
_eoffset$ = 8						; size = 4
?FNullEnt@@YAHH@Z PROC					; FNullEnt, COMDAT

; 194  : inline BOOL FNullEnt(EOFFSET eoffset)			{ return eoffset == 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	cmp	DWORD PTR _eoffset$[ebp], 0
	jne	SHORT $LN3@FNullEnt
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@FNullEnt
$LN3@FNullEnt:
	mov	DWORD PTR tv65[ebp], 0
$LN4@FNullEnt:
	mov	eax, DWORD PTR tv65[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?FNullEnt@@YAHH@Z ENDP					; FNullEnt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z PROC		; VARS, COMDAT

; 178  : { 

	push	ebp
	mov	ebp, esp

; 179  : 	if ( !pent )

	cmp	DWORD PTR _pent$[ebp], 0
	jne	SHORT $LN2@VARS

; 180  : 		return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@VARS
$LN2@VARS:

; 181  : 
; 182  : 	return &pent->v; 

	mov	eax, DWORD PTR _pent$[ebp]
	add	eax, 128				; 00000080H
$LN1@VARS:

; 183  : }

	pop	ebp
	ret	0
?VARS@@YAPAUentvars_s@@PAUedict_s@@@Z ENDP		; VARS
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?OFFSET@@YAHPBUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?OFFSET@@YAHPBUedict_s@@@Z PROC				; OFFSET, COMDAT

; 160  : { 

	push	ebp
	mov	ebp, esp

; 161  : #if _DEBUG
; 162  : 	if ( !pent )

	cmp	DWORD PTR _pent$[ebp], 0
	jne	SHORT $LN2@OFFSET

; 163  : 		ALERT( at_error, "Bad ent in OFFSET()\n" );

	push	OFFSET ??_C@_0BF@CPEPILID@Bad?5ent?5in?5OFFSET?$CI?$CJ?6@
	push	4
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+244
	add	esp, 8
$LN2@OFFSET:

; 164  : #endif
; 165  : 	return (*g_engfuncs.pfnEntOffsetOfPEntity)(pent); 

	mov	eax, DWORD PTR _pent$[ebp]
	push	eax
	call	DWORD PTR ?g_engfuncs@@3Uenginefuncs_s@@A+280
	add	esp, 4

; 166  : }

	pop	ebp
	ret	0
?OFFSET@@YAHPBUedict_s@@@Z ENDP				; OFFSET
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\util.h
;	COMDAT ?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z
_TEXT	SEGMENT
_pev$ = 8						; size = 4
?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z PROC		; ENT, COMDAT

; 151  : 	inline edict_t *ENT(const entvars_t *pev)	{ return DBG_EntOfVars(pev); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _pev$[ebp]
	push	eax
	call	?DBG_EntOfVars@@YAPAUedict_s@@PBUentvars_s@@@Z ; DBG_EntOfVars
	add	esp, 4
	pop	ebp
	ret	0
?ENT@@YAPAUedict_s@@PBUentvars_s@@@Z ENDP		; ENT
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0IEntityFactory@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0IEntityFactory@@QAE@XZ PROC				; IEntityFactory::IEntityFactory, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IEntityFactory@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0IEntityFactory@@QAE@XZ ENDP				; IEntityFactory::IEntityFactory
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 161  : 		m_pElements = Base();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Base
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 162  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ PROC	; CUtlMemory<char *,int>::ValidateGrowSize, COMDAT
; _this$ = ecx

; 148  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 149  : #ifdef _X360
; 150  : 		if ( m_nGrowSize && m_nGrowSize != EXTERNAL_BUFFER_MARKER )
; 151  : 		{
; 152  : 			// Max grow size at 128 bytes on XBOX
; 153  : 			const int MAX_GROW = 128;
; 154  : 			if ( m_nGrowSize * sizeof(T) > MAX_GROW )
; 155  : 			{
; 156  : 				m_nGrowSize = max( 1, MAX_GROW / sizeof(T) );
; 157  : 			}
; 158  : 		}
; 159  : #endif
; 160  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ ENDP	; CUtlMemory<char *,int>::ValidateGrowSize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ PROC		; CUtlMemory<char *,int>::IsReadOnly, COMDAT
; _this$ = ecx

; 467  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 468  : 	return (m_nGrowSize == EXTERNAL_CONST_BUFFER_MARKER);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -2			; fffffffeH
	jne	SHORT $LN3@IsReadOnly
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@IsReadOnly
$LN3@IsReadOnly:
	mov	DWORD PTR tv66[ebp], 0
$LN4@IsReadOnly:
	mov	al, BYTE PTR tv66[ebp]

; 469  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ ENDP		; CUtlMemory<char *,int>::IsReadOnly
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv66 = -4						; size = 4
?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ PROC	; CUtlMemory<char *,int>::IsExternallyAllocated, COMDAT
; _this$ = ecx

; 457  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 458  : 	return (m_nGrowSize < 0);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jge	SHORT $LN3@IsExternal
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@IsExternal
$LN3@IsExternal:
	mov	DWORD PTR tv66[ebp], 0
$LN4@IsExternal:
	mov	al, BYTE PTR tv66[ebp]

; 459  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ ENDP	; CUtlMemory<char *,int>::IsExternallyAllocated
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?Purge@?$CUtlMemory@PADH@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Purge@?$CUtlMemory@PADH@@QAEXXZ PROC			; CUtlMemory<char *,int>::Purge, COMDAT
; _this$ = ecx

; 645  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 646  : 	if ( !IsExternallyAllocated() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsExternallyAllocated@?$CUtlMemory@PADH@@QBE_NXZ ; CUtlMemory<char *,int>::IsExternallyAllocated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Purge

; 647  : 	{
; 648  : 		if (m_pMemory)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Purge

; 649  : 		{
; 650  : 			free( (void*)m_pMemory );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_free
	add	esp, 4

; 651  : 			m_pMemory = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
$LN3@Purge:

; 652  : 		}
; 653  : 		m_nAllocationCount = 0;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@Purge:

; 654  : 	}
; 655  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Purge@?$CUtlMemory@PADH@@QAEXXZ ENDP			; CUtlMemory<char *,int>::Purge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?Base@?$CUtlMemory@PADH@@QAEPAPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Base@?$CUtlMemory@PADH@@QAEPAPADXZ PROC		; CUtlMemory<char *,int>::Base, COMDAT
; _this$ = ecx

; 487  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 488  : 	assert( !IsReadOnly() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ	; CUtlMemory<char *,int>::IsReadOnly
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Base
	push	488					; 000001e8H
	push	OFFSET ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
	push	OFFSET ??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Base:

; 489  : 	return m_pMemory;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]

; 490  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Base@?$CUtlMemory@PADH@@QAEPAPADXZ ENDP		; CUtlMemory<char *,int>::Base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv67 = -4						; size = 4
_i$ = 8							; size = 4
?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z PROC		; CUtlMemory<char *,int>::IsIdxValid, COMDAT
; _this$ = ecx

; 520  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 521  : 	return ( ((int) i) >= 0 ) && ( ((int) i) < m_nAllocationCount );

	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN3@IsIdxValid
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@IsIdxValid
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsIdxValid
$LN3@IsIdxValid:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsIdxValid:
	mov	al, BYTE PTR tv67[ebp]

; 522  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z ENDP		; CUtlMemory<char *,int>::IsIdxValid
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??A?$CUtlMemory@PADH@@QAEAAPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??A?$CUtlMemory@PADH@@QAEAAPADH@Z PROC			; CUtlMemory<char *,int>::operator[], COMDAT
; _this$ = ecx

; 423  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 424  : 	assert( !IsReadOnly() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsReadOnly@?$CUtlMemory@PADH@@QBE_NXZ	; CUtlMemory<char *,int>::IsReadOnly
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	push	424					; 000001a8H
	push	OFFSET ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
	push	OFFSET ??_C@_1BM@PFNFCCHH@?$AA?$CB?$AAI?$AAs?$AAR?$AAe?$AAa?$AAd?$AAO?$AAn?$AAl?$AAy?$AA?$CI?$AA?$CJ@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 425  : 	assert( IsIdxValid(i) );

	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?IsIdxValid@?$CUtlMemory@PADH@@QBE_NH@Z	; CUtlMemory<char *,int>::IsIdxValid
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@operator
	push	425					; 000001a9H
	push	OFFSET ??_C@_1MO@LCPOAHHB@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAu?$AAs?$AAe?$AAr?$AA?2?$AAd@
	push	OFFSET ??_C@_1BM@CKILBAKK@?$AAI?$AAs?$AAI?$AAd?$AAx?$AAV?$AAa?$AAl?$AAi?$AAd?$AA?$CI?$AAi?$AA?$CJ@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@operator:

; 426  : 	return m_pMemory[i];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]

; 427  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CUtlMemory@PADH@@QAEAAPADH@Z ENDP			; CUtlMemory<char *,int>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??1?$CUtlMemory@PADH@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CUtlMemory@PADH@@QAE@XZ PROC			; CUtlMemory<char *,int>::~CUtlMemory<char *,int>, COMDAT
; _this$ = ecx

; 322  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CUtlMemory@PADH@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 323  : 	Purge();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@?$CUtlMemory@PADH@@QAEXXZ	; CUtlMemory<char *,int>::Purge

; 324  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CUtlMemory@PADH@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CUtlMemory@PADH@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CUtlMemory@PADH@@QAE@XZ ENDP			; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlmemory.h
;	COMDAT ??0?$CUtlMemory@PADH@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nGrowSize$ = 8						; size = 4
_nInitAllocationCount$ = 12				; size = 4
??0?$CUtlMemory@PADH@@QAE@HH@Z PROC			; CUtlMemory<char *,int>::CUtlMemory<char *,int>, COMDAT
; _this$ = ecx

; 295  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 293  : CUtlMemory<T,I>::CUtlMemory( int nGrowSize, int nInitAllocationCount ) : m_pMemory(0), 

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 294  : 	m_nAllocationCount( nInitAllocationCount ), m_nGrowSize( nGrowSize )

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _nInitAllocationCount$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nGrowSize$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 296  : 	ValidateGrowSize();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ValidateGrowSize@?$CUtlMemory@PADH@@IAEXXZ ; CUtlMemory<char *,int>::ValidateGrowSize

; 297  : 	assert( nGrowSize >= 0 );

	cmp	DWORD PTR _nGrowSize$[ebp], 0
	jge	SHORT $LN4@CUtlMemory
	push	297					; 00000129H
	push	OFFSET $SG75155
	push	OFFSET $SG75156
	call	__wassert
	add	esp, 12					; 0000000cH
$LN4@CUtlMemory:

; 298  : 	if (m_nAllocationCount)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@CUtlMemory

; 299  : 	{
; 300  : 		m_pMemory = (T*)malloc( m_nAllocationCount * sizeof(T) );

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 2
	push	edx
	call	_malloc
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
$LN1@CUtlMemory:

; 301  : 	}
; 302  : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$CUtlMemory@PADH@@QAE@HH@Z ENDP			; CUtlMemory<char *,int>::CUtlMemory<char *,int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::Purge, COMDAT
; _this$ = ecx

; 742  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 743  : 	RemoveAll();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll

; 744  : 	m_Memory.Purge();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@?$CUtlMemory@PADH@@QAEXXZ	; CUtlMemory<char *,int>::Purge

; 745  : 	ResetDbgInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo

; 746  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::Purge
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$1 = -4						; size = 4
?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll, COMDAT
; _this$ = ecx

; 726  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 727  : 	for (int i = m_Size; --i >= 0; )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _i$1[ebp], ecx
$LN4@RemoveAll:
	mov	edx, DWORD PTR _i$1[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$1[ebp], edx
	js	SHORT $LN3@RemoveAll

; 728  : 	{
; 729  : 		Destruct(&Element(i));

	mov	eax, DWORD PTR _i$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::Element
	push	eax
	call	??$Destruct@PAD@@YAXPAPAD@Z		; Destruct<char *>
	add	esp, 4

; 730  : 	}

	jmp	SHORT $LN4@RemoveAll
$LN3@RemoveAll:

; 731  : 
; 732  : 	m_Size = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0

; 733  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?RemoveAll@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::RemoveAll
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::Count, COMDAT
; _this$ = ecx

; 344  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 345  : 	return m_Size;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]

; 346  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::Count
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::Base, COMDAT
; _this$ = ecx

; 60   : 	T* Base()								{ return m_Memory.Base(); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Base@?$CUtlMemory@PADH@@QAEPAPADXZ	; CUtlMemory<char *,int>::Base
	mov	esp, ebp
	pop	ebp
	ret	0
?Base@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEPAPADXZ ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::Base
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::Element, COMDAT
; _this$ = ecx

; 294  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 295  : 	return m_Memory[ i ];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CUtlMemory@PADH@@QAEAAPADH@Z	; CUtlMemory<char *,int>::operator[]

; 296  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Element@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::Element
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_i$ = 8							; size = 4
??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z PROC ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[], COMDAT
; _this$ = ecx

; 282  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 	return m_Memory[ i ];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??A?$CUtlMemory@PADH@@QAEAAPADH@Z	; CUtlMemory<char *,int>::operator[]

; 284  : }

	mov	esp, ebp
	pop	ebp
	ret	4
??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ENDP ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >, COMDAT
; _this$ = ecx

; 260  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 261  : 	Purge();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Purge@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Purge

; 262  : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$CUtlMemory@PADH@@QAE@XZ		; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\utlarray.h
;	COMDAT ??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_growSize$ = 8						; size = 4
_initSize$ = 12						; size = 4
??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z PROC	; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >, COMDAT
; _this$ = ecx

; 247  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 246  : 	m_Memory(growSize, initSize), m_Size(0)

	mov	eax, DWORD PTR _initSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _growSize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$CUtlMemory@PADH@@QAE@HH@Z		; CUtlMemory<char *,int>::CUtlMemory<char *,int>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0

; 248  : 	ResetDbgInfo();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ResetDbgInfo@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@IAEXXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::ResetDbgInfo

; 249  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CUtlMemory@PADH@@QAE@XZ		; CUtlMemory<char *,int>::~CUtlMemory<char *,int>
__ehhandler$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z ENDP	; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\common\datamap.h
;	COMDAT ??1CDatadescGeneratedNameHolder@@QAE@XZ
_TEXT	SEGMENT
$T2 = -24						; size = 4
_this$ = -20						; size = 4
_i$3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CDatadescGeneratedNameHolder@@QAE@XZ PROC		; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder, COMDAT
; _this$ = ecx

; 197  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1CDatadescGeneratedNameHolder@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 198  : 		for( int i = 0; i < m_Names.Count(); i++ )

	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN4@CDatadescG
$LN2@CDatadescG:
	mov	eax, DWORD PTR _i$3[ebp]
	add	eax, 1
	mov	DWORD PTR _i$3[ebp], eax
$LN4@CDatadescG:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?Count@?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QBEHXZ ; CUtlArray<char *,CUtlMemory<char *,int> >::Count
	cmp	DWORD PTR _i$3[ebp], eax
	jge	SHORT $LN1@CDatadescG

; 199  : 		{
; 200  : 			delete m_Names[i];

	mov	ecx, DWORD PTR _i$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??A?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAEAAPADH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::operator[]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], edx
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 201  : 		}

	jmp	SHORT $LN2@CDatadescG
$LN1@CDatadescG:

; 202  : 	}

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@XZ ; CUtlArray<char *,CUtlMemory<char *,int> >::~CUtlArray<char *,CUtlMemory<char *,int> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1CDatadescGeneratedNameHolder@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1CDatadescGeneratedNameHolder@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1CDatadescGeneratedNameHolder@@QAE@XZ ENDP		; CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\common\datamap.h
;	COMDAT ??0CDatadescGeneratedNameHolder@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pszBase$ = 8						; size = 4
??0CDatadescGeneratedNameHolder@@QAE@PBD@Z PROC		; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder, COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 191  : 	CDatadescGeneratedNameHolder( const char *pszBase ) : m_pszBase(pszBase)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pszBase$[ebp]
	mov	DWORD PTR [eax], ecx

; 192  : 	{

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$CUtlArray@PADV?$CUtlMemory@PADH@@@@QAE@HH@Z ; CUtlArray<char *,CUtlMemory<char *,int> >::CUtlArray<char *,CUtlMemory<char *,int> >

; 193  : 		m_nLenBase = strlen( m_pszBase ) + 2;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 194  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0CDatadescGeneratedNameHolder@@QAE@PBD@Z ENDP		; CDatadescGeneratedNameHolder::CDatadescGeneratedNameHolder
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\server\enginecallback.h
;	COMDAT ?GET_PRIVATE@@YAPAXPAUedict_s@@@Z
_TEXT	SEGMENT
_pent$ = 8						; size = 4
?GET_PRIVATE@@YAPAXPAUedict_s@@@Z PROC			; GET_PRIVATE, COMDAT

; 101  : {

	push	ebp
	mov	ebp, esp

; 102  : 	if ( pent )

	cmp	DWORD PTR _pent$[ebp], 0
	je	SHORT $LN2@GET_PRIVAT

; 103  : 		return pent->pvPrivateData;

	mov	eax, DWORD PTR _pent$[ebp]
	mov	eax, DWORD PTR [eax+124]
	jmp	SHORT $LN1@GET_PRIVAT
$LN2@GET_PRIVAT:

; 104  : 	return NULL;

	xor	eax, eax
$LN1@GET_PRIVAT:

; 105  : }

	pop	ebp
	ret	0
?GET_PRIVATE@@YAPAXPAUedict_s@@@Z ENDP			; GET_PRIVATE
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ?Normalize@Vector@@QBE?AV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
_flLen$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Normalize@Vector@@QBE?AV1@XZ PROC			; Vector::Normalize, COMDAT
; _this$ = ecx

; 229  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 230  : 		float flLen = Length();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Length@Vector@@QBEMXZ			; Vector::Length
	fstp	DWORD PTR _flLen$[ebp]

; 231  : 
; 232  : 		if( flLen )

	movss	xmm0, DWORD PTR _flLen$[ebp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	lahf
	test	ah, 68					; 00000044H
	jnp	SHORT $LN2@Normalize

; 233  : 		{
; 234  : 			flLen = 1.0f / flLen;

	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR _flLen$[ebp]
	movss	DWORD PTR _flLen$[ebp], xmm0

; 235  : 			return Vector( x * flLen, y * flLen, z * flLen );

	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _flLen$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _flLen$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _flLen$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN1@Normalize
$LN2@Normalize:

; 236  : 		}
; 237  : 
; 238  : 		return *this; // can't normalize

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@ABV0@@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@Normalize:

; 239  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
?Normalize@Vector@@QBE?AV1@XZ ENDP			; Vector::Normalize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ?Length@Vector@@QBEMXZ
_TEXT	SEGMENT
tv91 = -8						; size = 4
_this$ = -4						; size = 4
?Length@Vector@@QBEMXZ PROC				; Vector::Length, COMDAT
; _this$ = ecx

; 223  : 	inline float Length(void) const		{ return sqrt( x*x + y*y + z*z ); }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+4]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+8]
	mulss	xmm1, DWORD PTR [edx+8]
	addss	xmm0, xmm1
	cvtss2sd xmm0, xmm0
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR tv91[ebp]
	fld	DWORD PTR tv91[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Vector@@QBEMXZ ENDP				; Vector::Length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??DVector@@QBE?AV0@M@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_fl$ = 12						; size = 4
??DVector@@QBE?AV0@M@Z PROC				; Vector::operator*, COMDAT
; _this$ = ecx

; 150  : 	inline Vector operator*(float fl) const		{ return Vector(x*fl, y*fl, z*fl);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR _fl$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??DVector@@QBE?AV0@M@Z ENDP				; Vector::operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??GVector@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??GVector@@QBE?AV0@ABV0@@Z PROC				; Vector::operator-, COMDAT
; _this$ = ecx

; 147  : 	inline Vector operator-(const Vector& v) const	{ return Vector(x-v.x, y-v.y, z-v.z);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	subss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	subss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??GVector@@QBE?AV0@ABV0@@Z ENDP				; Vector::operator-
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??HVector@@QBE?AV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HVector@@QBE?AV0@ABV0@@Z PROC				; Vector::operator+, COMDAT
; _this$ = ecx

; 146  : 	inline Vector operator+(const Vector& v) const	{ return Vector(x+v.x, y+v.y, z+v.z);	   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	addss	xmm0, DWORD PTR [ecx+8]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	addss	xmm0, DWORD PTR [eax+4]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR [edx]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector@@QAE@MMM@Z			; Vector::Vector
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??HVector@@QBE?AV0@ABV0@@Z ENDP				; Vector::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??9Vector@@QBEHABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv68 = -4						; size = 4
_v$ = 8							; size = 4
??9Vector@@QBEHABV0@@Z PROC				; Vector::operator!=, COMDAT
; _this$ = ecx

; 145  : 	inline int operator!=(const Vector& v) const	{ return !(*this==v);		   }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8Vector@@QBEHABV0@@Z			; Vector::operator==
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv68[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??9Vector@@QBEHABV0@@Z ENDP				; Vector::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??8Vector@@QBEHABV0@@Z
_TEXT	SEGMENT
tv73 = -8						; size = 4
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??8Vector@@QBEHABV0@@Z PROC				; Vector::operator==, COMDAT
; _this$ = ecx

; 144  : 	inline int operator==(const Vector& v) const	{ return x==v.x && y==v.y && z==v.z;	   }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [eax]
	ucomiss	xmm0, DWORD PTR [ecx]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [edx+4]
	ucomiss	xmm0, DWORD PTR [eax+4]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	ucomiss	xmm0, DWORD PTR [edx+8]
	lahf
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv73[ebp], 0
$LN4@operator:
	mov	eax, DWORD PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??8Vector@@QBEHABV0@@Z ENDP				; Vector::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??0Vector@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_v$ = 8							; size = 4
??0Vector@@QAE@ABV0@@Z PROC				; Vector::Vector, COMDAT
; _this$ = ecx

; 133  : 	inline Vector(const Vector& v)		{ x = v.x; y = v.y; z = v.z;		   }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Vector@@QAE@ABV0@@Z ENDP				; Vector::Vector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??0Vector@@QAE@MMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_X$ = 8							; size = 4
_Y$ = 12						; size = 4
_Z$ = 16						; size = 4
??0Vector@@QAE@MMM@Z PROC				; Vector::Vector, COMDAT
; _this$ = ecx

; 132  : 	inline Vector(float X, float Y, float Z)	{ x = X; y = Y; z = Z;                     }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _X$[ebp]
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _Z$[ebp]
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0Vector@@QAE@MMM@Z ENDP				; Vector::Vector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\user\downloads\xashxt_v0.81_rev.1_with_sources\xashxt_v0.81_rev.1_src\game_shared\vector.h
;	COMDAT ??0Vector@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Vector@@QAE@XZ PROC					; Vector::Vector, COMDAT
; _this$ = ecx

; 131  : 	inline Vector(void)				{ }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector@@QAE@XZ ENDP					; Vector::Vector
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__G@YGXPAX0IIP6EPAX00@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___u$ = 12						; size = 4
___s$ = 16						; size = 4
___n$ = 20						; size = 4
___f$ = 24						; size = 4
??__G@YGXPAX0IIP6EPAX00@Z@Z PROC			; `vector copy constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN1@vector
	mov	edx, DWORD PTR ___u$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	mov	ecx, DWORD PTR ___u$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___u$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN1@vector:
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??__G@YGXPAX0IIP6EPAX00@Z@Z ENDP			; `vector copy constructor iterator'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIIP6EPAX0@Z@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIIP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR ___n$[ebp]
	sub	ecx, 1
	mov	DWORD PTR ___n$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	jbe	SHORT $LN1@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	edx, DWORD PTR ___t$[ebp]
	add	edx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], edx
	jmp	SHORT $LN2@vector
$LN1@vector:
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIIP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
